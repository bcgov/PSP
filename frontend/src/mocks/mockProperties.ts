import { PropertyClassificationTypes } from 'constants/propertyClassificationTypes';
import { PropertyDataSourceTypes } from 'constants/propertyDataSourceTypes';
import { PropertyStatusTypes } from 'constants/propertyStatusTypes';
import { PropertyTenureTypes } from 'constants/propertyTenureTypes';
import { IProperty } from 'interfaces';
import { mockAddress } from 'mocks';

export const getMockProperties = () =>
  [
    {
      id: 1,
      pid: '000-000-000',
      pin: '',
      statusId: PropertyStatusTypes.UnderAdmin,
      dataSourceId: PropertyDataSourceTypes.PAIMS,
      dataSourceEffectiveDate: '2021-08-30T17:28:17.655Z',
      classificationId: PropertyClassificationTypes.CoreOperational,
      tenureId: PropertyTenureTypes.HighwayRoad,
      zoning: '',
      zoningPotential: '',
      encumbranceReason: '',
      isSensitive: false,
      latitude: 48,
      longitude: 123,
      name: 'test name',
      description: 'test',
      addressId: mockAddress.id,
      address: { ...mockAddress },
      landArea: 123,
      landLegalDescription: 'test description',
    },
    {
      id: 2,
      pid: '000-000-001',
      pin: '',
      statusId: PropertyStatusTypes.UnderAdmin,
      dataSourceId: PropertyDataSourceTypes.PAIMS,
      dataSourceEffectiveDate: '2021-08-30T18:14:13.170Z',
      classificationId: PropertyClassificationTypes.CoreOperational,
      tenureId: PropertyTenureTypes.HighwayRoad,
      zoning: '',
      zoningPotential: '',
      encumbranceReason: '',
      isSensitive: false,
      latitude: 49,
      longitude: 123,
      name: 'test name',
      description: 'test',
      addressId: mockAddress.id,
      address: { ...mockAddress },
      landArea: 123,
      landLegalDescription: 'test description',
    },
    {
      id: 100,
      pid: '000-000-002',
      pin: '',
      statusId: PropertyStatusTypes.UnderAdmin,
      dataSourceId: PropertyDataSourceTypes.PAIMS,
      dataSourceEffectiveDate: '2021-08-30T18:14:13.170Z',
      classificationId: PropertyClassificationTypes.CoreOperational,
      tenureId: PropertyTenureTypes.HighwayRoad,
      zoning: '',
      zoningPotential: '',
      encumbranceReason: '',
      isSensitive: false,
      latitude: 48,
      longitude: 123,
      name: 'test name',
      description: 'test',
      addressId: mockAddress.id,
      address: { ...mockAddress },
      landArea: 123,
      landLegalDescription: 'test description',
    },
  ] as IProperty[];
