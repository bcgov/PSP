import variables from '_variables.module.scss';
import TooltipIcon from 'components/common/TooltipIcon';
import React, { FunctionComponent } from 'react';
import Button from 'react-bootstrap/Button';
import Container from 'react-bootstrap/Container';
import Modal from 'react-bootstrap/Modal';
import ModalDialog from 'react-bootstrap/ModalDialog';
import Draggable from 'react-draggable';
import { useAppSelector } from 'store/hooks';
import { useTenants } from 'store/slices/tenants';
import styled from 'styled-components';

import HelpModalContentContainer from '../containers/HelpModalContentContainer';
import IMailMessage from './IMailMessage';

interface IModalProps {
  /** Function to be executed when the cancel button is clicked  */
  handleCancel: () => void;
  /** Function to be executed when the submit button is clicked */
  handleSubmit: () => void;
  /** External state var to track whether or not this modal is being shown. */
  show: boolean;
}

/**
 * Help component used to display a modal interface with help text and the ability to create a mailto ticket.
 *
 * Chrome has added some protection such that mailto links generated by JS cannot be fired without direct user input.
 * In addition, Chrome caches mailto link values so updating the href after initial load will not be ignored unless the component
 * with the href is removed from the dom completely.
 * Displaying the temporary disabled submit button until the mailto address is determined will resolve this issue.
 *
 * @param props customize the component with custom text, and an operation to take when the component is closed.
 */
const HelpModal: FunctionComponent<IModalProps> = ({ handleCancel, handleSubmit, show }) => {
  const tenantsState = useAppSelector(state => state.tenants);
  const { getSettings } = useTenants();
  const [mailto, setMailto] = React.useState<IMailMessage | undefined>(undefined);
  const config = tenantsState?.config;

  React.useEffect(() => {
    const update = async () => {
      if (!config) {
        await getSettings(); // TODO: Determine why the HelpModal is being created two times, which results in two requests to the API.
      }
    };
    update();
  }, [getSettings, config]);

  return (
    <Container>
      <ModalStyled dialogAs={DraggableModalDialog} show={show} onHide={handleCancel}>
        <ModalHeader closeButton>
          <DraggableTitle>
            Help Desk&nbsp;
            <StyledTooltip toolTipId="help-toolTip" toolTip="Click and drag to move this popup" />
          </DraggableTitle>
        </ModalHeader>

        <Modal.Body>
          <HelpModalContentContainer setMailto={setMailto} />
        </Modal.Body>

        <Modal.Footer>
          {config?.settings.helpDeskEmail ? (
            <Button
              href={`mailto:${config?.settings.helpDeskEmail}?subject=${mailto?.subject}&body=${mailto?.body}`}
              onClick={() => {
                handleSubmit();
              }}
            >
              Submit
            </Button>
          ) : (
            <Button disabled>Submit</Button>
          )}
          <Button variant="secondary" onClick={handleCancel}>
            Cancel
          </Button>
        </Modal.Footer>
      </ModalStyled>
    </Container>
  );
};

/**
 * This wrapper component allows this dialog to be dragged by clicking and dragging the modal header.
 */
const DraggableModalDialog = (props: any) => {
  return (
    <Draggable handle=".modal-title">
      <ModalDialog {...props} />
    </Draggable>
  );
};

/**
 * Stylize the modal component.
 */
const ModalStyled = styled(Modal)`
  .close {
    color: white;
    text-shadow: 0 0.1rem 0 #000;
    opacity: 0.9;
  }
  .modal-body {
    max-height: calc(100vh - 20rem);
    overflow-y: auto;
  }
`;

const DraggableTitle = styled(Modal.Title)`
  width: 100%;
  cursor: pointer;
  color: white;
`;

const ModalHeader = styled(Modal.Header)`
  background-color: ${variables.primaryColor};
  padding: 0.5rem;
`;

const StyledTooltip = styled(TooltipIcon)`
  margin-left: 0.5rem;
  margin-bottom: 0.5rem;
`;

export default HelpModal;
