using Pims.Tools.TsModelGenerator.Converter;
using Pims.Tools.TsModelGenerator.Specifications;
using Pims.Tools.TsModelGenerator.Storage;
using TypeGen.Core.Generator;

namespace Pims.Tools.TsModelGenerator
{
    public class TsGenerator
    {
        public void Generate()
        {
            const string outputPath = "../../source/frontend/src/models/api/generated";

            var generationSpec = new PimsGenerationSpec();

            var typeNameConverter = new FileNameConverter();
            var fileNameConverter = new FileNameConverter();
            var enumValueConverter = new EnumValueConverter();

            var frontendApiPath = outputPath;
            var options = new GeneratorOptions();

            FileSystem.ClearDirectory(outputPath);

            options.BaseOutputDirectory = $"{frontendApiPath}";
            options.TypeNameConverters.Add(typeNameConverter);
            options.FileNameConverters = [fileNameConverter];
            options.EnumStringInitializersConverters = [enumValueConverter];
            options.EnumStringInitializers = true;
            options.TabLength = 2;
            options.FileHeading = $"/**\n * File autogenerated by TsGenerator.\n * Do not manually modify, changes made to this file will be lost when this file is regenerated.\n */\n";
            options.CreateIndexFile = false;

            var generator = new Generator(options);

            var result = generator.Generate(generationSpec);

            Console.WriteLine("Generated Files:");
            foreach (var line in result)
            {
                Console.WriteLine($"\t{line}");
            }
        }
    }
}