<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/15/2023 2:49:43 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="ARIMA-DELL"
  DTS:CreatorName="ARIMA-DELL\smart"
  DTS:DTSID="{D05FA366-81DD-4AB4-8FAD-34ECF31A8898}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5270.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="18"
  DTS:VersionGUID="{B74CB7AB-E4A6-442D-9D21-84E01FA69064}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PIMS]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{9F7D64E5-8609-4E90-B349-2644A16FDD58}"
      DTS:ObjectName="PIMS">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=sqldevtst.th.gov.bc.ca;User ID=PIMS_TST;Initial Catalog=PIMS_TST;Provider=SQLOLEDB.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Package-{9F7D64E5-8609-4E90-B349-2644A16FDD58}sqldevtst.th.gov.bc.ca.PIMS_DEV;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"></DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\STEP1-DISABLE-FK"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4D7F694F-E92C-40CE-B0DE-4C1B5A1AF4BF}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="STEP1-DISABLE-FK"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9F7D64E5-8609-4E90-B349-2644A16FDD58}"
          SQLTask:SqlStatementSource="BEGIN&#xA;    DECLARE @ConstraintName NVARCHAR(200);&#xA;    DECLARE @Sql NVARCHAR(MAX);&#xA;    DECLARE @CheckOption NVARCHAR(10);&#xA;    DECLARE @TableName NVARCHAR(50);   &#xA; &#xA; &#xA;    SET @CheckOption = 'NOCHECK';&#xA;    set @TableName = 'PIMS_PROPERTY';&#xA; &#xA;    -- Get the OBJECT_ID for the table&#xA;    DECLARE @TableObjectId INT;&#xA;    SET @TableObjectId = OBJECT_ID(@TableName);&#xA; &#xA;    -- Declare a cursor to loop through the constraints that belong to the specified table&#xA;    DECLARE cursor_constraints CURSOR FOR&#xA;    SELECT&#xA;        name AS ConstraintName&#xA;    FROM sys.foreign_keys&#xA;    WHERE parent_object_id = @TableObjectId;&#xA; &#xA;    -- Open the cursor&#xA;    OPEN cursor_constraints;&#xA; &#xA;    -- Fetch the first row&#xA;    FETCH NEXT FROM cursor_constraints INTO @ConstraintName;&#xA; &#xA;    -- Loop through the constraints&#xA;    WHILE @@FETCH_STATUS = 0&#xA;    BEGIN&#xA;        -- Build the dynamic SQL statement based on the @CheckOption parameter&#xA;        IF @CheckOption = 'CHECK'&#xA;        BEGIN&#xA;             SET @Sql = 'ALTER TABLE ' + QUOTENAME(@TableName) + ' WITH CHECK CHECK CONSTRAINT ' + QUOTENAME(@ConstraintName);&#xA;            --PRINT @ConstraintName&#xA;        END&#xA;        ELSE IF @CheckOption = 'NOCHECK'&#xA;        BEGIN&#xA;             SET @Sql = 'ALTER TABLE ' + QUOTENAME(@TableName) + ' NOCHECK CONSTRAINT ' + QUOTENAME(@ConstraintName);&#xA;            --PRINT @ConstraintName&#xA;        END&#xA; &#xA;        -- Execute the dynamic SQL&#xA;        EXEC sp_executesql @Sql;&#xA; &#xA;        -- Fetch the next row&#xA;        FETCH NEXT FROM cursor_constraints INTO @ConstraintName;&#xA;    END&#xA; &#xA;    -- Close and deallocate the cursor&#xA;    CLOSE cursor_constraints;&#xA;    DEALLOCATE cursor_constraints;&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\STEP2-MERGE"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4fc3f2f3-e874-4f16-bff9-e3fef5a6a5ed}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="STEP2-MERGE"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9F7D64E5-8609-4E90-B349-2644A16FDD58}"
          SQLTask:SqlStatementSource="-- Step 1: Find Duplicate PIDs&#xA;WITH DuplicatePIDs AS (&#xA;    SELECT PID&#xA;    FROM DBO.PIMS_PROPERTY&#xA;    WHERE PID IS NOT NULL&#xA;    GROUP BY PID&#xA;    HAVING COUNT(*) &gt; 1&#xA;)&#xA; &#xA;-- Step 2: Process Duplicate PIDs, MERGE and insert into dbo.PIMS_PROPERTY&#xA;INSERT INTO dbo.PIMS_PROPERTY (&#xA;    [PROPERTY_ID]&#xA;           ,[PROPERTY_MANAGER_ID]&#xA;           ,[PROP_MGMT_ORG_ID]&#xA;           ,[PROPERTY_TYPE_CODE]&#xA;           ,[PROPERTY_CLASSIFICATION_TYPE_CODE]&#xA;           ,[ADDRESS_ID]&#xA;           ,[REGION_CODE]&#xA;           ,[DISTRICT_CODE]&#xA;           ,[PROPERTY_AREA_UNIT_TYPE_CODE]&#xA;           ,[PROPERTY_DATA_SOURCE_TYPE_CODE]&#xA;           ,[PROPERTY_STATUS_TYPE_CODE]&#xA;           ,[SURPLUS_DECLARATION_TYPE_CODE]&#xA;           ,[VOLUMETRIC_TYPE_CODE]&#xA;           ,[VOLUME_UNIT_TYPE_CODE]&#xA;           ,[PPH_STATUS_TYPE_CODE]&#xA;           ,[PROPERTY_DATA_SOURCE_EFFECTIVE_DATE]&#xA;           ,[NAME]&#xA;           ,[DESCRIPTION]&#xA;           ,[PID]&#xA;           ,[PIN]&#xA;           ,[FILE_NUMBER]&#xA;           ,[FILE_NUMBER_SUFFIX]&#xA;           ,[LAND_AREA]&#xA;           ,[LAND_LEGAL_DESCRIPTION]&#xA;           ,[BOUNDARY]&#xA;           ,[LOCATION]&#xA;           ,[GENERAL_LOCATION]&#xA;           ,[SURVEY_PLAN_NUMBER]&#xA;           ,[ENCUMBRANCE_REASON]&#xA;           ,[SURPLUS_DECLARATION_COMMENT]&#xA;           ,[SURPLUS_DECLARATION_DATE]&#xA;           ,[NOTES]&#xA;           ,[MUNICIPAL_ZONING]&#xA;           ,[IS_VOLUMETRIC_PARCEL]&#xA;           ,[VOLUMETRIC_MEASUREMENT]&#xA;           ,[IS_OWNED]&#xA;           ,[IS_PROPERTY_OF_INTEREST]&#xA;           ,[IS_VISIBLE_TO_OTHER_AGENCIES]&#xA;           ,[IS_SENSITIVE]&#xA;           ,[IS_PROVINCIAL_PUBLIC_HWY]&#xA;           ,[PPH_STATUS_UPDATE_USERID]&#xA;           ,[PPH_STATUS_UPDATE_TIMESTAMP]&#xA;           ,[PPH_STATUS_UPDATE_USER_GUID]&#xA;           ,[IS_RWY_BELT_DOM_PATENT]&#xA;           ,[ZONING]&#xA;           ,[ZONING_POTENTIAL]&#xA;           ,[CONCURRENCY_CONTROL_NUMBER]&#xA;           ,[APP_CREATE_TIMESTAMP]&#xA;           ,[APP_CREATE_USERID]&#xA;           ,[APP_CREATE_USER_GUID]&#xA;           ,[APP_CREATE_USER_DIRECTORY]&#xA;           ,[APP_LAST_UPDATE_TIMESTAMP]&#xA;           ,[APP_LAST_UPDATE_USERID]&#xA;           ,[APP_LAST_UPDATE_USER_GUID]&#xA;           ,[APP_LAST_UPDATE_USER_DIRECTORY]&#xA;           ,[DB_CREATE_TIMESTAMP]&#xA;           ,[DB_CREATE_USERID]&#xA;           ,[DB_LAST_UPDATE_TIMESTAMP]&#xA;           ,[DB_LAST_UPDATE_USERID]&#xA;           ,[ADDITIONAL_DETAILS]&#xA;           ,[IS_UTILITIES_PAYABLE]&#xA;           ,[IS_TAXES_PAYABLE]&#xA;           ,[BAND_NAME]&#xA;           ,[RESERVE_NAME]&#xA;)&#xA; &#xA;SELECT&#xA;    (select     MAX(PROPERTY_ID) FROM DBO.PIMS_PROPERTY) + ROW_NUMBER() OVER (ORDER BY pp.PID) AS PROPERTY_ID,&#xA;MAX(PROPERTY_MANAGER_ID) AS PROPERTY_MANAGER_ID,&#xA;MAX(PROP_MGMT_ORG_ID) AS PROP_MGMT_ORG_ID,&#xA;MAX(PROPERTY_TYPE_CODE) AS PROPERTY_TYPE_CODE,&#xA;MAX(PROPERTY_CLASSIFICATION_TYPE_CODE) AS PROPERTY_CLASSIFICATION_TYPE_CODE,&#xA;MAX(ADDRESS_ID) AS ADDRESS_ID,&#xA;MAX(REGION_CODE) AS REGION_CODE,&#xA;MAX(DISTRICT_CODE) AS DISTRICT_CODE,&#xA;MAX(PROPERTY_AREA_UNIT_TYPE_CODE) AS PROPERTY_AREA_UNIT_TYPE_CODE,&#xA;MAX(PROPERTY_DATA_SOURCE_TYPE_CODE) AS PROPERTY_DATA_SOURCE_TYPE_CODE,&#xA;MAX(PROPERTY_STATUS_TYPE_CODE) AS PROPERTY_STATUS_TYPE_CODE,&#xA;MAX(SURPLUS_DECLARATION_TYPE_CODE) AS SURPLUS_DECLARATION_TYPE_CODE,&#xA;MAX(VOLUMETRIC_TYPE_CODE) AS VOLUMETRIC_TYPE_CODE,&#xA;MAX(VOLUME_UNIT_TYPE_CODE) AS VOLUME_UNIT_TYPE_CODE,&#xA;MAX(PPH_STATUS_TYPE_CODE) AS PPH_STATUS_TYPE_CODE,&#xA;MAX(PROPERTY_DATA_SOURCE_EFFECTIVE_DATE) AS PROPERTY_DATA_SOURCE_EFFECTIVE_DATE,&#xA;MAX(NAME) AS NAME,&#xA;MAX(DESCRIPTION) AS DESCRIPTION,&#xA;pp.PID,&#xA;MAX(PIN) AS PIN,&#xA;MAX(FILE_NUMBER) AS FILE_NUMBER,&#xA;    MAX(FILE_NUMBER_SUFFIX) AS FILE_NUMBER_SUFFIX,&#xA;    MAX(LAND_AREA) AS LAND_AREA,&#xA;    MAX(LAND_LEGAL_DESCRIPTION) AS LAND_LEGAL_DESCRIPTION,&#xA;    MAX(BOUNDARY.STAsText()) AS BOUNDARY,&#xA;    MAX([LOCATION].STAsText()) AS [LOCATION],&#xA;    MAX(GENERAL_LOCATION) AS GENERAL_LOCATION,&#xA;    MAX(SURVEY_PLAN_NUMBER) AS SURVEY_PLAN_NUMBER,&#xA;    MAX(ENCUMBRANCE_REASON) AS ENCUMBRANCE_REASON,&#xA;    MAX(SURPLUS_DECLARATION_COMMENT) AS SURPLUS_DECLARATION_COMMENT,&#xA;    MAX(SURPLUS_DECLARATION_DATE) AS SURPLUS_DECLARATION_DATE,&#xA;    MAX(NOTES) AS NOTES,&#xA;    MAX(MUNICIPAL_ZONING) AS MUNICIPAL_ZONING,&#xA;    CAST(CASE WHEN MAX(CAST(IS_VOLUMETRIC_PARCEL AS INT)) = 1 THEN 1 ELSE 0 END AS BIT) AS IS_VOLUMETRIC_PARCEL,&#xA;    MAX(VOLUMETRIC_MEASUREMENT) AS VOLUMETRIC_MEASUREMENT,&#xA;    CAST(CASE WHEN MAX(CAST(IS_OWNED AS INT)) = 1 THEN 1 ELSE 0 END AS BIT) AS IS_OWNED,&#xA;    CAST(CASE WHEN MAX(CAST(IS_PROPERTY_OF_INTEREST AS INT)) = 1 THEN 1 ELSE 0 END AS BIT) AS IS_PROPERTY_OF_INTEREST,&#xA;    CAST(CASE WHEN MAX(CAST(IS_VISIBLE_TO_OTHER_AGENCIES AS INT)) = 1 THEN 1 ELSE 0 END AS BIT) AS IS_VISIBLE_TO_OTHER_AGENCIES,&#xA;    CAST(CASE WHEN MAX(CAST(IS_SENSITIVE AS INT)) = 1 THEN 1 ELSE 0 END AS BIT) AS IS_SENSITIVE,&#xA;    CAST(CASE WHEN MAX(CAST(IS_PROVINCIAL_PUBLIC_HWY AS INT)) = 1 THEN 1 ELSE 0 END AS BIT) AS IS_PROVINCIAL_PUBLIC_HWY,&#xA;    MAX(PPH_STATUS_UPDATE_USERID) AS PPH_STATUS_UPDATE_USERID,&#xA;    MAX(PPH_STATUS_UPDATE_TIMESTAMP) AS PPH_STATUS_UPDATE_TIMESTAMP,&#xA;    MAX(PPH_STATUS_UPDATE_USER_GUID) AS PPH_STATUS_UPDATE_USER_GUID,&#xA;    CAST(CASE WHEN MAX(CAST(IS_RWY_BELT_DOM_PATENT AS INT)) = 1 THEN 1 ELSE 0 END AS BIT) AS IS_RWY_BELT_DOM_PATENT,&#xA;    MAX(ZONING) AS ZONING,&#xA;    MAX(ZONING_POTENTIAL) AS ZONING_POTENTIAL,&#xA;MAX(CONCURRENCY_CONTROL_NUMBER) AS CONCURRENCY_CONTROL_NUMBER,&#xA;MAX(APP_CREATE_TIMESTAMP) as APP_CREATE_TIMESTAMP,&#xA;MAX ( APP_CREATE_USERID ) as APP_CREATE_USERID,&#xA;MAX ( APP_CREATE_USER_GUID ) as APP_CREATE_USER_GUID,&#xA;MAX ( APP_CREATE_USER_DIRECTORY ) as APP_CREATE_USER_DIRECTORY,&#xA;MAX ( APP_LAST_UPDATE_TIMESTAMP ) as APP_LAST_UPDATE_TIMESTAMP,&#xA;MAX ( APP_LAST_UPDATE_USERID ) as APP_LAST_UPDATE_USERID,&#xA;MAX ( APP_LAST_UPDATE_USER_GUID ) as APP_LAST_UPDATE_USER_GUID,&#xA;MAX ( APP_LAST_UPDATE_USER_DIRECTORY ) as APP_LAST_UPDATE_USER_DIRECTORY,&#xA;MAX ( DB_CREATE_TIMESTAMP ) as DB_CREATE_TIMESTAMP,&#xA;MAX ( DB_CREATE_USERID ) as DB_CREATE_USERID,&#xA;MAX ( DB_LAST_UPDATE_TIMESTAMP ) as DB_LAST_UPDATE_TIMESTAMP,&#xA;MAX ( DB_LAST_UPDATE_USERID ) as DB_LAST_UPDATE_USERID,&#xA;MAX ( ADDITIONAL_DETAILS ) as ADDITIONAL_DETAILS,&#xA;CAST(CASE WHEN MAX(CAST(IS_UTILITIES_PAYABLE AS INT)) = 1 THEN 1 ELSE 0 END AS BIT) AS IS_UTILITIES_PAYABLE,&#xA;CAST(CASE WHEN MAX(CAST(IS_TAXES_PAYABLE AS INT)) = 1 THEN 1 ELSE 0 END AS BIT) AS IS_TAXES_PAYABLE,&#xA;MAX ( BAND_NAME ) as BAND_NAME,&#xA;MAX ( RESERVE_NAME ) as RESERVE_NAME&#xA; &#xA;FROM DBO.PIMS_PROPERTY pp&#xA;WHERE pp.PID IN (SELECT pis.PID FROM DuplicatePIDs pis)&#xA;GROUP BY pp.PID&#xA;;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\STEP3-UPDATE-RELATION-TABLES"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{cf8a5a96-30dd-4940-a162-0cef1a7f5ea4}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="STEP3-UPDATE-RELATION-TABLES"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9F7D64E5-8609-4E90-B349-2644A16FDD58}"
          SQLTask:SqlStatementSource="DECLARE @tableName NVARCHAR(MAX);&#xA;DECLARE @sql NVARCHAR(MAX);&#xA; &#xA;DECLARE tableCursor CURSOR FOR&#xA;SELECT OBJECT_NAME(fk.parent_object_id) AS RelationTableName&#xA;FROM sys.foreign_keys fk&#xA;INNER JOIN sys.foreign_key_columns fkc ON fk.object_id = fkc.constraint_object_id&#xA;INNER JOIN sys.columns c1 ON fkc.parent_column_id = c1.column_id AND fkc.parent_object_id = c1.object_id&#xA;INNER JOIN sys.columns c2 ON fkc.referenced_column_id = c2.column_id AND fkc.referenced_object_id = c2.object_id&#xA;WHERE OBJECT_NAME(fk.referenced_object_id) = 'PIMS_PROPERTY' and c1.name = 'PROPERTY_ID';&#xA; &#xA;OPEN tableCursor;&#xA; &#xA;FETCH NEXT FROM tableCursor INTO @tableName;&#xA; &#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN&#xA;    SET @sql = N'&#xA;        UPDATE ' + @tableName + '&#xA;        SET&#xA;            property_id = max_prop_id.max_property_id,&#xA;            [CONCURRENCY_CONTROL_NUMBER] = [CONCURRENCY_CONTROL_NUMBER] + 1&#xA;        FROM ' + @tableName + ' prf&#xA;        JOIN (&#xA;            SELECT&#xA;                t.property_id as prop_id,&#xA;                max_property_id.max_id AS max_property_id&#xA;            FROM dbo.PIMS_PROPERTY t&#xA;            JOIN (&#xA;                SELECT pid, MAX(property_id) AS max_id&#xA;                FROM dbo.PIMS_PROPERTY&#xA;                GROUP BY pid&#xA;            ) AS max_property_id&#xA;            ON t.pid = max_property_id.pid&#xA;        ) AS max_prop_id&#xA;        ON prf.property_id = max_prop_id.prop_id';&#xA; &#xA;    EXEC sp_executesql @sql;&#xA; &#xA;    FETCH NEXT FROM tableCursor INTO @tableName;&#xA;END;&#xA; &#xA;CLOSE tableCursor;&#xA;DEALLOCATE tableCursor;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\STEP4-KEEP-ONLY-MERGED-RECORD"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{86b6b8d0-d3c7-4b7d-a660-249ccbc3099e}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="STEP4-KEEP-ONLY-MERGED-RECORD"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9F7D64E5-8609-4E90-B349-2644A16FDD58}"
          SQLTask:SqlStatementSource="WITH X AS (&#xA;SELECT&#xA; ROW_NUMBER() OVER(PARTITION BY PID&#xA;                        ORDER BY [DB_LAST_UPDATE_TIMESTAMP] desc&#xA;                    ) AS RN , *&#xA;  &#xA;FROM [dbo].[PIMS_PROPERTY]&#xA;where pid is not null&#xA;)&#xA;delete FROM X&#xA;    WHERE &#xA;     RN &gt; 1&#xA; ;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\STEP5-ENABLE-FK"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{aa649937-7bb9-4dd7-ae96-a54990caaf01}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="STEP5-ENABLE-FK"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9F7D64E5-8609-4E90-B349-2644A16FDD58}"
          SQLTask:SqlStatementSource="BEGIN&#xA;    DECLARE @ConstraintName NVARCHAR(200);&#xA;    DECLARE @Sql NVARCHAR(MAX);&#xA;    DECLARE @CheckOption NVARCHAR(10);&#xA;    DECLARE @TableName NVARCHAR(50);   &#xA; &#xA; &#xA;    SET @CheckOption = 'CHECK';&#xA;    set @TableName = 'PIMS_PROPERTY';&#xA; &#xA;    -- Get the OBJECT_ID for the table&#xA;    DECLARE @TableObjectId INT;&#xA;    SET @TableObjectId = OBJECT_ID(@TableName);&#xA; &#xA;    -- Declare a cursor to loop through the constraints that belong to the specified table&#xA;    DECLARE cursor_constraints CURSOR FOR&#xA;    SELECT&#xA;        name AS ConstraintName&#xA;    FROM sys.foreign_keys&#xA;    WHERE parent_object_id = @TableObjectId;&#xA; &#xA;    -- Open the cursor&#xA;    OPEN cursor_constraints;&#xA; &#xA;    -- Fetch the first row&#xA;    FETCH NEXT FROM cursor_constraints INTO @ConstraintName;&#xA; &#xA;    -- Loop through the constraints&#xA;    WHILE @@FETCH_STATUS = 0&#xA;    BEGIN&#xA;        -- Build the dynamic SQL statement based on the @CheckOption parameter&#xA;        IF @CheckOption = 'CHECK'&#xA;        BEGIN&#xA;             SET @Sql = 'ALTER TABLE ' + QUOTENAME(@TableName) + ' WITH CHECK CHECK CONSTRAINT ' + QUOTENAME(@ConstraintName);&#xA;            --PRINT @ConstraintName&#xA;        END&#xA;        ELSE IF @CheckOption = 'NOCHECK'&#xA;        BEGIN&#xA;             SET @Sql = 'ALTER TABLE ' + QUOTENAME(@TableName) + ' NOCHECK CONSTRAINT ' + QUOTENAME(@ConstraintName);&#xA;            --PRINT @ConstraintName&#xA;        END&#xA; &#xA;        -- Execute the dynamic SQL&#xA;        EXEC sp_executesql @Sql;&#xA; &#xA;        -- Fetch the next row&#xA;        FETCH NEXT FROM cursor_constraints INTO @ConstraintName;&#xA;    END&#xA; &#xA;    -- Close and deallocate the cursor&#xA;    CLOSE cursor_constraints;&#xA;    DEALLOCATE cursor_constraints;&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{70549868-8C17-4909-9280-5AEECD49D631}"
      DTS:From="Package\STEP1-DISABLE-FK"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\STEP2-MERGE" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{26D690AD-9E3A-4176-91FD-52DE91355EF3}"
      DTS:From="Package\STEP2-MERGE"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\STEP3-UPDATE-RELATION-TABLES" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{5394DE91-BBF4-49AC-96C4-B6B2CF39DB42}"
      DTS:From="Package\STEP3-UPDATE-RELATION-TABLES"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\STEP4-KEEP-ONLY-MERGED-RECORD" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{A8D3028D-6319-4615-B4FE-0548D69D5BF5}"
      DTS:From="Package\STEP4-KEEP-ONLY-MERGED-RECORD"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\STEP5-ENABLE-FK" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="178.666666666667,42.6666666666667"
          Id="Package\STEP1-DISABLE-FK"
          TopLeft="676.874989913777,94.4210544088211" />
        <NodeLayout
          Size="156,42.6666666666667"
          Id="Package\STEP2-MERGE"
          TopLeft="692.499989680946,196.403510536294" />
        <NodeLayout
          Size="261.333333333334,42.6666666666667"
          Id="Package\STEP3-UPDATE-RELATION-TABLES"
          TopLeft="636.249990519136,300.438598281349" />
        <NodeLayout
          Size="278.666666666667,42.6666666666667"
          Id="Package\STEP4-KEEP-ONLY-MERGED-RECORD"
          TopLeft="628.124990640208,405.842107104793" />
        <NodeLayout
          Size="176,42.6666666666667"
          Id="Package\STEP5-ENABLE-FK"
          TopLeft="685.624989783391,512.614037006626" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="768.354156464028,137.087721075488">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.3157894608058"
              Start="0,0"
              End="0,51.8157894608058">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.8157894608058" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="768.708323433375,239.07017720296">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61.3684210783887"
              Start="0,0"
              End="0,53.8684210783887">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.8684210783887" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="767.187490579672,343.105264948016">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62.7368421567773"
              Start="0,0"
              End="0,55.2368421567773">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.2368421567773" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="770.541656878466,448.50877377146">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64.1052632351664"
              Start="0,0"
              End="0,56.6052632351664">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.6052632351664" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="PSP-7007 MERGE PROPERTIES and CLEANUP RELATIONSHIP TABLES"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="389.333333333334,40"
          Id="c19d2796-558c-4376-b332-d704e8390c09"
          TopLeft="123.124998165295,57.4736852923258" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>