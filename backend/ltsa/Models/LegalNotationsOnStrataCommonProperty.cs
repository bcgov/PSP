/* 
 * Title Direct Search Services
 *
 * Title Direct Search Services
 *
 * OpenAPI spec version: 4.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Runtime.Serialization;
using System.Text.Json.Serialization;


namespace Pims.Ltsa.Models
{
    /// <summary>
    /// LegalNotationsOnStrataCommonProperty
    /// </summary>
    [DataContract]
    public partial class LegalNotationsOnStrataCommonProperty
    {
        /// <summary>
        /// State of the Legal Notation on Title.  Only active Legal Notation are presented on Current View of Title. 
        /// </summary>
        /// <value>State of the Legal Notation on Title.  Only active Legal Notation are presented on Current View of Title. </value>
        [JsonConverter(typeof(JsonStringEnumMemberConverter))]
        public enum StatusEnum
        {
            /// <summary>
            /// Enum ACTIVE for value: ACTIVE
            /// </summary>
            [EnumMember(Value = "ACTIVE")]
            ACTIVE = 1,
            /// <summary>
            /// Enum CANCELLED for value: CANCELLED
            /// </summary>
            [EnumMember(Value = "CANCELLED")]
            CANCELLED = 2
        }
        /// <summary>
        /// State of the Legal Notation on Title.  Only active Legal Notation are presented on Current View of Title. 
        /// </summary>
        /// <value>State of the Legal Notation on Title.  Only active Legal Notation are presented on Current View of Title. </value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public StatusEnum Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="LegalNotationsOnStrataCommonProperty" /> class.
        /// </summary>
        /// <param name="legalNotationNumber">Legal Notation Number (required).</param>
        /// <param name="status">State of the Legal Notation on Title.  Only active Legal Notation are presented on Current View of Title.  (required).</param>
        /// <param name="cancellationDate">Legal Notation Cancellation Date.</param>
        /// <param name="legalNotation">legalNotation (required).</param>
        public LegalNotationsOnStrataCommonProperty(string legalNotationNumber = default, StatusEnum status = default, DateTime? cancellationDate = default, LegalNotation legalNotation = default)
        {
            // to ensure "legalNotationNumber" is required (not null)
            if (legalNotationNumber == null)
            {
                throw new InvalidDataException("legalNotationNumber is a required property for LegalNotationsOnStrataCommonProperty and cannot be null");
            }
            else
            {
                this.LegalNotationNumber = legalNotationNumber;
            }
            // to ensure "legalNotation" is required (not null)
            if (legalNotation == null)
            {
                throw new InvalidDataException("legalNotation is a required property for LegalNotationsOnStrataCommonProperty and cannot be null");
            }
            else
            {
                this.LegalNotation = legalNotation;
            }
            this.Status = status;
            this.CancellationDate = cancellationDate;
        }

        /// <summary>
        /// Legal Notation Number
        /// </summary>
        /// <value>Legal Notation Number</value>
        [DataMember(Name = "legalNotationNumber", EmitDefaultValue = false)]
        public string LegalNotationNumber { get; set; }


        /// <summary>
        /// Legal Notation Cancellation Date
        /// </summary>
        /// <value>Legal Notation Cancellation Date</value>
        [DataMember(Name = "cancellationDate", EmitDefaultValue = false)]
        public DateTime? CancellationDate { get; set; }

        /// <summary>
        /// Gets or Sets LegalNotation
        /// </summary>
        [DataMember(Name = "legalNotation", EmitDefaultValue = false)]
        public LegalNotation LegalNotation { get; set; }
    }
}
