/* 
 * Title Direct Search Services
 *
 * Title Direct Search Services
 *
 * OpenAPI spec version: 4.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.Serialization;


namespace Pims.Ltsa.Models
{
    /// <summary>
    /// Charge
    /// </summary>
    [DataContract]
    public partial class Charge
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Charge" /> class.
        /// </summary>
        /// <param name="chargeNumber">In practice, the same value as the Application number that raised the Charge. (required).</param>
        /// <param name="transactionType">Approximately 80 types currently active. They indicate the nature of the charge. (required).</param>
        /// <param name="applicationReceivedDate">The Received Date and Time of the Application that raised the Charge. It is synonymous with the Registration Date/Time and comes from the Originating Document where is recorded as Document Acceptance Date/Time..</param>
        /// <param name="chargeOwnershipGroups">chargeOwnershipGroups (required).</param>
        /// <param name="certificatesOfCharge">certificatesOfCharge.</param>
        /// <param name="correctionsAltos1">correctionsAltos1.</param>
        /// <param name="corrections">corrections.</param>
        public Charge(string chargeNumber = default, string transactionType = default, DateTime? applicationReceivedDate = default, List<ChargeOwnershipGroup> chargeOwnershipGroups = default, List<CertificateOfCharge> certificatesOfCharge = default, List<Altos1ChargeCorrection> correctionsAltos1 = default, List<ChargeCorrection> corrections = default)
        {
            // to ensure "chargeNumber" is required (not null)
            if (chargeNumber == null)
            {
                throw new InvalidDataException("chargeNumber is a required property for Charge and cannot be null");
            }
            else
            {
                this.ChargeNumber = chargeNumber;
            }
            // to ensure "transactionType" is required (not null)
            if (transactionType == null)
            {
                throw new InvalidDataException("transactionType is a required property for Charge and cannot be null");
            }
            else
            {
                this.TransactionType = transactionType;
            }
            // to ensure "chargeOwnershipGroups" is required (not null)
            if (chargeOwnershipGroups == null)
            {
                throw new InvalidDataException("chargeOwnershipGroups is a required property for Charge and cannot be null");
            }
            else
            {
                this.ChargeOwnershipGroups = chargeOwnershipGroups;
            }
            this.ApplicationReceivedDate = applicationReceivedDate;
            this.CertificatesOfCharge = certificatesOfCharge;
            this.CorrectionsAltos1 = correctionsAltos1;
            this.Corrections = corrections;
        }

        /// <summary>
        /// In practice, the same value as the Application number that raised the Charge.
        /// </summary>
        /// <value>In practice, the same value as the Application number that raised the Charge.</value>
        [DataMember(Name = "chargeNumber", EmitDefaultValue = false)]
        public string ChargeNumber { get; set; }

        /// <summary>
        /// Approximately 80 types currently active. They indicate the nature of the charge.
        /// </summary>
        /// <value>Approximately 80 types currently active. They indicate the nature of the charge.</value>
        [DataMember(Name = "transactionType", EmitDefaultValue = false)]
        public string TransactionType { get; set; }

        /// <summary>
        /// The Received Date and Time of the Application that raised the Charge. It is synonymous with the Registration Date/Time and comes from the Originating Document where is recorded as Document Acceptance Date/Time.
        /// </summary>
        /// <value>The Received Date and Time of the Application that raised the Charge. It is synonymous with the Registration Date/Time and comes from the Originating Document where is recorded as Document Acceptance Date/Time.</value>
        [DataMember(Name = "applicationReceivedDate", EmitDefaultValue = false)]
        public DateTime? ApplicationReceivedDate { get; set; }

        /// <summary>
        /// Gets or Sets ChargeOwnershipGroups
        /// </summary>
        [DataMember(Name = "chargeOwnershipGroups", EmitDefaultValue = false)]
        public List<ChargeOwnershipGroup> ChargeOwnershipGroups { get; set; }

        /// <summary>
        /// Gets or Sets CertificatesOfCharge
        /// </summary>
        [DataMember(Name = "certificatesOfCharge", EmitDefaultValue = false)]
        public List<CertificateOfCharge> CertificatesOfCharge { get; set; }

        /// <summary>
        /// Gets or Sets CorrectionsAltos1
        /// </summary>
        [DataMember(Name = "correctionsAltos1", EmitDefaultValue = false)]
        public List<Altos1ChargeCorrection> CorrectionsAltos1 { get; set; }

        /// <summary>
        /// Gets or Sets Corrections
        /// </summary>
        [DataMember(Name = "corrections", EmitDefaultValue = false)]
        public List<ChargeCorrection> Corrections { get; set; }
    }
}
