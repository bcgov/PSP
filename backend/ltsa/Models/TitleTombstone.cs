/* 
 * Title Direct Search Services
 *
 * Title Direct Search Services
 *
 * OpenAPI spec version: 4.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.Serialization;


namespace Pims.Ltsa.Models
{
    /// <summary>
    /// TitleTombstone
    /// </summary>
    [DataContract]
    public partial class TitleTombstone
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TitleTombstone" /> class.
        /// </summary>
        /// <param name="applicationReceivedDate">The Received Date and Time of the Application that raised the Title. It is synonymous with the Registration Date/Time and comes from the Originating Document where is recorded as Document Acceptance Date/Time. (required).</param>
        /// <param name="enteredDate">System-generated date/timestamp for when the Title record was inserted into Register database. (required).</param>
        /// <param name="titleRemarks">Title remarks may be used indicate: * Determinable Fee Simple: results in a Possibility of Reverter charge on Title * Fee Simple on Condition: results in a Right of Entry charge on Title  #Note: LifeEstate is registered as a charge, so it is not referenced here. .</param>
        /// <param name="rootOfTitle">Describes the source of the first title. It may contain: * AFB reference number - \&quot;\&quot;AFB &lt;book, folio and page number&gt;\&quot;\&quot; * The text \&quot;\&quot;Crown Grant\&quot;\&quot; .</param>
        /// <param name="cancellationDate">Title cancellation date and time. Not set for a Draft or Registered Title.</param>
        /// <param name="marketValueAmount">Indicates property value at the time of title application. Used by property assessors..</param>
        /// <param name="fromTitles">fromTitles.</param>
        /// <param name="natureOfTransfers">natureOfTransfers (required).</param>
        public TitleTombstone(DateTime? applicationReceivedDate = default, DateTime? enteredDate = default, string titleRemarks = default, string rootOfTitle = default, DateTime? cancellationDate = default, string marketValueAmount = default, List<TitleIdentifier> fromTitles = default, List<NatureOfTransfer> natureOfTransfers = default)
        {
            // to ensure "applicationReceivedDate" is required (not null)
            if (applicationReceivedDate == null)
            {
                throw new InvalidDataException("applicationReceivedDate is a required property for TitleTombstone and cannot be null");
            }
            else
            {
                this.ApplicationReceivedDate = applicationReceivedDate;
            }
            // to ensure "enteredDate" is required (not null)
            if (enteredDate == null)
            {
                throw new InvalidDataException("enteredDate is a required property for TitleTombstone and cannot be null");
            }
            else
            {
                this.EnteredDate = enteredDate;
            }
            // to ensure "natureOfTransfers" is required (not null)
            if (natureOfTransfers == null)
            {
                throw new InvalidDataException("natureOfTransfers is a required property for TitleTombstone and cannot be null");
            }
            else
            {
                this.NatureOfTransfers = natureOfTransfers;
            }
            this.TitleRemarks = titleRemarks;
            this.RootOfTitle = rootOfTitle;
            this.CancellationDate = cancellationDate;
            this.MarketValueAmount = marketValueAmount;
            this.FromTitles = fromTitles;
        }

        /// <summary>
        /// The Received Date and Time of the Application that raised the Title. It is synonymous with the Registration Date/Time and comes from the Originating Document where is recorded as Document Acceptance Date/Time.
        /// </summary>
        /// <value>The Received Date and Time of the Application that raised the Title. It is synonymous with the Registration Date/Time and comes from the Originating Document where is recorded as Document Acceptance Date/Time.</value>
        [DataMember(Name = "applicationReceivedDate", EmitDefaultValue = false)]
        public DateTime? ApplicationReceivedDate { get; set; }

        /// <summary>
        /// System-generated date/timestamp for when the Title record was inserted into Register database.
        /// </summary>
        /// <value>System-generated date/timestamp for when the Title record was inserted into Register database.</value>
        [DataMember(Name = "enteredDate", EmitDefaultValue = false)]
        public DateTime? EnteredDate { get; set; }

        /// <summary>
        /// Title remarks may be used indicate: * Determinable Fee Simple: results in a Possibility of Reverter charge on Title * Fee Simple on Condition: results in a Right of Entry charge on Title  #Note: LifeEstate is registered as a charge, so it is not referenced here. 
        /// </summary>
        /// <value>Title remarks may be used indicate: * Determinable Fee Simple: results in a Possibility of Reverter charge on Title * Fee Simple on Condition: results in a Right of Entry charge on Title  #Note: LifeEstate is registered as a charge, so it is not referenced here. </value>
        [DataMember(Name = "titleRemarks", EmitDefaultValue = false)]
        public string TitleRemarks { get; set; }

        /// <summary>
        /// Describes the source of the first title. It may contain: * AFB reference number - \&quot;\&quot;AFB &lt;book, folio and page number&gt;\&quot;\&quot; * The text \&quot;\&quot;Crown Grant\&quot;\&quot; 
        /// </summary>
        /// <value>Describes the source of the first title. It may contain: * AFB reference number - \&quot;\&quot;AFB &lt;book, folio and page number&gt;\&quot;\&quot; * The text \&quot;\&quot;Crown Grant\&quot;\&quot; </value>
        [DataMember(Name = "rootOfTitle", EmitDefaultValue = false)]
        public string RootOfTitle { get; set; }

        /// <summary>
        /// Title cancellation date and time. Not set for a Draft or Registered Title
        /// </summary>
        /// <value>Title cancellation date and time. Not set for a Draft or Registered Title</value>
        [DataMember(Name = "cancellationDate", EmitDefaultValue = false)]
        public DateTime? CancellationDate { get; set; }

        /// <summary>
        /// Indicates property value at the time of title application. Used by property assessors.
        /// </summary>
        /// <value>Indicates property value at the time of title application. Used by property assessors.</value>
        [DataMember(Name = "marketValueAmount", EmitDefaultValue = false)]
        public string MarketValueAmount { get; set; }

        /// <summary>
        /// Gets or Sets FromTitles
        /// </summary>
        [DataMember(Name = "fromTitles", EmitDefaultValue = false)]
        public List<TitleIdentifier> FromTitles { get; set; }

        /// <summary>
        /// Gets or Sets NatureOfTransfers
        /// </summary>
        [DataMember(Name = "natureOfTransfers", EmitDefaultValue = false)]
        public List<NatureOfTransfer> NatureOfTransfers { get; set; }
    }
}
