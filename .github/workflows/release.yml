name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Setup git
        run: |
          git config user.name "github-actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Build changelog
        id: build_changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export CHANGELOG=$(gh api /repos/{owner}/{repo}/releases/generate-notes -f tag_name=${GITHUB_REF#refs/tags/} --jq '.body')
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "::set-output name=changelog::$CHANGELOG"

      - name: Create release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${{ steps.build_changelog.outputs.changelog }}" > changelog.md
          make release tag="${GITHUB_REF#refs/tags/}" changelog=changelog.md

          export RELEASE_VERSION=${GITHUB_REF#refs/tags/}
          export RELEASE_URL=$(gh release view ${GITHUB_REF#refs/tags/} --json url --jq '.url')

          echo "::set-output name=release_version::$RELEASE_VERSION"
          echo "::set-output name=release_url::$RELEASE_URL"

      - name: Post notification in MS Teams
        env:
          MS_TEAMS_NOTIFY_URL: ${{ secrets.MS_TEAMS_NOTIFY_URL }}
        if: env.MS_TEAMS_NOTIFY_URL != ''
        run: |
          echo "Send notification to MS Teams..."
          curl -v -H 'Content-Type: application/json' ${{ secrets.MS_TEAMS_NOTIFY_URL }} \
          --data '{"@context":"https://schema.org/extensions","@type":"MessageCard","themeColor":"0078D7","title":"Release ${{ steps.create_release.outputs.release_version }} created on repository ${{ github.repository }}","text":"${{ steps.build_changelog.outputs.changelog }}", "potentialAction": [{"@type": "OpenUri","name": "View in GitHub","targets": [{"os": "default","uri": "${{ steps.create_release.outputs.release_url }}"}]}]}'
