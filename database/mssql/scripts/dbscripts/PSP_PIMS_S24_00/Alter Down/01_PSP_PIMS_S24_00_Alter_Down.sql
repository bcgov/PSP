-- Script generated by Aqua Data Studio Schema Synchronization for MS SQL Server 2016 on Thu Mar 31 12:46:52 PDT 2022
-- Execute this script on:
-- 		PSP_PIMS_S24_00/dbo - This database/schema will be modified
-- to synchronize it with MS SQL Server 2016:
-- 		PSP_PIMS_S23_01/dbo

-- We recommend backing up the database prior to executing the script.

SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO
BEGIN TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_BCAJUR_PIM_BCJGNV_FK
PRINT N'Drop foreign key constraint dbo.PIM_BCAJUR_PIM_BCJGNV_FK'
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_GENERAL_VALUE]
	DROP CONSTRAINT [PIM_BCAJUR_PIM_BCJGNV_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_BCDADV_PIM_BCDTRV_FK
PRINT N'Drop foreign key constraint dbo.PIM_BCDADV_PIM_BCDTRV_FK'
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_BCTRANSIT_VALUE]
	DROP CONSTRAINT [PIM_BCDADV_PIM_BCDTRV_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_BCAJUR_PIM_BCJSCV_FK
PRINT N'Drop foreign key constraint dbo.PIM_BCAJUR_PIM_BCJSCV_FK'
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_SCHOOL_VALUE]
	DROP CONSTRAINT [PIM_BCAJUR_PIM_BCJSCV_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_BCDADV_PIM_BCDGNV_FK
PRINT N'Drop foreign key constraint dbo.PIM_BCDADV_PIM_BCDGNV_FK'
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_GENERAL_VALUE]
	DROP CONSTRAINT [PIM_BCDADV_PIM_BCDGNV_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRTT_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRTT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_TENURE_TYPE]
	DROP CONSTRAINT [PIM_PRPRTY_PIM_PRPRTT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPTNR_PIM_PRPRTT_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPTNR_PIM_PRPRTT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_TENURE_TYPE]
	DROP CONSTRAINT [PIM_PRPTNR_PIM_PRPRTT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRRT_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRRT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ROAD_TYPE]
	DROP CONSTRAINT [PIM_PRPRTY_PIM_PRPRRT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRROAD_PIM_PRPRRT_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRROAD_PIM_PRPRRT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ROAD_TYPE]
	DROP CONSTRAINT [PIM_PRROAD_PIM_PRPRRT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRAT_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRAT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ANOMALY_TYPE]
	DROP CONSTRAINT [PIM_PRPRTY_PIM_PRPRAT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRANOM_PIM_PRPRAT_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRANOM_PIM_PRPRAT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ANOMALY_TYPE]
	DROP CONSTRAINT [PIM_PRANOM_PIM_PRPRAT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRADJL_PIM_PRPALT_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRADJL_PIM_PRPALT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ADJACENT_LAND_TYPE]
	DROP CONSTRAINT [PIM_PRADJL_PIM_PRPALT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPALT_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPALT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ADJACENT_LAND_TYPE]
	DROP CONSTRAINT [PIM_PRPRTY_PIM_PRPALT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_RESRCH_PIM_PRSCRC_FK
PRINT N'Drop foreign key constraint dbo.PIM_RESRCH_PIM_PRSCRC_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_RESEARCH_FILE]
	DROP CONSTRAINT [PIM_RESRCH_PIM_PRSCRC_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRSCRC_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRSCRC_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_RESEARCH_FILE]
	DROP CONSTRAINT [PIM_PRPRTY_PIM_PRSCRC_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_RSRCHS_PIM_RESRCH_FK
PRINT N'Drop foreign key constraint dbo.PIM_RSRCHS_PIM_RESRCH_FK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE]
	DROP CONSTRAINT [PIM_RSRCHS_PIM_RESRCH_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_BCAJUR_PIM_BCJTRV_FK
PRINT N'Drop foreign key constraint dbo.PIM_BCAJUR_PIM_BCJTRV_FK'
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_BCTRANSIT_VALUE]
	DROP CONSTRAINT [PIM_BCAJUR_PIM_BCJTRV_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_BCASAR_PIM_BCASCV_FK
PRINT N'Drop foreign key constraint dbo.PIM_BCASAR_PIM_BCASCV_FK'
GO
ALTER TABLE [dbo].[BCA_AREA_SCHOOL_VALUE]
	DROP CONSTRAINT [PIM_BCASAR_PIM_BCASCV_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_BCDADV_PIM_BCDSCV_FK
PRINT N'Drop foreign key constraint dbo.PIM_BCDADV_PIM_BCDSCV_FK'
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_SCHOOL_VALUE]
	DROP CONSTRAINT [PIM_BCDADV_PIM_BCDSCV_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_BCAFOR_PIM_BCFSCV_FK
PRINT N'Drop foreign key constraint dbo.PIM_BCAFOR_PIM_BCFSCV_FK'
GO
ALTER TABLE [dbo].[BCA_FOLIO_SCHOOL_VALUE]
	DROP CONSTRAINT [PIM_BCAFOR_PIM_BCFSCV_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_BCASAR_PIM_BCATRV_FK
PRINT N'Drop foreign key constraint dbo.PIM_BCASAR_PIM_BCATRV_FK'
GO
ALTER TABLE [dbo].[BCA_AREA_BCTRANSIT_VALUE]
	DROP CONSTRAINT [PIM_BCASAR_PIM_BCATRV_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_BCAFOR_PIM_BCFGNV_FK
PRINT N'Drop foreign key constraint dbo.PIM_BCAFOR_PIM_BCFGNV_FK'
GO
ALTER TABLE [dbo].[BCA_FOLIO_GENERAL_VALUE]
	DROP CONSTRAINT [PIM_BCAFOR_PIM_BCFGNV_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_BCASAR_PIM_BCAGNV_FK
PRINT N'Drop foreign key constraint dbo.PIM_BCASAR_PIM_BCAGNV_FK'
GO
ALTER TABLE [dbo].[BCA_AREA_GENERAL_VALUE]
	DROP CONSTRAINT [PIM_BCASAR_PIM_BCAGNV_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_BCAFOR_PIM_BCFTRV_FK
PRINT N'Drop foreign key constraint dbo.PIM_BCAFOR_PIM_BCFTRV_FK'
GO
ALTER TABLE [dbo].[BCA_FOLIO_BCTRANSIT_VALUE]
	DROP CONSTRAINT [PIM_BCAFOR_PIM_BCFTRV_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_VOLUTY_PIM_PRPRTY_FK
PRINT N'Drop foreign key constraint dbo.PIM_VOLUTY_PIM_PRPRTY_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY]
	DROP CONSTRAINT [PIM_VOLUTY_PIM_PRPRTY_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.BCJGNV_JURISDICTION_CODE_IDX
PRINT N'Drop index dbo.BCJGNV_JURISDICTION_CODE_IDX'
GO
DROP INDEX [dbo].[BCA_JURISDICTION_GENERAL_VALUE].[BCJGNV_JURISDICTION_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.BCDTRV_DATA_ADVICE_ID_IDX
PRINT N'Drop index dbo.BCDTRV_DATA_ADVICE_ID_IDX'
GO
DROP INDEX [dbo].[BCA_DATA_ADVICE_BCTRANSIT_VALUE].[BCDTRV_DATA_ADVICE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.BCJSCV_JURISDICTION_CODE_IDX
PRINT N'Drop index dbo.BCJSCV_JURISDICTION_CODE_IDX'
GO
DROP INDEX [dbo].[BCA_JURISDICTION_SCHOOL_VALUE].[BCJSCV_JURISDICTION_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.BCDGNV_DATA_ADVICE_ID_IDX
PRINT N'Drop index dbo.BCDGNV_DATA_ADVICE_ID_IDX'
GO
DROP INDEX [dbo].[BCA_DATA_ADVICE_GENERAL_VALUE].[BCDGNV_DATA_ADVICE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.BCJTRV_JURISDICTION_CODE_IDX
PRINT N'Drop index dbo.BCJTRV_JURISDICTION_CODE_IDX'
GO
DROP INDEX [dbo].[BCA_JURISDICTION_BCTRANSIT_VALUE].[BCJTRV_JURISDICTION_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.BCASCV_AREA_CODE_IDX
PRINT N'Drop index dbo.BCASCV_AREA_CODE_IDX'
GO
DROP INDEX [dbo].[BCA_AREA_SCHOOL_VALUE].[BCASCV_AREA_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.BCDSCV_DATA_ADVICE_ID_IDX
PRINT N'Drop index dbo.BCDSCV_DATA_ADVICE_ID_IDX'
GO
DROP INDEX [dbo].[BCA_DATA_ADVICE_SCHOOL_VALUE].[BCDSCV_DATA_ADVICE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.BCFSCV_ROLL_NUMBER_IDX
PRINT N'Drop index dbo.BCFSCV_ROLL_NUMBER_IDX'
GO
DROP INDEX [dbo].[BCA_FOLIO_SCHOOL_VALUE].[BCFSCV_ROLL_NUMBER_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.BCATRV_AREA_CODE_IDX
PRINT N'Drop index dbo.BCATRV_AREA_CODE_IDX'
GO
DROP INDEX [dbo].[BCA_AREA_BCTRANSIT_VALUE].[BCATRV_AREA_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.BCFGNV_ROLL_NUMBER_IDX
PRINT N'Drop index dbo.BCFGNV_ROLL_NUMBER_IDX'
GO
DROP INDEX [dbo].[BCA_FOLIO_GENERAL_VALUE].[BCFGNV_ROLL_NUMBER_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.BCAGNV_AREA_CODE_IDX
PRINT N'Drop index dbo.BCAGNV_AREA_CODE_IDX'
GO
DROP INDEX [dbo].[BCA_AREA_GENERAL_VALUE].[BCAGNV_AREA_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_STAVBL_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_STAVBL_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_STAVBL_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_STAVBL_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_STAVBL_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_STAVBL_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.BCFTRV_ROLL_NUMBER_IDX
PRINT N'Drop index dbo.BCFTRV_ROLL_NUMBER_IDX'
GO
DROP INDEX [dbo].[BCA_FOLIO_BCTRANSIT_VALUE].[BCFTRV_ROLL_NUMBER_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRPRTT_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_PRPRTT_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_PRPRTT_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRPRTT_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_PRPRTT_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_PRPRTT_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PRPRTT_PROPERTY_TENURE_TYPE_CODE_IDX
PRINT N'Drop index dbo.PRPRTT_PROPERTY_TENURE_TYPE_CODE_IDX'
GO
DROP INDEX [dbo].[PIMS_PROP_PROP_TENURE_TYPE].[PRPRTT_PROPERTY_TENURE_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PRPRTT_PROPERTY_ID_IDX
PRINT N'Drop index dbo.PRPRTT_PROPERTY_ID_IDX'
GO
DROP INDEX [dbo].[PIMS_PROP_PROP_TENURE_TYPE].[PRPRTT_PROPERTY_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRPRRT_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_PRPRRT_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_PRPRRT_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRPRRT_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_PRPRRT_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_PRPRRT_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PRPRRT_PROPERTY_ROAD_TYPE_CODE_IDX
PRINT N'Drop index dbo.PRPRRT_PROPERTY_ROAD_TYPE_CODE_IDX'
GO
DROP INDEX [dbo].[PIMS_PROP_PROP_ROAD_TYPE].[PRPRRT_PROPERTY_ROAD_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PRPRRT_PROPERTY_ID_IDX
PRINT N'Drop index dbo.PRPRRT_PROPERTY_ID_IDX'
GO
DROP INDEX [dbo].[PIMS_PROP_PROP_ROAD_TYPE].[PRPRRT_PROPERTY_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRPRAT_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_PRPRAT_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_PRPRAT_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRPRAT_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_PRPRAT_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_PRPRAT_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PRPRAT_PROPERTY_ID_IDX
PRINT N'Drop index dbo.PRPRAT_PROPERTY_ID_IDX'
GO
DROP INDEX [dbo].[PIMS_PROP_PROP_ANOMALY_TYPE].[PRPRAT_PROPERTY_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PRPRAT_PROPERTY_ANOMALY_TYPE_CODE_IDX
PRINT N'Drop index dbo.PRPRAT_PROPERTY_ANOMALY_TYPE_CODE_IDX'
GO
DROP INDEX [dbo].[PIMS_PROP_PROP_ANOMALY_TYPE].[PRPRAT_PROPERTY_ANOMALY_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRPALT_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_PRPALT_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_PRPALT_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRPALT_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_PRPALT_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_PRPALT_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PRPALT_PROPERTY_ID_IDX
PRINT N'Drop index dbo.PRPALT_PROPERTY_ID_IDX'
GO
DROP INDEX [dbo].[PIMS_PROP_PROP_ADJACENT_LAND_TYPE].[PRPALT_PROPERTY_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PRPALT_PROPERTY_ADJACENT_LAND_TYPE_CODE_IDX
PRINT N'Drop index dbo.PRPALT_PROPERTY_ADJACENT_LAND_TYPE_CODE_IDX'
GO
DROP INDEX [dbo].[PIMS_PROP_PROP_ADJACENT_LAND_TYPE].[PRPALT_PROPERTY_ADJACENT_LAND_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRSCRC_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_PRSCRC_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_PRSCRC_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRSCRC_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_PRSCRC_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_PRSCRC_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRSCRC_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_PRSCRC_A_S_IUD_TR'
GO
DROP TRIGGER [dbo].[PIMS_PRSCRC_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PRSCRC_RESEARCH_FILE_ID_IDX
PRINT N'Drop index dbo.PRSCRC_RESEARCH_FILE_ID_IDX'
GO
DROP INDEX [dbo].[PIMS_PROPERTY_RESEARCH_FILE].[PRSCRC_RESEARCH_FILE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PRSCRC_PROPERTY_ID_IDX
PRINT N'Drop index dbo.PRSCRC_PROPERTY_ID_IDX'
GO
DROP INDEX [dbo].[PIMS_PROPERTY_RESEARCH_FILE].[PRSCRC_PROPERTY_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_RESRCH_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_RESRCH_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_RESRCH_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_RESRCH_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_RESRCH_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_RESRCH_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_RESRCH_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_RESRCH_A_S_IUD_TR'
GO
DROP TRIGGER [dbo].[PIMS_RESRCH_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.RESRCH_RESEARCH_FILE_STATUS_TYPE_CODE_IDX
PRINT N'Drop index dbo.RESRCH_RESEARCH_FILE_STATUS_TYPE_CODE_IDX'
GO
DROP INDEX [dbo].[PIMS_RESEARCH_FILE].[RESRCH_RESEARCH_FILE_STATUS_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_RSRCHS_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_RSRCHS_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_RSRCHS_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_RSRCHS_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_RSRCHS_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_RSRCHS_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRPRTY_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_PRPRTY_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_PRPRTY_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRPRTY_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_PRPRTY_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_PRPRTY_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRPRTY_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_PRPRTY_A_S_IUD_TR'
GO
DROP TRIGGER [dbo].[PIMS_PRPRTY_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PRPRTY_VOLUME_UNIT_TYPE_CODE_IDX
PRINT N'Drop index dbo.PRPRTY_VOLUME_UNIT_TYPE_CODE_IDX'
GO
DROP INDEX [dbo].[PIMS_PROPERTY].[PRPRTY_VOLUME_UNIT_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PRPRTY_PROPERTY_AREA_UNIT_TYPE_CODE_IDX
PRINT N'Drop index dbo.PRPRTY_PROPERTY_AREA_UNIT_TYPE_CODE_IDX'
GO
DROP INDEX [dbo].[PIMS_PROPERTY].[PRPRTY_PROPERTY_AREA_UNIT_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_VOLUTY_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_VOLUTY_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_VOLUTY_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_VOLUTY_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_VOLUTY_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_VOLUTY_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop view dbo.PIMS_PROPERTY_LOCATION_VW
PRINT N'Drop view dbo.PIMS_PROPERTY_LOCATION_VW'
GO
DROP VIEW [dbo].[PIMS_PROPERTY_LOCATION_VW]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop view dbo.PIMS_PROPERTY_BOUNDARY_VW
PRINT N'Drop view dbo.PIMS_PROPERTY_BOUNDARY_VW'
GO
DROP VIEW [dbo].[PIMS_PROPERTY_BOUNDARY_VW]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PRPRTT_PK
PRINT N'Drop primary key constraint dbo.PRPRTT_PK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_TENURE_TYPE]
	DROP CONSTRAINT [PRPRTT_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_PROP_PROP_TENURE_TYPE
PRINT N'Drop table dbo.PIMS_PROP_PROP_TENURE_TYPE'
GO
DROP TABLE [dbo].[PIMS_PROP_PROP_TENURE_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PRPRRT_PROP_ROAD_TYPE_TUC
PRINT N'Drop unique constraint dbo.PRPRRT_PROP_ROAD_TYPE_TUC'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ROAD_TYPE]
	DROP CONSTRAINT [PRPRRT_PROP_ROAD_TYPE_TUC]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PRPRRT_PK
PRINT N'Drop primary key constraint dbo.PRPRRT_PK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ROAD_TYPE]
	DROP CONSTRAINT [PRPRRT_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_PROP_PROP_ROAD_TYPE
PRINT N'Drop table dbo.PIMS_PROP_PROP_ROAD_TYPE'
GO
DROP TABLE [dbo].[PIMS_PROP_PROP_ROAD_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PRPRAT_PROP_ANOMALY_TYPE_TUC
PRINT N'Drop unique constraint dbo.PRPRAT_PROP_ANOMALY_TYPE_TUC'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ANOMALY_TYPE]
	DROP CONSTRAINT [PRPRAT_PROP_ANOMALY_TYPE_TUC]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PRPRAT_PK
PRINT N'Drop primary key constraint dbo.PRPRAT_PK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ANOMALY_TYPE]
	DROP CONSTRAINT [PRPRAT_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_PROP_PROP_ANOMALY_TYPE
PRINT N'Drop table dbo.PIMS_PROP_PROP_ANOMALY_TYPE'
GO
DROP TABLE [dbo].[PIMS_PROP_PROP_ANOMALY_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PRPALT_PROP_ADJACENT_LAND_TYPE_TUC
PRINT N'Drop unique constraint dbo.PRPALT_PROP_ADJACENT_LAND_TYPE_TUC'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ADJACENT_LAND_TYPE]
	DROP CONSTRAINT [PRPALT_PROP_ADJACENT_LAND_TYPE_TUC]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PRPALT_PK
PRINT N'Drop primary key constraint dbo.PRPALT_PK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ADJACENT_LAND_TYPE]
	DROP CONSTRAINT [PRPALT_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_PROP_PROP_ADJACENT_LAND_TYPE
PRINT N'Drop table dbo.PIMS_PROP_PROP_ADJACENT_LAND_TYPE'
GO
DROP TABLE [dbo].[PIMS_PROP_PROP_ADJACENT_LAND_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PIMS_PRSCRC_H_UK
PRINT N'Drop unique constraint dbo.PIMS_PRSCRC_H_UK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_RESEARCH_FILE_HIST]
	DROP CONSTRAINT [PIMS_PRSCRC_H_UK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PIMS_PRSCRC_H_PK
PRINT N'Drop primary key constraint dbo.PIMS_PRSCRC_H_PK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_RESEARCH_FILE_HIST]
	DROP CONSTRAINT [PIMS_PRSCRC_H_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PRSCRC_PK
PRINT N'Drop primary key constraint dbo.PRSCRC_PK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_RESEARCH_FILE]
	DROP CONSTRAINT [PRSCRC_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_PROPERTY_RESEARCH_FILE
PRINT N'Drop table dbo.PIMS_PROPERTY_RESEARCH_FILE'
GO
DROP TABLE [dbo].[PIMS_PROPERTY_RESEARCH_FILE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PIMS_RESRCH_H_UK
PRINT N'Drop unique constraint dbo.PIMS_RESRCH_H_UK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_HIST]
	DROP CONSTRAINT [PIMS_RESRCH_H_UK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PIMS_RESRCH_H_PK
PRINT N'Drop primary key constraint dbo.PIMS_RESRCH_H_PK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_HIST]
	DROP CONSTRAINT [PIMS_RESRCH_H_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.RESRCH_PK
PRINT N'Drop primary key constraint dbo.RESRCH_PK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE]
	DROP CONSTRAINT [RESRCH_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.RSRCHS_PK
PRINT N'Drop primary key constraint dbo.RSRCHS_PK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_STATUS_TYPE]
	DROP CONSTRAINT [RSRCHS_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop view dbo.PIMS_CONTACT_MGR_VW
PRINT N'Drop view dbo.PIMS_CONTACT_MGR_VW'
GO
DROP VIEW [dbo].[PIMS_CONTACT_MGR_VW]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.VOLUTY_PK
PRINT N'Drop primary key constraint dbo.VOLUTY_PK'
GO
ALTER TABLE [dbo].[PIMS_VOLUME_UNIT_TYPE]
	DROP CONSTRAINT [VOLUTY_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_RFILE_NUMBER_SEQ
PRINT N'Drop sequence dbo.PIMS_RFILE_NUMBER_SEQ'
GO
DROP SEQUENCE [dbo].[PIMS_RFILE_NUMBER_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_PROPERTY
PRINT N'Alter table dbo.PIMS_PROPERTY'
GO
UPDATE [dbo].[PIMS_PROPERTY] SET [PROPERTY_AREA_UNIT_TYPE_CODE] = 'HA' WHERE [PROPERTY_AREA_UNIT_TYPE_CODE] IS NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROPERTY] ALTER COLUMN [PROPERTY_AREA_UNIT_TYPE_CODE] nvarchar(20) NOT NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROPERTY] DROP CONSTRAINT IF EXISTS [PRPRTY_AREA_UNIT_TYPE_CODE_DEF]
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROPERTY] ADD CONSTRAINT [PRPRTY_AREA_UNIT_TYPE_CODE_DEF] DEFAULT 'HA' FOR [PROPERTY_AREA_UNIT_TYPE_CODE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROPERTY]
	ADD [PROPERTY_TENURE_TYPE_CODE] nvarchar(20) NOT NULL CONSTRAINT [PRPRTY_TENURE_TYPE_CODE_DEF] DEFAULT 'UNKNOWN', 
	[VOLUMETRIC_UNIT_TYPE_CODE] nvarchar(20) NULL, 
	[PROPERTY_ANOMALY_TYPE_CODE] nvarchar(20) NULL, 
	[PROPERTY_ROAD_TYPE_CODE] nvarchar(20) NULL, 
	[PROPERTY_ADJACENT_LAND_TYPE_CODE] nvarchar(20) NULL
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Volumetric measurement unit of the parcel.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_PROPERTY', 
	@level2type = N'Column', @level2name = N'VOLUMETRIC_UNIT_TYPE_CODE'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROPERTY]
	DROP COLUMN [VOLUME_UNIT_TYPE_CODE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_PROPERTY_HIST
PRINT N'Alter table dbo.PIMS_PROPERTY_HIST'
GO
UPDATE [dbo].[PIMS_PROPERTY_HIST] SET [PROPERTY_AREA_UNIT_TYPE_CODE] = 'HA' WHERE [PROPERTY_AREA_UNIT_TYPE_CODE] IS NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_HIST] ALTER COLUMN [PROPERTY_AREA_UNIT_TYPE_CODE] nvarchar(20) NOT NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
--ALTER TABLE [dbo].[PIMS_PROPERTY_HIST] DROP CONSTRAINT IF EXISTS [PRPRTYH_AREA_UNIT_TYPE_CODE_DEF]
--IF @@ERROR <> 0 SET NOEXEC ON
--GO
--ALTER TABLE [dbo].[PIMS_PROPERTY_HIST] ADD CONSTRAINT [PRPRTYH_AREA_UNIT_TYPE_CODE_DEF] DEFAULT 'HA' FOR [PROPERTY_AREA_UNIT_TYPE_CODE]
--GO
--IF @@ERROR <> 0 SET NOEXEC ON
--GO
ALTER TABLE [dbo].[PIMS_PROPERTY_HIST]
	ADD [PROPERTY_TENURE_TYPE_CODE] nvarchar(20) NOT NULL CONSTRAINT [PRPRTYH_TENURE_TYPE_CODE_DEF] DEFAULT 'UNKNOWN', 
	[VOLUMETRIC_UNIT_TYPE_CODE] nvarchar(20) NULL, 
	[PROPERTY_ANOMALY_TYPE_CODE] nvarchar(20) NULL, 
	[PROPERTY_ROAD_TYPE_CODE] nvarchar(20) NULL, 
	[PROPERTY_ADJACENT_LAND_TYPE_CODE] nvarchar(20) NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_HIST]
	DROP COLUMN [VOLUME_UNIT_TYPE_CODE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Rebuild table dbo.BCA_FOLIO_BCTRANSIT_VALUE
PRINT N'Rebuild table dbo.BCA_FOLIO_BCTRANSIT_VALUE'
GO
ALTER TABLE [dbo].[BCA_FOLIO_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCFTRV_DB_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_FOLIO_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCFTRV_DB_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_FOLIO_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCFTRV_DB_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_FOLIO_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCFTRV_DB_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
CREATE TABLE [dbo].[ADS_SSDATA_1648755876608]  ( 
	[ROLL_NUMBER]                  	nvarchar(32) NULL,
	[PROPERTY_CLASS_CODE]          	nvarchar(16) NULL,
	[PROPERTY_CLASS_DESCRIPTION]   	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_CODE]       	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_DESCRIPTION]	nvarchar(16) NULL,
	[GROSS_LAND_VALUE]             	money NULL,
	[GROSS_IMPROVEMENT_VALUE]      	money NULL,
	[TAX_EXEMPT_LAND_VALUE]        	money NULL,
	[TAX_EXEMPT_IMPROVEMENT_VALUE] 	money NULL,
	[NET_LAND_VALUE]               	money NULL,
	[NET_IMPROVEMENT_VALUE]        	money NULL,
	[DB_CREATE_TIMESTAMP]          	datetime NOT NULL CONSTRAINT [BCFTRV_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_CREATE_USERID]             	nvarchar(30) NOT NULL CONSTRAINT [BCFTRV_DB_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[DB_LAST_UPDATE_TIMESTAMP]     	datetime NOT NULL CONSTRAINT [BCFTRV_DB_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_LAST_UPDATE_USERID]        	nvarchar(30) NOT NULL CONSTRAINT [BCFTRV_DB_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()) 
	)
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the jurisdiction class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876608', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The jurisdiction class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876608', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the jurisdiction sub-class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876608', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The jurisdiction sub-class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876608', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876608', 
	@level2type = N'Column', @level2name = N'GROSS_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876608', 
	@level2type = N'Column', @level2name = N'GROSS_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876608', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876608', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876608', 
	@level2type = N'Column', @level2name = N'NET_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876608', 
	@level2type = N'Column', @level2name = N'NET_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Values summarized by property class and sub-class for BC Transit purposes.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876608'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
INSERT INTO [dbo].[ADS_SSDATA_1648755876608]([ROLL_NUMBER], [PROPERTY_CLASS_CODE], [PROPERTY_CLASS_DESCRIPTION], [PROPERTY_SUBCLASS_CODE], [PROPERTY_SUBCLASS_DESCRIPTION], [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID]) 
	SELECT [ROLL_NUMBER], [PROPERTY_CLASS_CODE], SUBSTRING(PROPERTY_CLASS_DESCRIPTION,1,16), [PROPERTY_SUBCLASS_CODE], SUBSTRING(PROPERTY_SUBCLASS_DESCRIPTION,1,16), [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID] 
	FROM [dbo].[BCA_FOLIO_BCTRANSIT_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DROP TABLE [dbo].[BCA_FOLIO_BCTRANSIT_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC dbo.sp_rename N'[dbo].[ADS_SSDATA_1648755876608]', N'BCA_FOLIO_BCTRANSIT_VALUE', [OBJECT]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Rebuild table dbo.BCA_AREA_GENERAL_VALUE
PRINT N'Rebuild table dbo.BCA_AREA_GENERAL_VALUE'
GO
ALTER TABLE [dbo].[BCA_AREA_GENERAL_VALUE]
DROP CONSTRAINT [BCAGNV_DB_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_AREA_GENERAL_VALUE]
DROP CONSTRAINT [BCAGNV_DB_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_AREA_GENERAL_VALUE]
DROP CONSTRAINT [BCAGNV_DB_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_AREA_GENERAL_VALUE]
DROP CONSTRAINT [BCAGNV_DB_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
CREATE TABLE [dbo].[ADS_SSDATA_1648755876609]  ( 
	[AREA_CODE]                    	nvarchar(16) NULL,
	[PROPERTY_CLASS_CODE]          	nvarchar(16) NULL,
	[PROPERTY_CLASS_DESCRIPTION]   	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_CODE]       	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_DESCRIPTION]	nvarchar(16) NULL,
	[GROSS_LAND_VALUE]             	money NULL,
	[GROSS_IMPROVEMENT_VALUE]      	money NULL,
	[TAX_EXEMPT_LAND_VALUE]        	money NULL,
	[TAX_EXEMPT_IMPROVEMENT_VALUE] 	money NULL,
	[NET_LAND_VALUE]               	money NULL,
	[NET_IMPROVEMENT_VALUE]        	money NULL,
	[DB_CREATE_TIMESTAMP]          	datetime NOT NULL CONSTRAINT [BCAGNV_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_CREATE_USERID]             	nvarchar(30) NOT NULL CONSTRAINT [BCAGNV_DB_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[DB_LAST_UPDATE_TIMESTAMP]     	datetime NOT NULL CONSTRAINT [BCAGNV_DB_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_LAST_UPDATE_USERID]        	nvarchar(30) NOT NULL CONSTRAINT [BCAGNV_DB_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()) 
	)
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the area class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876609', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The area class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876609', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the area sub-class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876609', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The area sub-class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876609', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876609', 
	@level2type = N'Column', @level2name = N'GROSS_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876609', 
	@level2type = N'Column', @level2name = N'GROSS_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876609', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876609', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876609', 
	@level2type = N'Column', @level2name = N'NET_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876609', 
	@level2type = N'Column', @level2name = N'NET_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Values summarized by property class and sub-class for general purposes.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876609'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
INSERT INTO [dbo].[ADS_SSDATA_1648755876609]([AREA_CODE], [PROPERTY_CLASS_CODE], [PROPERTY_CLASS_DESCRIPTION], [PROPERTY_SUBCLASS_CODE], [PROPERTY_SUBCLASS_DESCRIPTION], [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID]) 
	SELECT [AREA_CODE], [PROPERTY_CLASS_CODE], SUBSTRING(PROPERTY_CLASS_DESCRIPTION,1,16), [PROPERTY_SUBCLASS_CODE], SUBSTRING(PROPERTY_SUBCLASS_DESCRIPTION,1,16), [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID] 
	FROM [dbo].[BCA_AREA_GENERAL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DROP TABLE [dbo].[BCA_AREA_GENERAL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC dbo.sp_rename N'[dbo].[ADS_SSDATA_1648755876609]', N'BCA_AREA_GENERAL_VALUE', [OBJECT]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create view dbo.PIMS_CONTACT_MGR_VW
PRINT N'Create view dbo.PIMS_CONTACT_MGR_VW'
GO
CREATE VIEW [dbo].[PIMS_CONTACT_MGR_VW] AS
  SELECT CONCAT('P', PER.PERSON_ID)                                                                              AS ID
       , PER.PERSON_ID
       , ORG.ORGANIZATION_ID                                                                                     AS ORGANIZATION_ID                
       , PER.IS_DISABLED
       , TRIM(CONCAT_WS(' ', NULLIF(PER.FIRST_NAME, ''), NULLIF(PER.MIDDLE_NAMES, ''), NULLIF(PER.SURNAME, ''))) AS SUMMARY
       , PER.SURNAME
       , PER.FIRST_NAME
       , PER.MIDDLE_NAMES
       , ORG.ORGANIZATION_NAME                                                                                   AS ORGANIZATION_NAME
       , PAD.ADDRESS_ID
       , ADR.STREET_ADDRESS_1                                                                                    AS MAILING_ADDRESS
       , ADR.MUNICIPALITY_NAME
       , PRV.PROVINCE_STATE_CODE                                                                                 AS PROVINCE_STATE
       , COALESCE(PVW.WORK_EMAIL, PVW.PERSONAL_EMAIL)                                                            AS EMAIL_ADDRESS
  FROM   PIMS_PERSON              PER                                                         LEFT JOIN
         PIMS_PERSON_ADDRESS      PAD ON PAD.PERSON_ID                = PER.PERSON_ID   
                                     AND PAD.ADDRESS_USAGE_TYPE_CODE  = 'MAILING'             LEFT JOIN
         PIMS_ADDRESS             ADR ON ADR.ADDRESS_ID               = PAD.ADDRESS_ID        LEFT JOIN 
         PIMS_PROVINCE_STATE      PRV ON PRV.PROVINCE_STATE_ID        = ADR.PROVINCE_STATE_ID LEFT JOIN
         PIMS_PERSON_CONTACT_VW   PVW ON PVW.PERSON_ID                = PER.PERSON_ID         LEFT JOIN
         PIMS_PERSON_ORGANIZATION POR ON POR.PERSON_ID                = PER.PERSON_ID         LEFT JOIN
         PIMS_ORGANIZATION        ORG ON ORG.ORGANIZATION_ID          = POR.ORGANIZATION_ID 
  UNION
  SELECT CONCAT('O', ORG.ORGANIZATION_ID)
       , NULL
       , ORG.ORGANIZATION_ID
       , ORG.IS_DISABLED
       , ORG.ORGANIZATION_NAME
       , NULL
       , NULL                            
       , NULL                                                        
       , ORG.ORGANIZATION_NAME
       , OAD.ADDRESS_ID
       , ADR.STREET_ADDRESS_1
       , ADR.MUNICIPALITY_NAME                     
       , PRV.PROVINCE_STATE_CODE
       , CON.CONTACT_METHOD_VALUE 
  FROM   PIMS_ORGANIZATION         ORG                                                         LEFT JOIN 
         PIMS_ORGANIZATION_ADDRESS OAD ON OAD.ORGANIZATION_ID          = ORG.ORGANIZATION_ID
                                      AND OAD.ADDRESS_USAGE_TYPE_CODE  = 'MAILING'             LEFT JOIN
         PIMS_ADDRESS              ADR ON ADR.ADDRESS_ID               = OAD.ADDRESS_ID        LEFT JOIN 
         PIMS_PROVINCE_STATE       PRV ON PRV.PROVINCE_STATE_ID        = ADR.PROVINCE_STATE_ID LEFT JOIN
         PIMS_CONTACT_METHOD       CON ON CON.ORGANIZATION_ID          = ORG.ORGANIZATION_ID
                                      AND CON.CONTACT_METHOD_TYPE_CODE = 'WORKEMAIL'

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Rebuild table dbo.BCA_FOLIO_GENERAL_VALUE
PRINT N'Rebuild table dbo.BCA_FOLIO_GENERAL_VALUE'
GO
ALTER TABLE [dbo].[BCA_FOLIO_GENERAL_VALUE]
DROP CONSTRAINT [BCFGNV_DB_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_FOLIO_GENERAL_VALUE]
DROP CONSTRAINT [BCFGNV_DB_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_FOLIO_GENERAL_VALUE]
DROP CONSTRAINT [BCFGNV_DB_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_FOLIO_GENERAL_VALUE]
DROP CONSTRAINT [BCFGNV_DB_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
CREATE TABLE [dbo].[ADS_SSDATA_1648755876610]  ( 
	[ROLL_NUMBER]                  	nvarchar(32) NULL,
	[PROPERTY_CLASS_CODE]          	nvarchar(16) NULL,
	[PROPERTY_CLASS_DESCRIPTION]   	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_CODE]       	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_DESCRIPTION]	nvarchar(16) NULL,
	[GROSS_LAND_VALUE]             	money NULL,
	[GROSS_IMPROVEMENT_VALUE]      	money NULL,
	[TAX_EXEMPT_LAND_VALUE]        	money NULL,
	[TAX_EXEMPT_IMPROVEMENT_VALUE] 	money NULL,
	[NET_LAND_VALUE]               	money NULL,
	[NET_IMPROVEMENT_VALUE]        	money NULL,
	[DB_CREATE_TIMESTAMP]          	datetime NOT NULL CONSTRAINT [BCFGNV_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_CREATE_USERID]             	nvarchar(30) NOT NULL CONSTRAINT [BCFGNV_DB_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[DB_LAST_UPDATE_TIMESTAMP]     	datetime NOT NULL CONSTRAINT [BCFGNV_DB_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_LAST_UPDATE_USERID]        	nvarchar(30) NOT NULL CONSTRAINT [BCFGNV_DB_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()) 
	)
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the jurisdiction class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876610', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The jurisdiction class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876610', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the jurisdiction sub-class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876610', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The jurisdiction sub-class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876610', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876610', 
	@level2type = N'Column', @level2name = N'GROSS_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876610', 
	@level2type = N'Column', @level2name = N'GROSS_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876610', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876610', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876610', 
	@level2type = N'Column', @level2name = N'NET_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876610', 
	@level2type = N'Column', @level2name = N'NET_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Values summarized by property class and sub-class for general purposes.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876610'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
INSERT INTO [dbo].[ADS_SSDATA_1648755876610]([ROLL_NUMBER], [PROPERTY_CLASS_CODE], [PROPERTY_CLASS_DESCRIPTION], [PROPERTY_SUBCLASS_CODE], [PROPERTY_SUBCLASS_DESCRIPTION], [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID]) 
	SELECT [ROLL_NUMBER], [PROPERTY_CLASS_CODE], SUBSTRING(PROPERTY_CLASS_DESCRIPTION,1,16), [PROPERTY_SUBCLASS_CODE], SUBSTRING(PROPERTY_SUBCLASS_DESCRIPTION,1,16), [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID] 
	FROM [dbo].[BCA_FOLIO_GENERAL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DROP TABLE [dbo].[BCA_FOLIO_GENERAL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC dbo.sp_rename N'[dbo].[ADS_SSDATA_1648755876610]', N'BCA_FOLIO_GENERAL_VALUE', [OBJECT]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Rebuild table dbo.BCA_AREA_BCTRANSIT_VALUE
PRINT N'Rebuild table dbo.BCA_AREA_BCTRANSIT_VALUE'
GO
ALTER TABLE [dbo].[BCA_AREA_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCATRV_DB_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_AREA_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCATRV_DB_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_AREA_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCATRV_DB_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_AREA_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCATRV_DB_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
CREATE TABLE [dbo].[ADS_SSDATA_1648755876611]  ( 
	[AREA_CODE]                    	nvarchar(16) NULL,
	[PROPERTY_CLASS_CODE]          	nvarchar(16) NULL,
	[PROPERTY_CLASS_DESCRIPTION]   	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_CODE]       	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_DESCRIPTION]	nvarchar(16) NULL,
	[GROSS_LAND_VALUE]             	money NULL,
	[GROSS_IMPROVEMENT_VALUE]      	money NULL,
	[TAX_EXEMPT_LAND_VALUE]        	money NULL,
	[TAX_EXEMPT_IMPROVEMENT_VALUE] 	money NULL,
	[NET_LAND_VALUE]               	money NULL,
	[NET_IMPROVEMENT_VALUE]        	money NULL,
	[DB_CREATE_TIMESTAMP]          	datetime NOT NULL CONSTRAINT [BCATRV_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_CREATE_USERID]             	nvarchar(30) NOT NULL CONSTRAINT [BCATRV_DB_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[DB_LAST_UPDATE_TIMESTAMP]     	datetime NOT NULL CONSTRAINT [BCATRV_DB_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_LAST_UPDATE_USERID]        	nvarchar(30) NOT NULL CONSTRAINT [BCATRV_DB_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()) 
	)
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the area class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876611', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The area class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876611', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the area sub-class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876611', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The area sub-class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876611', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876611', 
	@level2type = N'Column', @level2name = N'GROSS_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876611', 
	@level2type = N'Column', @level2name = N'GROSS_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876611', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876611', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876611', 
	@level2type = N'Column', @level2name = N'NET_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876611', 
	@level2type = N'Column', @level2name = N'NET_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Values summarized by property class and sub-class for BC Transit purposes.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876611'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
INSERT INTO [dbo].[ADS_SSDATA_1648755876611]([AREA_CODE], [PROPERTY_CLASS_CODE], [PROPERTY_CLASS_DESCRIPTION], [PROPERTY_SUBCLASS_CODE], [PROPERTY_SUBCLASS_DESCRIPTION], [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID]) 
	SELECT [AREA_CODE], [PROPERTY_CLASS_CODE], SUBSTRING(PROPERTY_CLASS_DESCRIPTION,1,16), [PROPERTY_SUBCLASS_CODE], SUBSTRING(PROPERTY_SUBCLASS_DESCRIPTION,1,16), [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID] 
	FROM [dbo].[BCA_AREA_BCTRANSIT_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DROP TABLE [dbo].[BCA_AREA_BCTRANSIT_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC dbo.sp_rename N'[dbo].[ADS_SSDATA_1648755876611]', N'BCA_AREA_BCTRANSIT_VALUE', [OBJECT]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Rebuild table dbo.BCA_FOLIO_SCHOOL_VALUE
PRINT N'Rebuild table dbo.BCA_FOLIO_SCHOOL_VALUE'
GO
ALTER TABLE [dbo].[BCA_FOLIO_SCHOOL_VALUE]
DROP CONSTRAINT [BCFSCV_DB_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_FOLIO_SCHOOL_VALUE]
DROP CONSTRAINT [BCFSCV_DB_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_FOLIO_SCHOOL_VALUE]
DROP CONSTRAINT [BCFSCV_DB_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_FOLIO_SCHOOL_VALUE]
DROP CONSTRAINT [BCFSCV_DB_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
CREATE TABLE [dbo].[ADS_SSDATA_1648755876612]  ( 
	[ROLL_NUMBER]                  	nvarchar(32) NULL,
	[PROPERTY_CLASS_CODE]          	nvarchar(16) NULL,
	[PROPERTY_CLASS_DESCRIPTION]   	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_CODE]       	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_DESCRIPTION]	nvarchar(16) NULL,
	[GROSS_LAND_VALUE]             	money NULL,
	[GROSS_IMPROVEMENT_VALUE]      	money NULL,
	[TAX_EXEMPT_LAND_VALUE]        	money NULL,
	[TAX_EXEMPT_IMPROVEMENT_VALUE] 	money NULL,
	[NET_LAND_VALUE]               	money NULL,
	[NET_IMPROVEMENT_VALUE]        	money NULL,
	[DB_CREATE_TIMESTAMP]          	datetime NOT NULL CONSTRAINT [BCFSCV_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_CREATE_USERID]             	nvarchar(30) NOT NULL CONSTRAINT [BCFSCV_DB_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[DB_LAST_UPDATE_TIMESTAMP]     	datetime NOT NULL CONSTRAINT [BCFSCV_DB_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_LAST_UPDATE_USERID]        	nvarchar(30) NOT NULL CONSTRAINT [BCFSCV_DB_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()) 
	)
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the jurisdiction class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876612', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The jurisdiction class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876612', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the jurisdiction sub-class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876612', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The jurisdiction sub-class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876612', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876612', 
	@level2type = N'Column', @level2name = N'GROSS_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876612', 
	@level2type = N'Column', @level2name = N'GROSS_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876612', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876612', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876612', 
	@level2type = N'Column', @level2name = N'NET_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876612', 
	@level2type = N'Column', @level2name = N'NET_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Values summarized by property class and sub-class for school purposes.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876612'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
INSERT INTO [dbo].[ADS_SSDATA_1648755876612]([ROLL_NUMBER], [PROPERTY_CLASS_CODE], [PROPERTY_CLASS_DESCRIPTION], [PROPERTY_SUBCLASS_CODE], [PROPERTY_SUBCLASS_DESCRIPTION], [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID]) 
	SELECT [ROLL_NUMBER], [PROPERTY_CLASS_CODE], SUBSTRING(PROPERTY_CLASS_DESCRIPTION,1,16), [PROPERTY_SUBCLASS_CODE], SUBSTRING(PROPERTY_SUBCLASS_DESCRIPTION,1,16), [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID] 
	FROM [dbo].[BCA_FOLIO_SCHOOL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DROP TABLE [dbo].[BCA_FOLIO_SCHOOL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC dbo.sp_rename N'[dbo].[ADS_SSDATA_1648755876612]', N'BCA_FOLIO_SCHOOL_VALUE', [OBJECT]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Rebuild table dbo.BCA_DATA_ADVICE_SCHOOL_VALUE
PRINT N'Rebuild table dbo.BCA_DATA_ADVICE_SCHOOL_VALUE'
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_SCHOOL_VALUE]
DROP CONSTRAINT [BCDSCV_DB_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_SCHOOL_VALUE]
DROP CONSTRAINT [BCDSCV_DB_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_SCHOOL_VALUE]
DROP CONSTRAINT [BCDSCV_DB_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_SCHOOL_VALUE]
DROP CONSTRAINT [BCDSCV_DB_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
CREATE TABLE [dbo].[ADS_SSDATA_1648755876613]  ( 
	[DATA_ADVICE_ID]               	bigint NULL,
	[PROPERTY_CLASS_CODE]          	nvarchar(16) NULL,
	[PROPERTY_CLASS_DESCRIPTION]   	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_CODE]       	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_DESCRIPTION]	nvarchar(16) NULL,
	[GROSS_LAND_VALUE]             	money NULL,
	[GROSS_IMPROVEMENT_VALUE]      	money NULL,
	[TAX_EXEMPT_LAND_VALUE]        	money NULL,
	[TAX_EXEMPT_IMPROVEMENT_VALUE] 	money NULL,
	[NET_LAND_VALUE]               	money NULL,
	[NET_IMPROVEMENT_VALUE]        	money NULL,
	[DB_CREATE_TIMESTAMP]          	datetime NOT NULL CONSTRAINT [BCDSCV_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_CREATE_USERID]             	nvarchar(30) NOT NULL CONSTRAINT [BCDSCV_DB_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[DB_LAST_UPDATE_TIMESTAMP]     	datetime NOT NULL CONSTRAINT [BCDSCV_DB_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_LAST_UPDATE_USERID]        	nvarchar(30) NOT NULL CONSTRAINT [BCDSCV_DB_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()) 
	)
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the property class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876613', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The property class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876613', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the property sub-class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876613', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The property sub-class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876613', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876613', 
	@level2type = N'Column', @level2name = N'GROSS_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876613', 
	@level2type = N'Column', @level2name = N'GROSS_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876613', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876613', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876613', 
	@level2type = N'Column', @level2name = N'NET_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876613', 
	@level2type = N'Column', @level2name = N'NET_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Values summarized by property class and sub-class for school purposes.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876613'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
INSERT INTO [dbo].[ADS_SSDATA_1648755876613]([DATA_ADVICE_ID], [PROPERTY_CLASS_CODE], [PROPERTY_CLASS_DESCRIPTION], [PROPERTY_SUBCLASS_CODE], [PROPERTY_SUBCLASS_DESCRIPTION], [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID]) 
	SELECT [DATA_ADVICE_ID], [PROPERTY_CLASS_CODE], SUBSTRING(PROPERTY_CLASS_DESCRIPTION,1,16), [PROPERTY_SUBCLASS_CODE], SUBSTRING(PROPERTY_SUBCLASS_DESCRIPTION,1,16), [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID] 
	FROM [dbo].[BCA_DATA_ADVICE_SCHOOL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DROP TABLE [dbo].[BCA_DATA_ADVICE_SCHOOL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC dbo.sp_rename N'[dbo].[ADS_SSDATA_1648755876613]', N'BCA_DATA_ADVICE_SCHOOL_VALUE', [OBJECT]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Rebuild table dbo.BCA_AREA_SCHOOL_VALUE
PRINT N'Rebuild table dbo.BCA_AREA_SCHOOL_VALUE'
GO
ALTER TABLE [dbo].[BCA_AREA_SCHOOL_VALUE]
DROP CONSTRAINT [BCASCV_DB_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_AREA_SCHOOL_VALUE]
DROP CONSTRAINT [BCASCV_DB_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_AREA_SCHOOL_VALUE]
DROP CONSTRAINT [BCASCV_DB_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_AREA_SCHOOL_VALUE]
DROP CONSTRAINT [BCASCV_DB_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
CREATE TABLE [dbo].[ADS_SSDATA_1648755876614]  ( 
	[AREA_CODE]                    	nvarchar(16) NULL,
	[PROPERTY_CLASS_CODE]          	nvarchar(16) NULL,
	[PROPERTY_CLASS_DESCRIPTION]   	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_CODE]       	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_DESCRIPTION]	nvarchar(16) NULL,
	[GROSS_LAND_VALUE]             	money NULL,
	[GROSS_IMPROVEMENT_VALUE]      	money NULL,
	[TAX_EXEMPT_LAND_VALUE]        	money NULL,
	[TAX_EXEMPT_IMPROVEMENT_VALUE] 	money NULL,
	[NET_LAND_VALUE]               	money NULL,
	[NET_IMPROVEMENT_VALUE]        	money NULL,
	[DB_CREATE_TIMESTAMP]          	datetime NOT NULL CONSTRAINT [BCASCV_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_CREATE_USERID]             	nvarchar(30) NOT NULL CONSTRAINT [BCASCV_DB_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[DB_LAST_UPDATE_TIMESTAMP]     	datetime NOT NULL CONSTRAINT [BCASCV_DB_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_LAST_UPDATE_USERID]        	nvarchar(30) NOT NULL CONSTRAINT [BCASCV_DB_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()) 
	)
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the area class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876614', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The area class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876614', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the area sub-class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876614', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The area sub-class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876614', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876614', 
	@level2type = N'Column', @level2name = N'GROSS_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876614', 
	@level2type = N'Column', @level2name = N'GROSS_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876614', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876614', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876614', 
	@level2type = N'Column', @level2name = N'NET_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876614', 
	@level2type = N'Column', @level2name = N'NET_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Values summarized by property class and sub-class for school purposes.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876614'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
INSERT INTO [dbo].[ADS_SSDATA_1648755876614]([AREA_CODE], [PROPERTY_CLASS_CODE], [PROPERTY_CLASS_DESCRIPTION], [PROPERTY_SUBCLASS_CODE], [PROPERTY_SUBCLASS_DESCRIPTION], [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID]) 
	SELECT [AREA_CODE], [PROPERTY_CLASS_CODE], SUBSTRING(PROPERTY_CLASS_DESCRIPTION,1,16), [PROPERTY_SUBCLASS_CODE], SUBSTRING(PROPERTY_SUBCLASS_DESCRIPTION,1,16), [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID] 
	FROM [dbo].[BCA_AREA_SCHOOL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DROP TABLE [dbo].[BCA_AREA_SCHOOL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC dbo.sp_rename N'[dbo].[ADS_SSDATA_1648755876614]', N'BCA_AREA_SCHOOL_VALUE', [OBJECT]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Rebuild table dbo.BCA_JURISDICTION_BCTRANSIT_VALUE
PRINT N'Rebuild table dbo.BCA_JURISDICTION_BCTRANSIT_VALUE'
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCJTRV_DB_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCJTRV_DB_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCJTRV_DB_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCJTRV_DB_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
CREATE TABLE [dbo].[ADS_SSDATA_1648755876615]  ( 
	[JURISDICTION_CODE]            	nvarchar(16) NULL,
	[PROPERTY_CLASS_CODE]          	nvarchar(16) NULL,
	[PROPERTY_CLASS_DESCRIPTION]   	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_CODE]       	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_DESCRIPTION]	nvarchar(16) NULL,
	[GROSS_LAND_VALUE]             	money NULL,
	[GROSS_IMPROVEMENT_VALUE]      	money NULL,
	[TAX_EXEMPT_LAND_VALUE]        	money NULL,
	[TAX_EXEMPT_IMPROVEMENT_VALUE] 	money NULL,
	[NET_LAND_VALUE]               	money NULL,
	[NET_IMPROVEMENT_VALUE]        	money NULL,
	[DB_CREATE_TIMESTAMP]          	datetime NOT NULL CONSTRAINT [BCJTRV_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_CREATE_USERID]             	nvarchar(30) NOT NULL CONSTRAINT [BCJTRV_DB_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[DB_LAST_UPDATE_TIMESTAMP]     	datetime NOT NULL CONSTRAINT [BCJTRV_DB_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_LAST_UPDATE_USERID]        	nvarchar(30) NOT NULL CONSTRAINT [BCJTRV_DB_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()) 
	)
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the jurisdiction class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876615', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The jurisdiction class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876615', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the jurisdiction sub-class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876615', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The jurisdiction sub-class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876615', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876615', 
	@level2type = N'Column', @level2name = N'GROSS_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876615', 
	@level2type = N'Column', @level2name = N'GROSS_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876615', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876615', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876615', 
	@level2type = N'Column', @level2name = N'NET_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876615', 
	@level2type = N'Column', @level2name = N'NET_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Values summarized by property class and sub-class for BC Transit purposes.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876615'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
INSERT INTO [dbo].[ADS_SSDATA_1648755876615]([JURISDICTION_CODE], [PROPERTY_CLASS_CODE], [PROPERTY_CLASS_DESCRIPTION], [PROPERTY_SUBCLASS_CODE], [PROPERTY_SUBCLASS_DESCRIPTION], [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID]) 
	SELECT [JURISDICTION_CODE], [PROPERTY_CLASS_CODE], SUBSTRING(PROPERTY_CLASS_DESCRIPTION,1,16), [PROPERTY_SUBCLASS_CODE], SUBSTRING(PROPERTY_SUBCLASS_DESCRIPTION,1,16), [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID] 
	FROM [dbo].[BCA_JURISDICTION_BCTRANSIT_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DROP TABLE [dbo].[BCA_JURISDICTION_BCTRANSIT_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC dbo.sp_rename N'[dbo].[ADS_SSDATA_1648755876615]', N'BCA_JURISDICTION_BCTRANSIT_VALUE', [OBJECT]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create view dbo.PIMS_PROPERTY_BOUNDARY_VW
PRINT N'Create view dbo.PIMS_PROPERTY_BOUNDARY_VW'
GO
/* ---------------------------------------------------------------------- */
/* Add views                                                              */
/* ---------------------------------------------------------------------- */

CREATE VIEW [dbo].[PIMS_PROPERTY_BOUNDARY_VW] AS
SELECT PROP.PROPERTY_ID
     , PROP.PID
     , RIGHT('000000000' + CAST(PROP.PID AS VARCHAR(9)), 9) AS PID_PADDED
     , PROP.PIN
     , PROP.PROPERTY_TYPE_CODE
     , PROP.PROPERTY_STATUS_TYPE_CODE
     , PROP.PROPERTY_DATA_SOURCE_TYPE_CODE
     , PROP.PROPERTY_DATA_SOURCE_EFFECTIVE_DATE
     , PROP.PROPERTY_CLASSIFICATION_TYPE_CODE
     , PROP.PROPERTY_TENURE_TYPE_CODE
     , ADDR.STREET_ADDRESS_1
     , ADDR.STREET_ADDRESS_2
     , ADDR.STREET_ADDRESS_3
     , ADDR.MUNICIPALITY_NAME
     , ADDR.POSTAL_CODE
     , PROV.PROVINCE_STATE_CODE
     , PROV.DESCRIPTION AS PROVINCE_NAME
     , CNTY.COUNTRY_CODE
     , CNTY.DESCRIPTION AS COUNTRY_NAME
     , PROP.NAME
     , PROP.DESCRIPTION
     , PROP.ADDRESS_ID
     , PROP.REGION_CODE
     , PROP.DISTRICT_CODE
     , PROP.BOUNDARY AS GEOMETRY
     , PROP.PROPERTY_AREA_UNIT_TYPE_CODE
     , PROP.LAND_AREA
     , PROP.LAND_LEGAL_DESCRIPTION
     , PROP.ENCUMBRANCE_REASON
     , PROP.IS_SENSITIVE
     , PROP.IS_OWNED
     , PROP.IS_PROPERTY_OF_INTEREST
     , PROP.IS_VISIBLE_TO_OTHER_AGENCIES
     , PROP.ZONING,ZONING_POTENTIAL
FROM   PIMS_PROPERTY       PROP                                                    INNER JOIN
       PIMS_ADDRESS        ADDR ON ADDR.ADDRESS_ID        = PROP.ADDRESS_ID        INNER JOIN
       PIMS_PROVINCE_STATE PROV ON PROV.PROVINCE_STATE_ID = ADDR.PROVINCE_STATE_ID INNER JOIN
       PIMS_COUNTRY        CNTY ON CNTY.COUNTRY_ID        = ADDR.COUNTRY_ID
WHERE  PROP.BOUNDARY IS NOT NULL

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Rebuild table dbo.BCA_DATA_ADVICE_GENERAL_VALUE
PRINT N'Rebuild table dbo.BCA_DATA_ADVICE_GENERAL_VALUE'
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_GENERAL_VALUE]
DROP CONSTRAINT [BCDGNV_DB_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_GENERAL_VALUE]
DROP CONSTRAINT [BCDGNV_DB_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_GENERAL_VALUE]
DROP CONSTRAINT [BCDGNV_DB_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_GENERAL_VALUE]
DROP CONSTRAINT [BCDGNV_DB_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
CREATE TABLE [dbo].[ADS_SSDATA_1648755876616]  ( 
	[DATA_ADVICE_ID]               	bigint NULL,
	[PROPERTY_CLASS_CODE]          	nvarchar(16) NULL,
	[PROPERTY_CLASS_DESCRIPTION]   	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_CODE]       	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_DESCRIPTION]	nvarchar(16) NULL,
	[GROSS_LAND_VALUE]             	money NULL,
	[GROSS_IMPROVEMENT_VALUE]      	money NULL,
	[TAX_EXEMPT_LAND_VALUE]        	money NULL,
	[TAX_EXEMPT_IMPROVEMENT_VALUE] 	money NULL,
	[NET_LAND_VALUE]               	money NULL,
	[NET_IMPROVEMENT_VALUE]        	money NULL,
	[DB_CREATE_TIMESTAMP]          	datetime NOT NULL CONSTRAINT [BCDGNV_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_CREATE_USERID]             	nvarchar(30) NOT NULL CONSTRAINT [BCDGNV_DB_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[DB_LAST_UPDATE_TIMESTAMP]     	datetime NOT NULL CONSTRAINT [BCDGNV_DB_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_LAST_UPDATE_USERID]        	nvarchar(30) NOT NULL CONSTRAINT [BCDGNV_DB_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()) 
	)
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the property class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876616', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The property class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876616', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the property sub-class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876616', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The property sub-class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876616', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876616', 
	@level2type = N'Column', @level2name = N'GROSS_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876616', 
	@level2type = N'Column', @level2name = N'GROSS_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876616', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876616', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876616', 
	@level2type = N'Column', @level2name = N'NET_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876616', 
	@level2type = N'Column', @level2name = N'NET_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Values summarized by property class and sub-class for general purposes.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876616'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
INSERT INTO [dbo].[ADS_SSDATA_1648755876616]([DATA_ADVICE_ID], [PROPERTY_CLASS_CODE], [PROPERTY_CLASS_DESCRIPTION], [PROPERTY_SUBCLASS_CODE], [PROPERTY_SUBCLASS_DESCRIPTION], [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID]) 
	SELECT [DATA_ADVICE_ID], [PROPERTY_CLASS_CODE], SUBSTRING(PROPERTY_CLASS_DESCRIPTION,1,16), [PROPERTY_SUBCLASS_CODE], SUBSTRING(PROPERTY_SUBCLASS_DESCRIPTION,1,16), [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID] 
	FROM [dbo].[BCA_DATA_ADVICE_GENERAL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DROP TABLE [dbo].[BCA_DATA_ADVICE_GENERAL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC dbo.sp_rename N'[dbo].[ADS_SSDATA_1648755876616]', N'BCA_DATA_ADVICE_GENERAL_VALUE', [OBJECT]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create view dbo.PIMS_PROPERTY_LOCATION_VW
PRINT N'Create view dbo.PIMS_PROPERTY_LOCATION_VW'
GO
CREATE VIEW [dbo].[PIMS_PROPERTY_LOCATION_VW] AS
SELECT PROP.PROPERTY_ID              
     , PROP.PID
     , RIGHT('000000000' + CAST(PROP.PID AS VARCHAR(9)), 9) AS PID_PADDED
     , PROP.PIN                   
     , PROP.PROPERTY_TYPE_CODE
     , PROP.PROPERTY_STATUS_TYPE_CODE
     , PROP.PROPERTY_DATA_SOURCE_TYPE_CODE
     , PROP.PROPERTY_DATA_SOURCE_EFFECTIVE_DATE
     , PROP.PROPERTY_CLASSIFICATION_TYPE_CODE
     , PROP.PROPERTY_TENURE_TYPE_CODE
     , ADDR.STREET_ADDRESS_1
     , ADDR.STREET_ADDRESS_2
     , ADDR.STREET_ADDRESS_3
     , ADDR.MUNICIPALITY_NAME
     , ADDR.POSTAL_CODE      
     , PROV.PROVINCE_STATE_CODE
     , PROV.DESCRIPTION AS PROVINCE_NAME
     , CNTY.COUNTRY_CODE
     , CNTY.DESCRIPTION AS COUNTRY_NAME
     , PROP.NAME
     , PROP.DESCRIPTION
     , PROP.ADDRESS_ID                 
     , PROP.REGION_CODE
     , PROP.DISTRICT_CODE
     , PROP.LOCATION AS GEOMETRY
     , PROP.PROPERTY_AREA_UNIT_TYPE_CODE
     , PROP.LAND_AREA
     , PROP.LAND_LEGAL_DESCRIPTION
     , PROP.ENCUMBRANCE_REASON                                      
     , PROP.IS_SENSITIVE
     , PROP.IS_OWNED
     , PROP.IS_PROPERTY_OF_INTEREST
     , PROP.IS_VISIBLE_TO_OTHER_AGENCIES
     , PROP.ZONING,ZONING_POTENTIAL
FROM   PIMS_PROPERTY       PROP                                                    INNER JOIN
       PIMS_ADDRESS        ADDR ON ADDR.ADDRESS_ID        = PROP.ADDRESS_ID        INNER JOIN
       PIMS_PROVINCE_STATE PROV ON PROV.PROVINCE_STATE_ID = ADDR.PROVINCE_STATE_ID INNER JOIN
       PIMS_COUNTRY        CNTY ON CNTY.COUNTRY_ID        = ADDR.COUNTRY_ID
WHERE  PROP.LOCATION IS NOT NULL

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Rebuild table dbo.BCA_JURISDICTION_SCHOOL_VALUE
PRINT N'Rebuild table dbo.BCA_JURISDICTION_SCHOOL_VALUE'
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_SCHOOL_VALUE]
DROP CONSTRAINT [BCJSCV_DB_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_SCHOOL_VALUE]
DROP CONSTRAINT [BCJSCV_DB_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_SCHOOL_VALUE]
DROP CONSTRAINT [BCJSCV_DB_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_SCHOOL_VALUE]
DROP CONSTRAINT [BCJSCV_DB_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
CREATE TABLE [dbo].[ADS_SSDATA_1648755876617]  ( 
	[JURISDICTION_CODE]            	nvarchar(16) NULL,
	[PROPERTY_CLASS_CODE]          	nvarchar(16) NULL,
	[PROPERTY_CLASS_DESCRIPTION]   	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_CODE]       	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_DESCRIPTION]	nvarchar(16) NULL,
	[GROSS_LAND_VALUE]             	money NULL,
	[GROSS_IMPROVEMENT_VALUE]      	money NULL,
	[TAX_EXEMPT_LAND_VALUE]        	money NULL,
	[TAX_EXEMPT_IMPROVEMENT_VALUE] 	money NULL,
	[NET_LAND_VALUE]               	money NULL,
	[NET_IMPROVEMENT_VALUE]        	money NULL,
	[DB_CREATE_TIMESTAMP]          	datetime NOT NULL CONSTRAINT [BCJSCV_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_CREATE_USERID]             	nvarchar(30) NOT NULL CONSTRAINT [BCJSCV_DB_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[DB_LAST_UPDATE_TIMESTAMP]     	datetime NOT NULL CONSTRAINT [BCJSCV_DB_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_LAST_UPDATE_USERID]        	nvarchar(30) NOT NULL CONSTRAINT [BCJSCV_DB_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()) 
	)
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the jurisdiction class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876617', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The jurisdiction class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876617', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the jurisdiction sub-class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876617', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The jurisdiction sub-class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876617', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876617', 
	@level2type = N'Column', @level2name = N'GROSS_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876617', 
	@level2type = N'Column', @level2name = N'GROSS_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876617', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876617', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876617', 
	@level2type = N'Column', @level2name = N'NET_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876617', 
	@level2type = N'Column', @level2name = N'NET_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Values summarized by property class and sub-class for school purposes.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876617'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
INSERT INTO [dbo].[ADS_SSDATA_1648755876617]([JURISDICTION_CODE], [PROPERTY_CLASS_CODE], [PROPERTY_CLASS_DESCRIPTION], [PROPERTY_SUBCLASS_CODE], [PROPERTY_SUBCLASS_DESCRIPTION], [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID]) 
	SELECT [JURISDICTION_CODE], [PROPERTY_CLASS_CODE], SUBSTRING(PROPERTY_CLASS_DESCRIPTION,1,16), [PROPERTY_SUBCLASS_CODE], SUBSTRING(PROPERTY_SUBCLASS_DESCRIPTION,1,16), [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID] 
	FROM [dbo].[BCA_JURISDICTION_SCHOOL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DROP TABLE [dbo].[BCA_JURISDICTION_SCHOOL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC dbo.sp_rename N'[dbo].[ADS_SSDATA_1648755876617]', N'BCA_JURISDICTION_SCHOOL_VALUE', [OBJECT]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Rebuild table dbo.BCA_DATA_ADVICE_BCTRANSIT_VALUE
PRINT N'Rebuild table dbo.BCA_DATA_ADVICE_BCTRANSIT_VALUE'
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCDTRV_DB_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCDTRV_DB_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCDTRV_DB_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_BCTRANSIT_VALUE]
DROP CONSTRAINT [BCDTRV_DB_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
CREATE TABLE [dbo].[ADS_SSDATA_1648755876618]  ( 
	[DATA_ADVICE_ID]               	bigint NULL,
	[PROPERTY_CLASS_CODE]          	nvarchar(16) NULL,
	[PROPERTY_CLASS_DESCRIPTION]   	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_CODE]       	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_DESCRIPTION]	nvarchar(16) NULL,
	[GROSS_LAND_VALUE]             	money NULL,
	[GROSS_IMPROVEMENT_VALUE]      	money NULL,
	[TAX_EXEMPT_LAND_VALUE]        	money NULL,
	[TAX_EXEMPT_IMPROVEMENT_VALUE] 	money NULL,
	[NET_LAND_VALUE]               	money NULL,
	[NET_IMPROVEMENT_VALUE]        	money NULL,
	[DB_CREATE_TIMESTAMP]          	datetime NOT NULL CONSTRAINT [BCDTRV_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_CREATE_USERID]             	nvarchar(30) NOT NULL CONSTRAINT [BCDTRV_DB_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[DB_LAST_UPDATE_TIMESTAMP]     	datetime NOT NULL CONSTRAINT [BCDTRV_DB_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_LAST_UPDATE_USERID]        	nvarchar(30) NOT NULL CONSTRAINT [BCDTRV_DB_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()) 
	)
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the property class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876618', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The property class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876618', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the property sub-class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876618', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The property sub-class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876618', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876618', 
	@level2type = N'Column', @level2name = N'GROSS_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876618', 
	@level2type = N'Column', @level2name = N'GROSS_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876618', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876618', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876618', 
	@level2type = N'Column', @level2name = N'NET_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876618', 
	@level2type = N'Column', @level2name = N'NET_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Values summarized by property class and sub-class for BC Transit purposes.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876618'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
INSERT INTO [dbo].[ADS_SSDATA_1648755876618]([DATA_ADVICE_ID], [PROPERTY_CLASS_CODE], [PROPERTY_CLASS_DESCRIPTION], [PROPERTY_SUBCLASS_CODE], [PROPERTY_SUBCLASS_DESCRIPTION], [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID]) 
	SELECT [DATA_ADVICE_ID], [PROPERTY_CLASS_CODE], SUBSTRING(PROPERTY_CLASS_DESCRIPTION,1,16), [PROPERTY_SUBCLASS_CODE], SUBSTRING(PROPERTY_SUBCLASS_DESCRIPTION,1,16), [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID] 
	FROM [dbo].[BCA_DATA_ADVICE_BCTRANSIT_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DROP TABLE [dbo].[BCA_DATA_ADVICE_BCTRANSIT_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC dbo.sp_rename N'[dbo].[ADS_SSDATA_1648755876618]', N'BCA_DATA_ADVICE_BCTRANSIT_VALUE', [OBJECT]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.BCA_FOLIO_ADDRESS
PRINT N'Alter table dbo.BCA_FOLIO_ADDRESS'
GO
ALTER TABLE [dbo].[BCA_FOLIO_ADDRESS]
	DROP COLUMN [ADDRESS_ID]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Rebuild table dbo.BCA_JURISDICTION_GENERAL_VALUE
PRINT N'Rebuild table dbo.BCA_JURISDICTION_GENERAL_VALUE'
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_GENERAL_VALUE]
DROP CONSTRAINT [BCJGNV_DB_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_GENERAL_VALUE]
DROP CONSTRAINT [BCJGNV_DB_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_GENERAL_VALUE]
DROP CONSTRAINT [BCJGNV_DB_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_GENERAL_VALUE]
DROP CONSTRAINT [BCJGNV_DB_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
CREATE TABLE [dbo].[ADS_SSDATA_1648755876619]  ( 
	[JURISDICTION_CODE]            	nvarchar(16) NULL,
	[PROPERTY_CLASS_CODE]          	nvarchar(16) NULL,
	[PROPERTY_CLASS_DESCRIPTION]   	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_CODE]       	nvarchar(16) NULL,
	[PROPERTY_SUBCLASS_DESCRIPTION]	nvarchar(16) NULL,
	[GROSS_LAND_VALUE]             	money NULL,
	[GROSS_IMPROVEMENT_VALUE]      	money NULL,
	[TAX_EXEMPT_LAND_VALUE]        	money NULL,
	[TAX_EXEMPT_IMPROVEMENT_VALUE] 	money NULL,
	[NET_LAND_VALUE]               	money NULL,
	[NET_IMPROVEMENT_VALUE]        	money NULL,
	[DB_CREATE_TIMESTAMP]          	datetime NOT NULL CONSTRAINT [BCJGNV_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_CREATE_USERID]             	nvarchar(30) NOT NULL CONSTRAINT [BCJGNV_DB_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[DB_LAST_UPDATE_TIMESTAMP]     	datetime NOT NULL CONSTRAINT [BCJGNV_DB_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_LAST_UPDATE_USERID]        	nvarchar(30) NOT NULL CONSTRAINT [BCJGNV_DB_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()) 
	)
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the jurisdiction class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876619', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The jurisdiction class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876619', 
	@level2type = N'Column', @level2name = N'PROPERTY_CLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'A code indicating the jurisdiction sub-class.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876619', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_CODE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The jurisdiction sub-class description.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876619', 
	@level2type = N'Column', @level2name = N'PROPERTY_SUBCLASS_DESCRIPTION'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876619', 
	@level2type = N'Column', @level2name = N'GROSS_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The gross improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876619', 
	@level2type = N'Column', @level2name = N'GROSS_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876619', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The tax exempt improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876619', 
	@level2type = N'Column', @level2name = N'TAX_EXEMPT_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net land value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876619', 
	@level2type = N'Column', @level2name = N'NET_LAND_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'The net improvement value.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876619', 
	@level2type = N'Column', @level2name = N'NET_IMPROVEMENT_VALUE'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Values summarized by property class and sub-class for general purposes.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'ADS_SSDATA_1648755876619'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
INSERT INTO [dbo].[ADS_SSDATA_1648755876619]([JURISDICTION_CODE], [PROPERTY_CLASS_CODE], [PROPERTY_CLASS_DESCRIPTION], [PROPERTY_SUBCLASS_CODE], [PROPERTY_SUBCLASS_DESCRIPTION], [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID]) 
	SELECT [JURISDICTION_CODE], [PROPERTY_CLASS_CODE], SUBSTRING(PROPERTY_CLASS_DESCRIPTION,1,16), [PROPERTY_SUBCLASS_CODE], SUBSTRING(PROPERTY_SUBCLASS_DESCRIPTION,1,16), [GROSS_LAND_VALUE], [GROSS_IMPROVEMENT_VALUE], [TAX_EXEMPT_LAND_VALUE], [TAX_EXEMPT_IMPROVEMENT_VALUE], [NET_LAND_VALUE], [NET_IMPROVEMENT_VALUE], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID] 
	FROM [dbo].[BCA_JURISDICTION_GENERAL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DROP TABLE [dbo].[BCA_JURISDICTION_GENERAL_VALUE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC dbo.sp_rename N'[dbo].[ADS_SSDATA_1648755876619]', N'BCA_JURISDICTION_GENERAL_VALUE', [OBJECT]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.PRPRTY_PROPERTY_TENURE_TYPE_CODE_IDX
PRINT N'Create index dbo.PRPRTY_PROPERTY_TENURE_TYPE_CODE_IDX'
GO
CREATE NONCLUSTERED INDEX [PRPRTY_PROPERTY_TENURE_TYPE_CODE_IDX]
	ON [dbo].[PIMS_PROPERTY]([PROPERTY_TENURE_TYPE_CODE])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.PRPRTY_PROPERTY_ANOMALY_TYPE_CODE_IDX
PRINT N'Create index dbo.PRPRTY_PROPERTY_ANOMALY_TYPE_CODE_IDX'
GO
CREATE NONCLUSTERED INDEX [PRPRTY_PROPERTY_ANOMALY_TYPE_CODE_IDX]
	ON [dbo].[PIMS_PROPERTY]([PROPERTY_ANOMALY_TYPE_CODE])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.PRPRTY_PROPERTY_ADJACENT_LAND_TYPE_CODE_IDX
PRINT N'Create index dbo.PRPRTY_PROPERTY_ADJACENT_LAND_TYPE_CODE_IDX'
GO
CREATE NONCLUSTERED INDEX [PRPRTY_PROPERTY_ADJACENT_LAND_TYPE_CODE_IDX]
	ON [dbo].[PIMS_PROPERTY]([PROPERTY_ADJACENT_LAND_TYPE_CODE])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.PRPRTY_PROPERTY_ROAD_TYPE_CODE_IDX
PRINT N'Create index dbo.PRPRTY_PROPERTY_ROAD_TYPE_CODE_IDX'
GO
CREATE NONCLUSTERED INDEX [PRPRTY_PROPERTY_ROAD_TYPE_CODE_IDX]
	ON [dbo].[PIMS_PROPERTY]([PROPERTY_ROAD_TYPE_CODE])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.PRPRTY_VOLUMETRIC_UNIT_TYPE_CODE_IDX
PRINT N'Create index dbo.PRPRTY_VOLUMETRIC_UNIT_TYPE_CODE_IDX'
GO
CREATE NONCLUSTERED INDEX [PRPRTY_VOLUMETRIC_UNIT_TYPE_CODE_IDX]
	ON [dbo].[PIMS_PROPERTY]([VOLUMETRIC_UNIT_TYPE_CODE])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.PRPRTY_PROPERTY_AREA_UNIT_TYPE_CODE_IDX
PRINT N'Create index dbo.PRPRTY_PROPERTY_AREA_UNIT_TYPE_CODE_IDX'
GO
CREATE NONCLUSTERED INDEX [PRPRTY_PROPERTY_AREA_UNIT_TYPE_CODE_IDX]
	ON [dbo].[PIMS_PROPERTY]([PROPERTY_AREA_UNIT_TYPE_CODE])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_PRPRTY_A_S_IUD_TR
PRINT N'Create trigger dbo.PIMS_PRPRTY_A_S_IUD_TR'
GO
CREATE TRIGGER [dbo].[PIMS_PRPRTY_A_S_IUD_TR] ON PIMS_PROPERTY FOR INSERT, UPDATE, DELETE AS
SET NOCOUNT ON
BEGIN TRY
DECLARE @curr_date datetime;
SET @curr_date = getutcdate();
  IF NOT EXISTS(SELECT * FROM inserted) AND NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- historical
  IF EXISTS(SELECT * FROM deleted)
    update PIMS_PROPERTY_HIST set END_DATE_HIST = @curr_date where PROPERTY_ID in (select PROPERTY_ID from deleted) and END_DATE_HIST is null;
  
  IF EXISTS(SELECT * FROM inserted)
    insert into PIMS_PROPERTY_HIST ([PROPERTY_ID], [PROPERTY_MANAGER_ID], [PROP_MGMT_ORG_ID], [PROPERTY_TYPE_CODE], [PROPERTY_CLASSIFICATION_TYPE_CODE], [ADDRESS_ID], [REGION_CODE], [DISTRICT_CODE], [PROPERTY_TENURE_TYPE_CODE], [PROPERTY_AREA_UNIT_TYPE_CODE], [VOLUMETRIC_UNIT_TYPE_CODE], [PROPERTY_DATA_SOURCE_TYPE_CODE], [PROPERTY_STATUS_TYPE_CODE], [PROPERTY_ANOMALY_TYPE_CODE], [PROPERTY_ROAD_TYPE_CODE], [SURPLUS_DECLARATION_TYPE_CODE], [PROPERTY_ADJACENT_LAND_TYPE_CODE], [VOLUMETRIC_TYPE_CODE], [PROPERTY_DATA_SOURCE_EFFECTIVE_DATE], [NAME], [DESCRIPTION], [PID], [PIN], [LAND_AREA], [ENCUMBRANCE_REASON], [SURPLUS_DECLARATION_COMMENT], [SURPLUS_DECLARATION_DATE], [MUNICIPAL_ZONING], [IS_VOLUMETRIC_PARCEL], [VOLUMETRIC_MEASUREMENT], [IS_OWNED], [IS_PROPERTY_OF_INTEREST], [IS_VISIBLE_TO_OTHER_AGENCIES], [IS_SENSITIVE], [IS_PROVINCIAL_PUBLIC_HWY], [ZONING], [ZONING_POTENTIAL], [CONCURRENCY_CONTROL_NUMBER], [APP_CREATE_TIMESTAMP], [APP_CREATE_USERID], [APP_CREATE_USER_GUID], [APP_CREATE_USER_DIRECTORY], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USERID], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USER_DIRECTORY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], _PROPERTY_HIST_ID, END_DATE_HIST, EFFECTIVE_DATE_HIST)
      select [PROPERTY_ID], [PROPERTY_MANAGER_ID], [PROP_MGMT_ORG_ID], [PROPERTY_TYPE_CODE], [PROPERTY_CLASSIFICATION_TYPE_CODE], [ADDRESS_ID], [REGION_CODE], [DISTRICT_CODE], [PROPERTY_TENURE_TYPE_CODE], [PROPERTY_AREA_UNIT_TYPE_CODE], [VOLUMETRIC_UNIT_TYPE_CODE], [PROPERTY_DATA_SOURCE_TYPE_CODE], [PROPERTY_STATUS_TYPE_CODE], [PROPERTY_ANOMALY_TYPE_CODE], [PROPERTY_ROAD_TYPE_CODE], [SURPLUS_DECLARATION_TYPE_CODE], [PROPERTY_ADJACENT_LAND_TYPE_CODE], [VOLUMETRIC_TYPE_CODE], [PROPERTY_DATA_SOURCE_EFFECTIVE_DATE], [NAME], [DESCRIPTION], [PID], [PIN], [LAND_AREA], [ENCUMBRANCE_REASON], [SURPLUS_DECLARATION_COMMENT], [SURPLUS_DECLARATION_DATE], [MUNICIPAL_ZONING], [IS_VOLUMETRIC_PARCEL], [VOLUMETRIC_MEASUREMENT], [IS_OWNED], [IS_PROPERTY_OF_INTEREST], [IS_VISIBLE_TO_OTHER_AGENCIES], [IS_SENSITIVE], [IS_PROVINCIAL_PUBLIC_HWY], [ZONING], [ZONING_POTENTIAL], [CONCURRENCY_CONTROL_NUMBER], [APP_CREATE_TIMESTAMP], [APP_CREATE_USERID], [APP_CREATE_USER_GUID], [APP_CREATE_USER_DIRECTORY], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USERID], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USER_DIRECTORY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], (next value for [dbo].[PIMS_PROPERTY_H_ID_SEQ]) as [_PROPERTY_HIST_ID], null as [END_DATE_HIST], @curr_date as [EFFECTIVE_DATE_HIST] from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_PRPRTY_I_S_I_TR
PRINT N'Create trigger dbo.PIMS_PRPRTY_I_S_I_TR'
GO
CREATE TRIGGER [dbo].[PIMS_PRPRTY_I_S_I_TR] ON PIMS_PROPERTY INSTEAD OF INSERT AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM inserted) 
    RETURN;

  
  insert into PIMS_PROPERTY ("PROPERTY_ID",
      "PROPERTY_MANAGER_ID",
      "PROP_MGMT_ORG_ID",
      "PROPERTY_TYPE_CODE",
      "PROPERTY_CLASSIFICATION_TYPE_CODE",
      "ADDRESS_ID",
      "REGION_CODE",
      "DISTRICT_CODE",
      "PROPERTY_TENURE_TYPE_CODE",
      "PROPERTY_AREA_UNIT_TYPE_CODE",
      "VOLUMETRIC_UNIT_TYPE_CODE",
      "PROPERTY_DATA_SOURCE_TYPE_CODE",
      "PROPERTY_STATUS_TYPE_CODE",
      "PROPERTY_ANOMALY_TYPE_CODE",
      "PROPERTY_ROAD_TYPE_CODE",
      "SURPLUS_DECLARATION_TYPE_CODE",
      "PROPERTY_ADJACENT_LAND_TYPE_CODE",
      "VOLUMETRIC_TYPE_CODE",
      "PROPERTY_DATA_SOURCE_EFFECTIVE_DATE",
      "NAME",
      "DESCRIPTION",
      "PID",
      "PIN",
      "LAND_AREA",
      "LAND_LEGAL_DESCRIPTION",
      "BOUNDARY",
      "LOCATION",
      "ENCUMBRANCE_REASON",
      "SURPLUS_DECLARATION_COMMENT",
      "SURPLUS_DECLARATION_DATE",
      "NOTES",
      "MUNICIPAL_ZONING",
      "IS_VOLUMETRIC_PARCEL",
      "VOLUMETRIC_MEASUREMENT",
      "IS_OWNED",
      "IS_PROPERTY_OF_INTEREST",
      "IS_VISIBLE_TO_OTHER_AGENCIES",
      "IS_SENSITIVE",
      "IS_PROVINCIAL_PUBLIC_HWY",
      "ZONING",
      "ZONING_POTENTIAL",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY")
    select "PROPERTY_ID",
      "PROPERTY_MANAGER_ID",
      "PROP_MGMT_ORG_ID",
      "PROPERTY_TYPE_CODE",
      "PROPERTY_CLASSIFICATION_TYPE_CODE",
      "ADDRESS_ID",
      "REGION_CODE",
      "DISTRICT_CODE",
      "PROPERTY_TENURE_TYPE_CODE",
      "PROPERTY_AREA_UNIT_TYPE_CODE",
      "VOLUMETRIC_UNIT_TYPE_CODE",
      "PROPERTY_DATA_SOURCE_TYPE_CODE",
      "PROPERTY_STATUS_TYPE_CODE",
      "PROPERTY_ANOMALY_TYPE_CODE",
      "PROPERTY_ROAD_TYPE_CODE",
      "SURPLUS_DECLARATION_TYPE_CODE",
      "PROPERTY_ADJACENT_LAND_TYPE_CODE",
      "VOLUMETRIC_TYPE_CODE",
      "PROPERTY_DATA_SOURCE_EFFECTIVE_DATE",
      "NAME",
      "DESCRIPTION",
      "PID",
      "PIN",
      "LAND_AREA",
      "LAND_LEGAL_DESCRIPTION",
      "BOUNDARY",
      "LOCATION",
      "ENCUMBRANCE_REASON",
      "SURPLUS_DECLARATION_COMMENT",
      "SURPLUS_DECLARATION_DATE",
      "NOTES",
      "MUNICIPAL_ZONING",
      "IS_VOLUMETRIC_PARCEL",
      "VOLUMETRIC_MEASUREMENT",
      "IS_OWNED",
      "IS_PROPERTY_OF_INTEREST",
      "IS_VISIBLE_TO_OTHER_AGENCIES",
      "IS_SENSITIVE",
      "IS_PROVINCIAL_PUBLIC_HWY",
      "ZONING",
      "ZONING_POTENTIAL",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY"
    from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_PRPRTY_I_S_U_TR
PRINT N'Create trigger dbo.PIMS_PRPRTY_I_S_U_TR'
GO
CREATE TRIGGER [dbo].[PIMS_PRPRTY_I_S_U_TR] ON PIMS_PROPERTY INSTEAD OF UPDATE AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- validate concurrency control
  if exists (select 1 from inserted, deleted where inserted.CONCURRENCY_CONTROL_NUMBER != deleted.CONCURRENCY_CONTROL_NUMBER+1 AND inserted.PROPERTY_ID = deleted.PROPERTY_ID)
    raiserror('CONCURRENCY FAILURE.',16,1)


  -- update statement
  update PIMS_PROPERTY
    set "PROPERTY_ID" = inserted."PROPERTY_ID",
      "PROPERTY_MANAGER_ID" = inserted."PROPERTY_MANAGER_ID",
      "PROP_MGMT_ORG_ID" = inserted."PROP_MGMT_ORG_ID",
      "PROPERTY_TYPE_CODE" = inserted."PROPERTY_TYPE_CODE",
      "PROPERTY_CLASSIFICATION_TYPE_CODE" = inserted."PROPERTY_CLASSIFICATION_TYPE_CODE",
      "ADDRESS_ID" = inserted."ADDRESS_ID",
      "REGION_CODE" = inserted."REGION_CODE",
      "DISTRICT_CODE" = inserted."DISTRICT_CODE",
      "PROPERTY_TENURE_TYPE_CODE" = inserted."PROPERTY_TENURE_TYPE_CODE",
      "PROPERTY_AREA_UNIT_TYPE_CODE" = inserted."PROPERTY_AREA_UNIT_TYPE_CODE",
      "VOLUMETRIC_UNIT_TYPE_CODE" = inserted."VOLUMETRIC_UNIT_TYPE_CODE",
      "PROPERTY_DATA_SOURCE_TYPE_CODE" = inserted."PROPERTY_DATA_SOURCE_TYPE_CODE",
      "PROPERTY_STATUS_TYPE_CODE" = inserted."PROPERTY_STATUS_TYPE_CODE",
      "PROPERTY_ANOMALY_TYPE_CODE" = inserted."PROPERTY_ANOMALY_TYPE_CODE",
      "PROPERTY_ROAD_TYPE_CODE" = inserted."PROPERTY_ROAD_TYPE_CODE",
      "SURPLUS_DECLARATION_TYPE_CODE" = inserted."SURPLUS_DECLARATION_TYPE_CODE",
      "PROPERTY_ADJACENT_LAND_TYPE_CODE" = inserted."PROPERTY_ADJACENT_LAND_TYPE_CODE",
      "VOLUMETRIC_TYPE_CODE" = inserted."VOLUMETRIC_TYPE_CODE",
      "PROPERTY_DATA_SOURCE_EFFECTIVE_DATE" = inserted."PROPERTY_DATA_SOURCE_EFFECTIVE_DATE",
      "NAME" = inserted."NAME",
      "DESCRIPTION" = inserted."DESCRIPTION",
      "PID" = inserted."PID",
      "PIN" = inserted."PIN",
      "LAND_AREA" = inserted."LAND_AREA",
      "LAND_LEGAL_DESCRIPTION" = inserted."LAND_LEGAL_DESCRIPTION",
      "BOUNDARY" = inserted."BOUNDARY",
      "LOCATION" = inserted."LOCATION",
      "ENCUMBRANCE_REASON" = inserted."ENCUMBRANCE_REASON",
      "SURPLUS_DECLARATION_COMMENT" = inserted."SURPLUS_DECLARATION_COMMENT",
      "SURPLUS_DECLARATION_DATE" = inserted."SURPLUS_DECLARATION_DATE",
      "NOTES" = inserted."NOTES",
      "MUNICIPAL_ZONING" = inserted."MUNICIPAL_ZONING",
      "IS_VOLUMETRIC_PARCEL" = inserted."IS_VOLUMETRIC_PARCEL",
      "VOLUMETRIC_MEASUREMENT" = inserted."VOLUMETRIC_MEASUREMENT",
      "IS_OWNED" = inserted."IS_OWNED",
      "IS_PROPERTY_OF_INTEREST" = inserted."IS_PROPERTY_OF_INTEREST",
      "IS_VISIBLE_TO_OTHER_AGENCIES" = inserted."IS_VISIBLE_TO_OTHER_AGENCIES",
      "IS_SENSITIVE" = inserted."IS_SENSITIVE",
      "IS_PROVINCIAL_PUBLIC_HWY" = inserted."IS_PROVINCIAL_PUBLIC_HWY",
      "ZONING" = inserted."ZONING",
      "ZONING_POTENTIAL" = inserted."ZONING_POTENTIAL",
      "CONCURRENCY_CONTROL_NUMBER" = inserted."CONCURRENCY_CONTROL_NUMBER",
      "APP_LAST_UPDATE_TIMESTAMP" = inserted."APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID" = inserted."APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID" = inserted."APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY" = inserted."APP_LAST_UPDATE_USER_DIRECTORY"
    , DB_LAST_UPDATE_TIMESTAMP = getutcdate()
    , DB_LAST_UPDATE_USERID = user_name()
    from PIMS_PROPERTY
    inner join inserted
    on (PIMS_PROPERTY.PROPERTY_ID = inserted.PROPERTY_ID);

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.BCFTRV_ROLL_NUMBER_IDX
PRINT N'Create index dbo.BCFTRV_ROLL_NUMBER_IDX'
GO
CREATE NONCLUSTERED INDEX [BCFTRV_ROLL_NUMBER_IDX]
	ON [dbo].[BCA_FOLIO_BCTRANSIT_VALUE]([ROLL_NUMBER])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.BCAGNV_AREA_CODE_IDX
PRINT N'Create index dbo.BCAGNV_AREA_CODE_IDX'
GO
CREATE NONCLUSTERED INDEX [BCAGNV_AREA_CODE_IDX]
	ON [dbo].[BCA_AREA_GENERAL_VALUE]([AREA_CODE])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.BCFGNV_ROLL_NUMBER_IDX
PRINT N'Create index dbo.BCFGNV_ROLL_NUMBER_IDX'
GO
CREATE NONCLUSTERED INDEX [BCFGNV_ROLL_NUMBER_IDX]
	ON [dbo].[BCA_FOLIO_GENERAL_VALUE]([ROLL_NUMBER])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.BCATRV_AREA_CODE_IDX
PRINT N'Create index dbo.BCATRV_AREA_CODE_IDX'
GO
CREATE NONCLUSTERED INDEX [BCATRV_AREA_CODE_IDX]
	ON [dbo].[BCA_AREA_BCTRANSIT_VALUE]([AREA_CODE])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.BCFSCV_ROLL_NUMBER_IDX
PRINT N'Create index dbo.BCFSCV_ROLL_NUMBER_IDX'
GO
CREATE NONCLUSTERED INDEX [BCFSCV_ROLL_NUMBER_IDX]
	ON [dbo].[BCA_FOLIO_SCHOOL_VALUE]([ROLL_NUMBER])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.BCDSCV_DATA_ADVICE_ID_IDX
PRINT N'Create index dbo.BCDSCV_DATA_ADVICE_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [BCDSCV_DATA_ADVICE_ID_IDX]
	ON [dbo].[BCA_DATA_ADVICE_SCHOOL_VALUE]([DATA_ADVICE_ID])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.BCASCV_AREA_CODE_IDX
PRINT N'Create index dbo.BCASCV_AREA_CODE_IDX'
GO
CREATE NONCLUSTERED INDEX [BCASCV_AREA_CODE_IDX]
	ON [dbo].[BCA_AREA_SCHOOL_VALUE]([AREA_CODE])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.BCJTRV_JURISDICTION_CODE_IDX
PRINT N'Create index dbo.BCJTRV_JURISDICTION_CODE_IDX'
GO
CREATE NONCLUSTERED INDEX [BCJTRV_JURISDICTION_CODE_IDX]
	ON [dbo].[BCA_JURISDICTION_BCTRANSIT_VALUE]([JURISDICTION_CODE])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.BCDGNV_DATA_ADVICE_ID_IDX
PRINT N'Create index dbo.BCDGNV_DATA_ADVICE_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [BCDGNV_DATA_ADVICE_ID_IDX]
	ON [dbo].[BCA_DATA_ADVICE_GENERAL_VALUE]([DATA_ADVICE_ID])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.BCJSCV_JURISDICTION_CODE_IDX
PRINT N'Create index dbo.BCJSCV_JURISDICTION_CODE_IDX'
GO
CREATE NONCLUSTERED INDEX [BCJSCV_JURISDICTION_CODE_IDX]
	ON [dbo].[BCA_JURISDICTION_SCHOOL_VALUE]([JURISDICTION_CODE])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.BCDTRV_DATA_ADVICE_ID_IDX
PRINT N'Create index dbo.BCDTRV_DATA_ADVICE_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [BCDTRV_DATA_ADVICE_ID_IDX]
	ON [dbo].[BCA_DATA_ADVICE_BCTRANSIT_VALUE]([DATA_ADVICE_ID])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.BCJGNV_JURISDICTION_CODE_IDX
PRINT N'Create index dbo.BCJGNV_JURISDICTION_CODE_IDX'
GO
CREATE NONCLUSTERED INDEX [BCJGNV_JURISDICTION_CODE_IDX]
	ON [dbo].[BCA_JURISDICTION_GENERAL_VALUE]([JURISDICTION_CODE])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRADJL_PIM_PRPRTY_FK
PRINT N'Create foreign key constraint dbo.PIM_PRADJL_PIM_PRPRTY_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY]
	ADD CONSTRAINT [PIM_PRADJL_PIM_PRPRTY_FK]
	FOREIGN KEY([PROPERTY_ADJACENT_LAND_TYPE_CODE])
	REFERENCES [dbo].[PIMS_PROPERTY_ADJACENT_LAND_TYPE]([PROPERTY_ADJACENT_LAND_TYPE_CODE])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_ARUNIT_PIM_PRPRTY_VOL_FK
PRINT N'Create foreign key constraint dbo.PIM_ARUNIT_PIM_PRPRTY_VOL_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY]
	ADD CONSTRAINT [PIM_ARUNIT_PIM_PRPRTY_VOL_FK]
	FOREIGN KEY([VOLUMETRIC_UNIT_TYPE_CODE])
	REFERENCES [dbo].[PIMS_AREA_UNIT_TYPE]([AREA_UNIT_TYPE_CODE])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRROAD_PIM_PRPRTY_FK
PRINT N'Create foreign key constraint dbo.PIM_PRROAD_PIM_PRPRTY_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY]
	ADD CONSTRAINT [PIM_PRROAD_PIM_PRPRTY_FK]
	FOREIGN KEY([PROPERTY_ROAD_TYPE_CODE])
	REFERENCES [dbo].[PIMS_PROPERTY_ROAD_TYPE]([PROPERTY_ROAD_TYPE_CODE])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRANOM_PIM_PRPRTY_FK
PRINT N'Create foreign key constraint dbo.PIM_PRANOM_PIM_PRPRTY_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY]
	ADD CONSTRAINT [PIM_PRANOM_PIM_PRPRTY_FK]
	FOREIGN KEY([PROPERTY_ANOMALY_TYPE_CODE])
	REFERENCES [dbo].[PIMS_PROPERTY_ANOMALY_TYPE]([PROPERTY_ANOMALY_TYPE_CODE])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRPTNR_PIM_PRPRTY_FK
PRINT N'Create foreign key constraint dbo.PIM_PRPTNR_PIM_PRPRTY_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY]
	ADD CONSTRAINT [PIM_PRPTNR_PIM_PRPRTY_FK]
	FOREIGN KEY([PROPERTY_TENURE_TYPE_CODE])
	REFERENCES [dbo].[PIMS_PROPERTY_TENURE_TYPE]([PROPERTY_TENURE_TYPE_CODE])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_BCAFOR_PIM_BCFTRV_FK
PRINT N'Create foreign key constraint dbo.PIM_BCAFOR_PIM_BCFTRV_FK'
GO
ALTER TABLE [dbo].[BCA_FOLIO_BCTRANSIT_VALUE]
	ADD CONSTRAINT [PIM_BCAFOR_PIM_BCFTRV_FK]
	FOREIGN KEY([ROLL_NUMBER])
	REFERENCES [dbo].[BCA_FOLIO_RECORD]([ROLL_NUMBER])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_BCASAR_PIM_BCAGNV_FK
PRINT N'Create foreign key constraint dbo.PIM_BCASAR_PIM_BCAGNV_FK'
GO
ALTER TABLE [dbo].[BCA_AREA_GENERAL_VALUE]
	ADD CONSTRAINT [PIM_BCASAR_PIM_BCAGNV_FK]
	FOREIGN KEY([AREA_CODE])
	REFERENCES [dbo].[BCA_ASSESSMENT_AREA]([AREA_CODE])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_BCAFOR_PIM_BCFGNV_FK
PRINT N'Create foreign key constraint dbo.PIM_BCAFOR_PIM_BCFGNV_FK'
GO
ALTER TABLE [dbo].[BCA_FOLIO_GENERAL_VALUE]
	ADD CONSTRAINT [PIM_BCAFOR_PIM_BCFGNV_FK]
	FOREIGN KEY([ROLL_NUMBER])
	REFERENCES [dbo].[BCA_FOLIO_RECORD]([ROLL_NUMBER])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_BCASAR_PIM_BCATRV_FK
PRINT N'Create foreign key constraint dbo.PIM_BCASAR_PIM_BCATRV_FK'
GO
ALTER TABLE [dbo].[BCA_AREA_BCTRANSIT_VALUE]
	ADD CONSTRAINT [PIM_BCASAR_PIM_BCATRV_FK]
	FOREIGN KEY([AREA_CODE])
	REFERENCES [dbo].[BCA_ASSESSMENT_AREA]([AREA_CODE])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_BCAFOR_PIM_BCFSCV_FK
PRINT N'Create foreign key constraint dbo.PIM_BCAFOR_PIM_BCFSCV_FK'
GO
ALTER TABLE [dbo].[BCA_FOLIO_SCHOOL_VALUE]
	ADD CONSTRAINT [PIM_BCAFOR_PIM_BCFSCV_FK]
	FOREIGN KEY([ROLL_NUMBER])
	REFERENCES [dbo].[BCA_FOLIO_RECORD]([ROLL_NUMBER])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_BCDADV_PIM_BCDSCV_FK
PRINT N'Create foreign key constraint dbo.PIM_BCDADV_PIM_BCDSCV_FK'
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_SCHOOL_VALUE]
	ADD CONSTRAINT [PIM_BCDADV_PIM_BCDSCV_FK]
	FOREIGN KEY([DATA_ADVICE_ID])
	REFERENCES [dbo].[BCA_DATA_ADVICE]([DATA_ADVICE_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_BCASAR_PIM_BCASCV_FK
PRINT N'Create foreign key constraint dbo.PIM_BCASAR_PIM_BCASCV_FK'
GO
ALTER TABLE [dbo].[BCA_AREA_SCHOOL_VALUE]
	ADD CONSTRAINT [PIM_BCASAR_PIM_BCASCV_FK]
	FOREIGN KEY([AREA_CODE])
	REFERENCES [dbo].[BCA_ASSESSMENT_AREA]([AREA_CODE])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_BCAJUR_PIM_BCJTRV_FK
PRINT N'Create foreign key constraint dbo.PIM_BCAJUR_PIM_BCJTRV_FK'
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_BCTRANSIT_VALUE]
	ADD CONSTRAINT [PIM_BCAJUR_PIM_BCJTRV_FK]
	FOREIGN KEY([JURISDICTION_CODE])
	REFERENCES [dbo].[BCA_JURISDICTION]([JURISDICTION_CODE])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_BCDADV_PIM_BCDGNV_FK
PRINT N'Create foreign key constraint dbo.PIM_BCDADV_PIM_BCDGNV_FK'
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_GENERAL_VALUE]
	ADD CONSTRAINT [PIM_BCDADV_PIM_BCDGNV_FK]
	FOREIGN KEY([DATA_ADVICE_ID])
	REFERENCES [dbo].[BCA_DATA_ADVICE]([DATA_ADVICE_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_BCAJUR_PIM_BCJSCV_FK
PRINT N'Create foreign key constraint dbo.PIM_BCAJUR_PIM_BCJSCV_FK'
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_SCHOOL_VALUE]
	ADD CONSTRAINT [PIM_BCAJUR_PIM_BCJSCV_FK]
	FOREIGN KEY([JURISDICTION_CODE])
	REFERENCES [dbo].[BCA_JURISDICTION]([JURISDICTION_CODE])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_BCDADV_PIM_BCDTRV_FK
PRINT N'Create foreign key constraint dbo.PIM_BCDADV_PIM_BCDTRV_FK'
GO
ALTER TABLE [dbo].[BCA_DATA_ADVICE_BCTRANSIT_VALUE]
	ADD CONSTRAINT [PIM_BCDADV_PIM_BCDTRV_FK]
	FOREIGN KEY([DATA_ADVICE_ID])
	REFERENCES [dbo].[BCA_DATA_ADVICE]([DATA_ADVICE_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_BCAJUR_PIM_BCJGNV_FK
PRINT N'Create foreign key constraint dbo.PIM_BCAJUR_PIM_BCJGNV_FK'
GO
ALTER TABLE [dbo].[BCA_JURISDICTION_GENERAL_VALUE]
	ADD CONSTRAINT [PIM_BCAJUR_PIM_BCJGNV_FK]
	FOREIGN KEY([JURISDICTION_CODE])
	REFERENCES [dbo].[BCA_JURISDICTION]([JURISDICTION_CODE])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_PROP_PROP_TENURE_TYPE_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_PROP_PROP_TENURE_TYPE_ID_SEQ'
GO
DROP SEQUENCE [dbo].[PIMS_PROP_PROP_TENURE_TYPE_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_PROP_PROP_ROAD_TYPE_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_PROP_PROP_ROAD_TYPE_ID_SEQ'
GO
DROP SEQUENCE [dbo].[PIMS_PROP_PROP_ROAD_TYPE_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_PROP_PROP_ANOMALY_TYPE_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_PROP_PROP_ANOMALY_TYPE_ID_SEQ'
GO
DROP SEQUENCE [dbo].[PIMS_PROP_PROP_ANOMALY_TYPE_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_PROP_PROP_ADJACENT_LAND_TYPE_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_PROP_PROP_ADJACENT_LAND_TYPE_ID_SEQ'
GO
DROP SEQUENCE [dbo].[PIMS_PROP_PROP_ADJACENT_LAND_TYPE_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_PROPERTY_RESEARCH_FILE_HIST
PRINT N'Drop table dbo.PIMS_PROPERTY_RESEARCH_FILE_HIST'
GO
DROP TABLE [dbo].[PIMS_PROPERTY_RESEARCH_FILE_HIST]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_PROPERTY_RESEARCH_FILE_H_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_PROPERTY_RESEARCH_FILE_H_ID_SEQ'
GO
DROP SEQUENCE [dbo].[PIMS_PROPERTY_RESEARCH_FILE_H_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_PROPERTY_RESEARCH_FILE_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_PROPERTY_RESEARCH_FILE_ID_SEQ'
GO
DROP SEQUENCE [dbo].[PIMS_PROPERTY_RESEARCH_FILE_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_RESEARCH_FILE_HIST
PRINT N'Drop table dbo.PIMS_RESEARCH_FILE_HIST'
GO
DROP TABLE [dbo].[PIMS_RESEARCH_FILE_HIST]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_RESEARCH_FILE_H_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_RESEARCH_FILE_H_ID_SEQ'
GO
DROP SEQUENCE [dbo].[PIMS_RESEARCH_FILE_H_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_RESEARCH_FILE
PRINT N'Drop table dbo.PIMS_RESEARCH_FILE'
GO
DROP TABLE [dbo].[PIMS_RESEARCH_FILE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_RESEARCH_FILE_STATUS_TYPE
PRINT N'Drop table dbo.PIMS_RESEARCH_FILE_STATUS_TYPE'
GO
DROP TABLE [dbo].[PIMS_RESEARCH_FILE_STATUS_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_RESEARCH_FILE_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_RESEARCH_FILE_ID_SEQ'
GO
DROP SEQUENCE [dbo].[PIMS_RESEARCH_FILE_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_VOLUME_UNIT_TYPE
PRINT N'Drop table dbo.PIMS_VOLUME_UNIT_TYPE'
GO
DROP TABLE [dbo].[PIMS_VOLUME_UNIT_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

COMMIT TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DECLARE @Success AS BIT
SET @Success = 1
SET NOEXEC OFF
IF (@Success = 1) PRINT 'The database update succeeded'
ELSE BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   PRINT 'The database update failed'
END
GO
