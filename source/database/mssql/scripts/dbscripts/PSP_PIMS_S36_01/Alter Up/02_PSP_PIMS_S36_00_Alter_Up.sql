-- Script generated by Aqua Data Studio Schema Synchronization for MS SQL Server 2016 on Fri Sep 02 12:15:18 PDT 2022
-- Execute this script on:
-- 		PSP_PIMS_S36_00/dbo - This database/schema will be modified
-- to synchronize it with MS SQL Server 2016:
-- 		PSP_PIMS_S36_01/dbo

-- We recommend backing up the database prior to executing the script.

SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO
BEGIN TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create sequence dbo.PIMS_ACT_INST_PROP_RSRCH_FILE_ID_SEQ
PRINT N'Create sequence dbo.PIMS_ACT_INST_PROP_RSRCH_FILE_ID_SEQ'
GO
CREATE SEQUENCE [dbo].[PIMS_ACT_INST_PROP_RSRCH_FILE_ID_SEQ]
	AS bigint
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	NO CYCLE
	CACHE 50
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create table dbo.PIMS_ACT_INST_PROP_RSRCH_FILE
PRINT N'Create table dbo.PIMS_ACT_INST_PROP_RSRCH_FILE'
GO
CREATE TABLE [dbo].[PIMS_ACT_INST_PROP_RSRCH_FILE]  ( 
	[ACT_INST_PROP_RSRCH_FILE_ID]   	bigint NOT NULL CONSTRAINT [AIPRFL_ACT_INST_PROP_RSRCH_FILE_ID_DEF]  DEFAULT (NEXT VALUE FOR [PIMS_ACT_INST_PROP_RSRCH_FILE_ID_SEQ]),
	[ACTIVITY_INSTANCE_ID]          	bigint NOT NULL,
	[PROPERTY_RESEARCH_FILE_ID]     	bigint NOT NULL,
	[IS_DISABLED]                   	bit NULL CONSTRAINT [AIPRFL_IS_DISABLED_DEF]  DEFAULT (CONVERT([bit],(0))),
	[CONCURRENCY_CONTROL_NUMBER]    	bigint NOT NULL CONSTRAINT [AIPRFL_CONCURRENCY_CONTROL_NUMBER_DEF]  DEFAULT ((1)),
	[APP_CREATE_TIMESTAMP]          	datetime NOT NULL CONSTRAINT [AIPRFL_APP_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[APP_CREATE_USERID]             	nvarchar(30) NOT NULL CONSTRAINT [AIPRFL_APP_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[APP_CREATE_USER_GUID]          	uniqueidentifier NULL,
	[APP_CREATE_USER_DIRECTORY]     	nvarchar(30) NOT NULL CONSTRAINT [AIPRFL_APP_CREATE_USER_DIRECTORY_DEF]  DEFAULT (user_name()),
	[APP_LAST_UPDATE_TIMESTAMP]     	datetime NOT NULL CONSTRAINT [AIPRFL_APP_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[APP_LAST_UPDATE_USERID]        	nvarchar(30) NOT NULL CONSTRAINT [AIPRFL_APP_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()),
	[APP_LAST_UPDATE_USER_GUID]     	uniqueidentifier NULL,
	[APP_LAST_UPDATE_USER_DIRECTORY]	nvarchar(30) NOT NULL CONSTRAINT [AIPRFL_APP_LAST_UPDATE_USER_DIRECTORY_DEF]  DEFAULT (user_name()),
	[DB_CREATE_TIMESTAMP]           	datetime NOT NULL CONSTRAINT [AIPRFL_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_CREATE_USERID]              	nvarchar(30) NOT NULL CONSTRAINT [AIPRFL_DB_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[DB_LAST_UPDATE_TIMESTAMP]      	datetime NOT NULL CONSTRAINT [AIPRFL_DB_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_LAST_UPDATE_USERID]         	nvarchar(30) NOT NULL CONSTRAINT [AIPRFL_DB_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()),
	CONSTRAINT [AIPRFL_PK] PRIMARY KEY CLUSTERED([ACT_INST_PROP_RSRCH_FILE_ID])
 ON [PRIMARY])
ON [PRIMARY]
	WITH (
		DATA_COMPRESSION = NONE
	)
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Indicates if the relationship has been disabled.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_ACT_INST_PROP_RSRCH_FILE', 
	@level2type = N'Column', @level2name = N'IS_DISABLED'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'File to associate an activity instance with a subset of properties associated with the superset of research file properties.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_ACT_INST_PROP_RSRCH_FILE'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create unique constraint dbo.AIPRFL_ACT_INST_PROP_RSRCH_FL_TUC
PRINT N'Create unique constraint dbo.AIPRFL_ACT_INST_PROP_RSRCH_FL_TUC'
GO
ALTER TABLE [dbo].[PIMS_ACT_INST_PROP_RSRCH_FILE]
	ADD CONSTRAINT [AIPRFL_ACT_INST_PROP_RSRCH_FL_TUC]
	UNIQUE ([PROPERTY_RESEARCH_FILE_ID], [ACTIVITY_INSTANCE_ID])  
	WITH (
		DATA_COMPRESSION = NONE
	) ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create sequence dbo.PIMS_ACT_INST_PROP_ACQ_FILE_ID_SEQ
PRINT N'Create sequence dbo.PIMS_ACT_INST_PROP_ACQ_FILE_ID_SEQ'
GO
CREATE SEQUENCE [dbo].[PIMS_ACT_INST_PROP_ACQ_FILE_ID_SEQ]
	AS bigint
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	NO CYCLE
	CACHE 50
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create table dbo.PIMS_ACT_INST_PROP_ACQ_FILE
PRINT N'Create table dbo.PIMS_ACT_INST_PROP_ACQ_FILE'
GO
CREATE TABLE [dbo].[PIMS_ACT_INST_PROP_ACQ_FILE]  ( 
	[ACT_INST_PROP_ACQ_FILE_ID]     	bigint NOT NULL CONSTRAINT [AIPAFL_ACT_INST_PROP_ACQ_FILE_ID_DEF]  DEFAULT (NEXT VALUE FOR [PIMS_ACT_INST_PROP_ACQ_FILE_ID_SEQ]),
	[ACTIVITY_INSTANCE_ID]          	bigint NOT NULL,
	[PROPERTY_ACQUISITION_FILE_ID]  	bigint NOT NULL,
	[IS_DISABLED]                   	bit NULL CONSTRAINT [AIPAFL_IS_DISABLED_DEF]  DEFAULT (CONVERT([bit],(0))),
	[CONCURRENCY_CONTROL_NUMBER]    	bigint NOT NULL CONSTRAINT [AIPAFL_CONCURRENCY_CONTROL_NUMBER_DEF]  DEFAULT ((1)),
	[APP_CREATE_TIMESTAMP]          	datetime NOT NULL CONSTRAINT [AIPAFL_APP_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[APP_CREATE_USERID]             	nvarchar(30) NOT NULL CONSTRAINT [AIPAFL_APP_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[APP_CREATE_USER_GUID]          	uniqueidentifier NULL,
	[APP_CREATE_USER_DIRECTORY]     	nvarchar(30) NOT NULL CONSTRAINT [AIPAFL_APP_CREATE_USER_DIRECTORY_DEF]  DEFAULT (user_name()),
	[APP_LAST_UPDATE_TIMESTAMP]     	datetime NOT NULL CONSTRAINT [AIPAFL_APP_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[APP_LAST_UPDATE_USERID]        	nvarchar(30) NOT NULL CONSTRAINT [AIPAFL_APP_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()),
	[APP_LAST_UPDATE_USER_GUID]     	uniqueidentifier NULL,
	[APP_LAST_UPDATE_USER_DIRECTORY]	nvarchar(30) NOT NULL CONSTRAINT [AIPAFL_APP_LAST_UPDATE_USER_DIRECTORY_DEF]  DEFAULT (user_name()),
	[DB_CREATE_TIMESTAMP]           	datetime NOT NULL CONSTRAINT [AIPAFL_DB_CREATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_CREATE_USERID]              	nvarchar(30) NOT NULL CONSTRAINT [AIPAFL_DB_CREATE_USERID_DEF]  DEFAULT (user_name()),
	[DB_LAST_UPDATE_TIMESTAMP]      	datetime NOT NULL CONSTRAINT [AIPAFL_DB_LAST_UPDATE_TIMESTAMP_DEF]  DEFAULT (getutcdate()),
	[DB_LAST_UPDATE_USERID]         	nvarchar(30) NOT NULL CONSTRAINT [AIPAFL_DB_LAST_UPDATE_USERID_DEF]  DEFAULT (user_name()),
	CONSTRAINT [AIPAFL_PK] PRIMARY KEY CLUSTERED([ACT_INST_PROP_ACQ_FILE_ID])
 ON [PRIMARY])
ON [PRIMARY]
	WITH (
		DATA_COMPRESSION = NONE
	)
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Indicates if the relationship has been disabled.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_ACT_INST_PROP_ACQ_FILE', 
	@level2type = N'Column', @level2name = N'IS_DISABLED'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'File to associate an activity instance with a subset of properties associated with the superset of acquisition file properties.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_ACT_INST_PROP_ACQ_FILE'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create unique constraint dbo.AIPAFL_ACT_INST_PROP_ACQ_FL_TUC
PRINT N'Create unique constraint dbo.AIPAFL_ACT_INST_PROP_ACQ_FL_TUC'
GO
ALTER TABLE [dbo].[PIMS_ACT_INST_PROP_ACQ_FILE]
	ADD CONSTRAINT [AIPAFL_ACT_INST_PROP_ACQ_FL_TUC]
	UNIQUE ([PROPERTY_ACQUISITION_FILE_ID], [ACTIVITY_INSTANCE_ID])  
	WITH (
		DATA_COMPRESSION = NONE
	) ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create sequence dbo.PIMS_ACT_INST_PROP_RSRCH_FILE_H_ID_SEQ
PRINT N'Create sequence dbo.PIMS_ACT_INST_PROP_RSRCH_FILE_H_ID_SEQ'
GO
CREATE SEQUENCE [dbo].[PIMS_ACT_INST_PROP_RSRCH_FILE_H_ID_SEQ]
	AS bigint
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	NO CYCLE
	CACHE 50
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create table dbo.PIMS_ACT_INST_PROP_RSRCH_FILE_HIST
PRINT N'Create table dbo.PIMS_ACT_INST_PROP_RSRCH_FILE_HIST'
GO
CREATE TABLE [dbo].[PIMS_ACT_INST_PROP_RSRCH_FILE_HIST]  ( 
	[_ACT_INST_PROP_RSRCH_FILE_HIST_ID]	bigint NOT NULL DEFAULT (NEXT VALUE FOR [PIMS_ACT_INST_PROP_RSRCH_FILE_H_ID_SEQ]),
	[EFFECTIVE_DATE_HIST]              	datetime NOT NULL DEFAULT (getutcdate()),
	[END_DATE_HIST]                    	datetime NULL,
	[ACT_INST_PROP_RSRCH_FILE_ID]      	bigint NOT NULL,
	[ACTIVITY_INSTANCE_ID]             	bigint NOT NULL,
	[PROPERTY_RESEARCH_FILE_ID]        	bigint NOT NULL,
	[IS_DISABLED]                      	bit NULL,
	[CONCURRENCY_CONTROL_NUMBER]       	bigint NOT NULL,
	[APP_CREATE_TIMESTAMP]             	datetime NOT NULL,
	[APP_CREATE_USERID]                	nvarchar(30) NOT NULL,
	[APP_CREATE_USER_GUID]             	uniqueidentifier NULL,
	[APP_CREATE_USER_DIRECTORY]        	nvarchar(30) NOT NULL,
	[APP_LAST_UPDATE_TIMESTAMP]        	datetime NOT NULL,
	[APP_LAST_UPDATE_USERID]           	nvarchar(30) NOT NULL,
	[APP_LAST_UPDATE_USER_GUID]        	uniqueidentifier NULL,
	[APP_LAST_UPDATE_USER_DIRECTORY]   	nvarchar(30) NOT NULL,
	[DB_CREATE_TIMESTAMP]              	datetime NOT NULL,
	[DB_CREATE_USERID]                 	nvarchar(30) NOT NULL,
	[DB_LAST_UPDATE_TIMESTAMP]         	datetime NOT NULL,
	[DB_LAST_UPDATE_USERID]            	nvarchar(30) NOT NULL,
	CONSTRAINT [PIMS_AIPRFL_H_PK] PRIMARY KEY CLUSTERED([_ACT_INST_PROP_RSRCH_FILE_HIST_ID])
 ON [PRIMARY])
ON [PRIMARY]
	WITH (
		DATA_COMPRESSION = NONE
	)
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create unique constraint dbo.PIMS_AIPRFL_H_UK
PRINT N'Create unique constraint dbo.PIMS_AIPRFL_H_UK'
GO
ALTER TABLE [dbo].[PIMS_ACT_INST_PROP_RSRCH_FILE_HIST]
	ADD CONSTRAINT [PIMS_AIPRFL_H_UK]
	UNIQUE ([_ACT_INST_PROP_RSRCH_FILE_HIST_ID], [END_DATE_HIST])  
	WITH (
		DATA_COMPRESSION = NONE
	) ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create sequence dbo.PIMS_ACT_INST_PROP_ACQ_FILE_H_ID_SEQ
PRINT N'Create sequence dbo.PIMS_ACT_INST_PROP_ACQ_FILE_H_ID_SEQ'
GO
CREATE SEQUENCE [dbo].[PIMS_ACT_INST_PROP_ACQ_FILE_H_ID_SEQ]
	AS bigint
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	NO CYCLE
	CACHE 50
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create table dbo.PIMS_ACT_INST_PROP_ACQ_FILE_HIST
PRINT N'Create table dbo.PIMS_ACT_INST_PROP_ACQ_FILE_HIST'
GO
CREATE TABLE [dbo].[PIMS_ACT_INST_PROP_ACQ_FILE_HIST]  ( 
	[_ACT_INST_PROP_ACQ_FILE_HIST_ID]	bigint NOT NULL DEFAULT (NEXT VALUE FOR [PIMS_ACT_INST_PROP_ACQ_FILE_H_ID_SEQ]),
	[EFFECTIVE_DATE_HIST]            	datetime NOT NULL DEFAULT (getutcdate()),
	[END_DATE_HIST]                  	datetime NULL,
	[ACT_INST_PROP_ACQ_FILE_ID]      	bigint NOT NULL,
	[ACTIVITY_INSTANCE_ID]           	bigint NOT NULL,
	[PROPERTY_ACQUISITION_FILE_ID]   	bigint NOT NULL,
	[IS_DISABLED]                    	bit NULL,
	[CONCURRENCY_CONTROL_NUMBER]     	bigint NOT NULL,
	[APP_CREATE_TIMESTAMP]           	datetime NOT NULL,
	[APP_CREATE_USERID]              	nvarchar(30) NOT NULL,
	[APP_CREATE_USER_GUID]           	uniqueidentifier NULL,
	[APP_CREATE_USER_DIRECTORY]      	nvarchar(30) NOT NULL,
	[APP_LAST_UPDATE_TIMESTAMP]      	datetime NOT NULL,
	[APP_LAST_UPDATE_USERID]         	nvarchar(30) NOT NULL,
	[APP_LAST_UPDATE_USER_GUID]      	uniqueidentifier NULL,
	[APP_LAST_UPDATE_USER_DIRECTORY] 	nvarchar(30) NOT NULL,
	[DB_CREATE_TIMESTAMP]            	datetime NOT NULL,
	[DB_CREATE_USERID]               	nvarchar(30) NOT NULL,
	[DB_LAST_UPDATE_TIMESTAMP]       	datetime NOT NULL,
	[DB_LAST_UPDATE_USERID]          	nvarchar(30) NOT NULL,
	CONSTRAINT [PIMS_AIPAFL_H_PK] PRIMARY KEY CLUSTERED([_ACT_INST_PROP_ACQ_FILE_HIST_ID])
 ON [PRIMARY])
ON [PRIMARY]
	WITH (
		DATA_COMPRESSION = NONE
	)
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create unique constraint dbo.PIMS_AIPAFL_H_UK
PRINT N'Create unique constraint dbo.PIMS_AIPAFL_H_UK'
GO
ALTER TABLE [dbo].[PIMS_ACT_INST_PROP_ACQ_FILE_HIST]
	ADD CONSTRAINT [PIMS_AIPAFL_H_UK]
	UNIQUE ([_ACT_INST_PROP_ACQ_FILE_HIST_ID], [END_DATE_HIST])  
	WITH (
		DATA_COMPRESSION = NONE
	) ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.AIPRFL_ACTIVITY_INSTANCE_ID_IDX
PRINT N'Create index dbo.AIPRFL_ACTIVITY_INSTANCE_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [AIPRFL_ACTIVITY_INSTANCE_ID_IDX]
	ON [dbo].[PIMS_ACT_INST_PROP_RSRCH_FILE]([ACTIVITY_INSTANCE_ID])
	WITH (	
		DATA_COMPRESSION = NONE
	)
	ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.AIPAFL_ACTIVITY_INSTANCE_ID_IDX
PRINT N'Create index dbo.AIPAFL_ACTIVITY_INSTANCE_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [AIPAFL_ACTIVITY_INSTANCE_ID_IDX]
	ON [dbo].[PIMS_ACT_INST_PROP_ACQ_FILE]([ACTIVITY_INSTANCE_ID])
	WITH (	
		DATA_COMPRESSION = NONE
	)
	ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.AIPAFL_PROPERTY_ACQUISITION_FILE_ID_IDX
PRINT N'Create index dbo.AIPAFL_PROPERTY_ACQUISITION_FILE_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [AIPAFL_PROPERTY_ACQUISITION_FILE_ID_IDX]
	ON [dbo].[PIMS_ACT_INST_PROP_ACQ_FILE]([PROPERTY_ACQUISITION_FILE_ID])
	WITH (	
		DATA_COMPRESSION = NONE
	)
	ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.AIPRFL_PROPERTY_RESEARCH_FILE_ID_IDX
PRINT N'Create index dbo.AIPRFL_PROPERTY_RESEARCH_FILE_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [AIPRFL_PROPERTY_RESEARCH_FILE_ID_IDX]
	ON [dbo].[PIMS_ACT_INST_PROP_RSRCH_FILE]([PROPERTY_RESEARCH_FILE_ID])
	WITH (	
		DATA_COMPRESSION = NONE
	)
	ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRSCRC_PIM_AIPRFL_FK
PRINT N'Create foreign key constraint dbo.PIM_PRSCRC_PIM_AIPRFL_FK'
GO
ALTER TABLE [dbo].[PIMS_ACT_INST_PROP_RSRCH_FILE]
	ADD CONSTRAINT [PIM_PRSCRC_PIM_AIPRFL_FK]
	FOREIGN KEY([PROPERTY_RESEARCH_FILE_ID])
	REFERENCES [dbo].[PIMS_PROPERTY_RESEARCH_FILE]([PROPERTY_RESEARCH_FILE_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_ACTINS_PIM_AIPRFL_FK
PRINT N'Create foreign key constraint dbo.PIM_ACTINS_PIM_AIPRFL_FK'
GO
ALTER TABLE [dbo].[PIMS_ACT_INST_PROP_RSRCH_FILE]
	ADD CONSTRAINT [PIM_ACTINS_PIM_AIPRFL_FK]
	FOREIGN KEY([ACTIVITY_INSTANCE_ID])
	REFERENCES [dbo].[PIMS_ACTIVITY_INSTANCE]([ACTIVITY_INSTANCE_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_ACTINS_PIM_AIPAFL_FK
PRINT N'Create foreign key constraint dbo.PIM_ACTINS_PIM_AIPAFL_FK'
GO
ALTER TABLE [dbo].[PIMS_ACT_INST_PROP_ACQ_FILE]
	ADD CONSTRAINT [PIM_ACTINS_PIM_AIPAFL_FK]
	FOREIGN KEY([ACTIVITY_INSTANCE_ID])
	REFERENCES [dbo].[PIMS_ACTIVITY_INSTANCE]([ACTIVITY_INSTANCE_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRACQF_PIM_AIPAFL_FK
PRINT N'Create foreign key constraint dbo.PIM_PRACQF_PIM_AIPAFL_FK'
GO
ALTER TABLE [dbo].[PIMS_ACT_INST_PROP_ACQ_FILE]
	ADD CONSTRAINT [PIM_PRACQF_PIM_AIPAFL_FK]
	FOREIGN KEY([PROPERTY_ACQUISITION_FILE_ID])
	REFERENCES [dbo].[PIMS_PROPERTY_ACQUISITION_FILE]([PROPERTY_ACQUISITION_FILE_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_AIPRFL_A_S_IUD_TR
PRINT N'Create trigger dbo.PIMS_AIPRFL_A_S_IUD_TR'
GO
CREATE TRIGGER [dbo].[PIMS_AIPRFL_A_S_IUD_TR] ON PIMS_ACT_INST_PROP_RSRCH_FILE FOR INSERT, UPDATE, DELETE AS
SET NOCOUNT ON
BEGIN TRY
DECLARE @curr_date datetime;
SET @curr_date = getutcdate();
  IF NOT EXISTS(SELECT * FROM inserted) AND NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- historical
  IF EXISTS(SELECT * FROM deleted)
    update PIMS_ACT_INST_PROP_RSRCH_FILE_HIST set END_DATE_HIST = @curr_date where ACT_INST_PROP_RSRCH_FILE_ID in (select ACT_INST_PROP_RSRCH_FILE_ID from deleted) and END_DATE_HIST is null;
  
  IF EXISTS(SELECT * FROM inserted)
    insert into PIMS_ACT_INST_PROP_RSRCH_FILE_HIST ([ACT_INST_PROP_RSRCH_FILE_ID], [ACTIVITY_INSTANCE_ID], [PROPERTY_RESEARCH_FILE_ID], [IS_DISABLED], [CONCURRENCY_CONTROL_NUMBER], [APP_CREATE_TIMESTAMP], [APP_CREATE_USERID], [APP_CREATE_USER_GUID], [APP_CREATE_USER_DIRECTORY], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USERID], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USER_DIRECTORY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], _ACT_INST_PROP_RSRCH_FILE_HIST_ID, END_DATE_HIST, EFFECTIVE_DATE_HIST)
      select [ACT_INST_PROP_RSRCH_FILE_ID], [ACTIVITY_INSTANCE_ID], [PROPERTY_RESEARCH_FILE_ID], [IS_DISABLED], [CONCURRENCY_CONTROL_NUMBER], [APP_CREATE_TIMESTAMP], [APP_CREATE_USERID], [APP_CREATE_USER_GUID], [APP_CREATE_USER_DIRECTORY], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USERID], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USER_DIRECTORY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], (next value for [dbo].[PIMS_ACT_INST_PROP_RSRCH_FILE_H_ID_SEQ]) as [_ACT_INST_PROP_RSRCH_FILE_HIST_ID], null as [END_DATE_HIST], @curr_date as [EFFECTIVE_DATE_HIST] from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_AIPRFL_I_S_U_TR
PRINT N'Create trigger dbo.PIMS_AIPRFL_I_S_U_TR'
GO
CREATE TRIGGER [dbo].[PIMS_AIPRFL_I_S_U_TR] ON PIMS_ACT_INST_PROP_RSRCH_FILE INSTEAD OF UPDATE AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- validate concurrency control
  if exists (select 1 from inserted, deleted where inserted.CONCURRENCY_CONTROL_NUMBER != deleted.CONCURRENCY_CONTROL_NUMBER+1 AND inserted.ACT_INST_PROP_RSRCH_FILE_ID = deleted.ACT_INST_PROP_RSRCH_FILE_ID)
    raiserror('CONCURRENCY FAILURE.',16,1)


  -- update statement
  update PIMS_ACT_INST_PROP_RSRCH_FILE
    set "ACT_INST_PROP_RSRCH_FILE_ID" = inserted."ACT_INST_PROP_RSRCH_FILE_ID",
      "ACTIVITY_INSTANCE_ID" = inserted."ACTIVITY_INSTANCE_ID",
      "PROPERTY_RESEARCH_FILE_ID" = inserted."PROPERTY_RESEARCH_FILE_ID",
      "IS_DISABLED" = inserted."IS_DISABLED",
      "CONCURRENCY_CONTROL_NUMBER" = inserted."CONCURRENCY_CONTROL_NUMBER",
      "APP_LAST_UPDATE_TIMESTAMP" = inserted."APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID" = inserted."APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID" = inserted."APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY" = inserted."APP_LAST_UPDATE_USER_DIRECTORY"
    , DB_LAST_UPDATE_TIMESTAMP = getutcdate()
    , DB_LAST_UPDATE_USERID = user_name()
    from PIMS_ACT_INST_PROP_RSRCH_FILE
    inner join inserted
    on (PIMS_ACT_INST_PROP_RSRCH_FILE.ACT_INST_PROP_RSRCH_FILE_ID = inserted.ACT_INST_PROP_RSRCH_FILE_ID);

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_AIPAFL_I_S_U_TR
PRINT N'Create trigger dbo.PIMS_AIPAFL_I_S_U_TR'
GO
CREATE TRIGGER [dbo].[PIMS_AIPAFL_I_S_U_TR] ON PIMS_ACT_INST_PROP_ACQ_FILE INSTEAD OF UPDATE AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- validate concurrency control
  if exists (select 1 from inserted, deleted where inserted.CONCURRENCY_CONTROL_NUMBER != deleted.CONCURRENCY_CONTROL_NUMBER+1 AND inserted.ACT_INST_PROP_ACQ_FILE_ID = deleted.ACT_INST_PROP_ACQ_FILE_ID)
    raiserror('CONCURRENCY FAILURE.',16,1)


  -- update statement
  update PIMS_ACT_INST_PROP_ACQ_FILE
    set "ACT_INST_PROP_ACQ_FILE_ID" = inserted."ACT_INST_PROP_ACQ_FILE_ID",
      "ACTIVITY_INSTANCE_ID" = inserted."ACTIVITY_INSTANCE_ID",
      "PROPERTY_ACQUISITION_FILE_ID" = inserted."PROPERTY_ACQUISITION_FILE_ID",
      "IS_DISABLED" = inserted."IS_DISABLED",
      "CONCURRENCY_CONTROL_NUMBER" = inserted."CONCURRENCY_CONTROL_NUMBER",
      "APP_LAST_UPDATE_TIMESTAMP" = inserted."APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID" = inserted."APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID" = inserted."APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY" = inserted."APP_LAST_UPDATE_USER_DIRECTORY"
    , DB_LAST_UPDATE_TIMESTAMP = getutcdate()
    , DB_LAST_UPDATE_USERID = user_name()
    from PIMS_ACT_INST_PROP_ACQ_FILE
    inner join inserted
    on (PIMS_ACT_INST_PROP_ACQ_FILE.ACT_INST_PROP_ACQ_FILE_ID = inserted.ACT_INST_PROP_ACQ_FILE_ID);

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_AIPAFL_I_S_I_TR
PRINT N'Create trigger dbo.PIMS_AIPAFL_I_S_I_TR'
GO
CREATE TRIGGER [dbo].[PIMS_AIPAFL_I_S_I_TR] ON PIMS_ACT_INST_PROP_ACQ_FILE INSTEAD OF INSERT AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM inserted) 
    RETURN;

  
  insert into PIMS_ACT_INST_PROP_ACQ_FILE ("ACT_INST_PROP_ACQ_FILE_ID",
      "ACTIVITY_INSTANCE_ID",
      "PROPERTY_ACQUISITION_FILE_ID",
      "IS_DISABLED",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY")
    select "ACT_INST_PROP_ACQ_FILE_ID",
      "ACTIVITY_INSTANCE_ID",
      "PROPERTY_ACQUISITION_FILE_ID",
      "IS_DISABLED",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY"
    from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_AIPAFL_A_S_IUD_TR
PRINT N'Create trigger dbo.PIMS_AIPAFL_A_S_IUD_TR'
GO
CREATE TRIGGER [dbo].[PIMS_AIPAFL_A_S_IUD_TR] ON PIMS_ACT_INST_PROP_ACQ_FILE FOR INSERT, UPDATE, DELETE AS
SET NOCOUNT ON
BEGIN TRY
DECLARE @curr_date datetime;
SET @curr_date = getutcdate();
  IF NOT EXISTS(SELECT * FROM inserted) AND NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- historical
  IF EXISTS(SELECT * FROM deleted)
    update PIMS_ACT_INST_PROP_ACQ_FILE_HIST set END_DATE_HIST = @curr_date where ACT_INST_PROP_ACQ_FILE_ID in (select ACT_INST_PROP_ACQ_FILE_ID from deleted) and END_DATE_HIST is null;
  
  IF EXISTS(SELECT * FROM inserted)
    insert into PIMS_ACT_INST_PROP_ACQ_FILE_HIST ([ACT_INST_PROP_ACQ_FILE_ID], [ACTIVITY_INSTANCE_ID], [PROPERTY_ACQUISITION_FILE_ID], [IS_DISABLED], [CONCURRENCY_CONTROL_NUMBER], [APP_CREATE_TIMESTAMP], [APP_CREATE_USERID], [APP_CREATE_USER_GUID], [APP_CREATE_USER_DIRECTORY], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USERID], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USER_DIRECTORY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], _ACT_INST_PROP_ACQ_FILE_HIST_ID, END_DATE_HIST, EFFECTIVE_DATE_HIST)
      select [ACT_INST_PROP_ACQ_FILE_ID], [ACTIVITY_INSTANCE_ID], [PROPERTY_ACQUISITION_FILE_ID], [IS_DISABLED], [CONCURRENCY_CONTROL_NUMBER], [APP_CREATE_TIMESTAMP], [APP_CREATE_USERID], [APP_CREATE_USER_GUID], [APP_CREATE_USER_DIRECTORY], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USERID], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USER_DIRECTORY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], (next value for [dbo].[PIMS_ACT_INST_PROP_ACQ_FILE_H_ID_SEQ]) as [_ACT_INST_PROP_ACQ_FILE_HIST_ID], null as [END_DATE_HIST], @curr_date as [EFFECTIVE_DATE_HIST] from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_AIPRFL_I_S_I_TR
PRINT N'Create trigger dbo.PIMS_AIPRFL_I_S_I_TR'
GO
CREATE TRIGGER [dbo].[PIMS_AIPRFL_I_S_I_TR] ON PIMS_ACT_INST_PROP_RSRCH_FILE INSTEAD OF INSERT AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM inserted) 
    RETURN;

  
  insert into PIMS_ACT_INST_PROP_RSRCH_FILE ("ACT_INST_PROP_RSRCH_FILE_ID",
      "ACTIVITY_INSTANCE_ID",
      "PROPERTY_RESEARCH_FILE_ID",
      "IS_DISABLED",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY")
    select "ACT_INST_PROP_RSRCH_FILE_ID",
      "ACTIVITY_INSTANCE_ID",
      "PROPERTY_RESEARCH_FILE_ID",
      "IS_DISABLED",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY"
    from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

COMMIT TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DECLARE @Success AS BIT
SET @Success = 1
SET NOEXEC OFF
IF (@Success = 1) PRINT 'The database update succeeded'
ELSE BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   PRINT 'The database update failed'
END
GO
