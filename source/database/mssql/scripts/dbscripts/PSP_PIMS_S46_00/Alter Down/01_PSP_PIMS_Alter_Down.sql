-- Script generated by Aqua Data Studio Schema Synchronization for MS SQL Server 2016 on Fri Jan 20 13:37:04 PST 2023
-- Execute this script on:
-- 		PSP_PIMS_S46_00/dbo - This database/schema will be modified
-- to synchronize it with MS SQL Server 2016:
-- 		PSP_PIMS_S45_01/dbo

-- We recommend backing up the database prior to executing the script.

SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO
BEGIN TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PROJCT_PROJECT_STATUS_CODE_IDX
PRINT N'Drop index dbo.PROJCT_PROJECT_STATUS_CODE_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_PROJECT].[PROJCT_PROJECT_STATUS_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique index dbo.PROJCT_CODE_IDX
PRINT N'Drop unique index dbo.PROJCT_CODE_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_PROJECT].[PROJCT_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_PROJECT
PRINT N'Alter table dbo.PIMS_PROJECT'
GO
UPDATE [dbo].[PIMS_PROJECT] SET [PROJECT_STATUS_TYPE_CODE] = ('ACTIVE') WHERE [PROJECT_STATUS_TYPE_CODE] IS NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROJECT] ALTER COLUMN [PROJECT_STATUS_TYPE_CODE] nvarchar(20) NOT NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROJECT] ALTER COLUMN [REGION_CODE] smallint NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROJECT] DROP CONSTRAINT IF EXISTS [PROJCT_REGION_CODE_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
UPDATE [dbo].[PIMS_PROJECT] SET [CODE] = -1 WHERE [CODE] IS NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROJECT] ALTER COLUMN [CODE] int NOT NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROJECT] ADD DEFAULT -1 FOR [CODE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROJECT] DROP CONSTRAINT IF EXISTS [PROJCT_DESCRIPTION_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROJECT] ADD DEFAULT '<Empty>' FOR [DESCRIPTION]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_PROJECT_HIST
PRINT N'Alter table dbo.PIMS_PROJECT_HIST'
GO
UPDATE [dbo].[PIMS_PROJECT_HIST] SET [PROJECT_STATUS_TYPE_CODE] = 'ACTIVE' WHERE [PROJECT_STATUS_TYPE_CODE] IS NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROJECT_HIST] ALTER COLUMN [PROJECT_STATUS_TYPE_CODE] nvarchar(20) NOT NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop dynamically-named default constraints
PRINT N'Drop dynamically-named default constraints'
GO
DECLARE @sqlQry  VARCHAR(1000)
DECLARE @defName VARCHAR(100)
SET @defName = (SELECT obj.NAME
                FROM   SYSOBJECTS obj                          INNER JOIN
                       SYSCOLUMNS col on obj.ID = col.CDEFAULT INNER JOIN
                       SYSOBJECTS tbl on col.ID = tbl.ID
                WHERE  obj.XTYPE = 'D'
                   AND tbl.NAME = 'PIMS_PROJECT_HIST' 
                   AND col.NAME = 'PROJECT_STATUS_TYPE_CODE')
SET @sqlQry = 'ALTER TABLE [dbo].[PIMS_PROJECT_HIST] DROP CONSTRAINT IF EXISTS [' + @defName + ']'
EXEC (@sqlQry)
IF @@ERROR <> 0 SET NOEXEC ON
GO

ALTER TABLE [dbo].[PIMS_PROJECT_HIST] ADD DEFAULT 'ACTIVE' FOR [PROJECT_STATUS_TYPE_CODE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROJECT_HIST] ALTER COLUMN [REGION_CODE] smallint NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
UPDATE [dbo].[PIMS_PROJECT_HIST] SET [CODE] = -1 WHERE [CODE] IS NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROJECT_HIST] ALTER COLUMN [CODE] int NOT NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_PROJECT_HIST] ADD DEFAULT -1 FOR [CODE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create unique index dbo.PROJCT_CODE_IDX
PRINT N'Create unique index dbo.PROJCT_CODE_IDX'
GO
CREATE UNIQUE NONCLUSTERED INDEX [PROJCT_CODE_IDX]
	ON [dbo].[PIMS_PROJECT]([CODE])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.PROJCT_PROJECT_STATUS_CODE_IDX
PRINT N'Create index dbo.PROJCT_PROJECT_STATUS_CODE_IDX'
GO
CREATE NONCLUSTERED INDEX [PROJCT_PROJECT_STATUS_CODE_IDX]
	ON [dbo].[PIMS_PROJECT]([PROJECT_STATUS_TYPE_CODE])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

COMMIT TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DECLARE @Success AS BIT
SET @Success = 1
SET NOEXEC OFF
IF (@Success = 1) PRINT 'The database update succeeded'
ELSE BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   PRINT 'The database update failed'
END
GO
