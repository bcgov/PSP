-- Script generated by Aqua Data Studio Schema Synchronization for MS SQL Server 2016 on Tue May 13 12:53:01 PDT 2025
-- Execute this script on:
-- 		PSP_PIMS_S105_00 NC/dbo - This database/schema will be modified
-- to synchronize it with MS SQL Server 2016:
-- 		PSP_PIMS_S104_00/dbo

-- We recommend backing up the database prior to executing the script.

SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO
BEGIN TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGTPRP_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_MGTPRP_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGTPRP_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGTPRP_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_MGTPRP_A_S_IUD_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGTPRP_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGTPRP_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_MGTPRP_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGTPRP_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_IHPRIN_PIM_PIHITY_FK
PRINT N'Drop foreign key constraint dbo.PIM_IHPRIN_PIM_PIHITY_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_INTHLDR_INTEREST_TYP]
	DROP CONSTRAINT IF EXISTS [PIM_IHPRIN_PIM_PIHITY_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_INTHLD_PIM_IHPRIN_FK
PRINT N'Drop foreign key constraint dbo.PIM_INTHLD_PIM_IHPRIN_FK'
GO
ALTER TABLE [dbo].[PIMS_INTHLDR_PROP_INTEREST]
	DROP CONSTRAINT IF EXISTS [PIM_INTHLD_PIM_IHPRIN_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPACT_PIM_PRACIN_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPACT_PIM_PRACIN_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_ACTIVITY_INVOICE]
	DROP CONSTRAINT IF EXISTS [PIM_PRPACT_PIM_PRACIN_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRPU_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRPU_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_PURPOSE]
	DROP CONSTRAINT IF EXISTS [PIM_PRPRTY_PIM_PRPRPU_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_ACQNFL_PIM_PRACQF_FK
PRINT N'Drop foreign key constraint dbo.PIM_ACQNFL_PIM_PRACQF_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_ACQUISITION_FILE]
	DROP CONSTRAINT IF EXISTS [PIM_ACQNFL_PIM_PRACQF_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPACT_PIM_PRACMC_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPACT_PIM_PRACMC_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_ACT_MIN_CONTACT]
	DROP CONSTRAINT IF EXISTS [PIM_PRPACT_PIM_PRACMC_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPORG_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPORG_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_ORGANIZATION]
	DROP CONSTRAINT IF EXISTS [PIM_PRPRTY_PIM_PRPORG_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRAT_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRAT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ANOMALY_TYP]
	DROP CONSTRAINT IF EXISTS [PIM_PRPRTY_PIM_PRPRAT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPACT_PIM_PRACDO_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPACT_PIM_PRACDO_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_ACTIVITY_DOCUMENT]
	DROP CONSTRAINT IF EXISTS [PIM_PRPACT_PIM_PRACDO_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_ACQNFL_PIM_ACQOWN_FK
PRINT N'Drop foreign key constraint dbo.PIM_ACQNFL_PIM_ACQOWN_FK'
GO
ALTER TABLE [dbo].[PIMS_ACQUISITION_OWNER]
	DROP CONSTRAINT IF EXISTS [PIM_ACQNFL_PIM_ACQOWN_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPCNT_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPCNT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_CONTACT]
	DROP CONSTRAINT IF EXISTS [PIM_PRPRTY_PIM_PRPCNT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRRT_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRRT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ROAD_TYP]
	DROP CONSTRAINT IF EXISTS [PIM_PRPRTY_PIM_PRPRRT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_ACQNFL_PIM_ACQPER_FK
PRINT N'Drop foreign key constraint dbo.PIM_ACQNFL_PIM_ACQPER_FK'
GO
ALTER TABLE [dbo].[PIMS_ACQUISITION_FILE_TEAM]
	DROP CONSTRAINT IF EXISTS [PIM_ACQNFL_PIM_ACQPER_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRTT_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRTT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_TENURE_TYP]
	DROP CONSTRAINT IF EXISTS [PIM_PRPRTY_PIM_PRPRTT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPACT_PIM_PAINVP_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPACT_PIM_PAINVP_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_ACT_INVOLVED_PARTY]
	DROP CONSTRAINT IF EXISTS [PIM_PRPACT_PIM_PAINVP_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_MANAGEMENT_FILE
PRINT N'Alter table dbo.PIMS_MANAGEMENT_FILE'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE] ALTER COLUMN [MANAGEMENT_FILE_PURPOSE_TYPE_CODE] nvarchar(20) NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_MANAGEMENT_FILE_PROPERTY
PRINT N'Alter table dbo.PIMS_MANAGEMENT_FILE_PROPERTY'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_PROPERTY]
	DROP CONSTRAINT IF EXISTS [MGTPRP_IS_DISABLED_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_PROPERTY]
	DROP COLUMN IF EXISTS [IS_DISABLED]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_MANAGEMENT_FILE_PROPERTY_HIST
PRINT N'Alter table dbo.PIMS_MANAGEMENT_FILE_PROPERTY_HIST'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_PROPERTY_HIST]
	DROP COLUMN IF EXISTS [IS_DISABLED]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_MANAGEMENT_FILE_HIST
PRINT N'Alter table dbo.PIMS_MANAGEMENT_FILE_HIST'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_HIST] ALTER COLUMN [MANAGEMENT_FILE_PURPOSE_TYPE_CODE] nvarchar(20) NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_ACQUISITION_FILE_TEAM
PRINT N'Alter table dbo.PIMS_ACQUISITION_FILE_TEAM'
GO
ALTER TABLE [dbo].[PIMS_ACQUISITION_FILE_TEAM] ALTER COLUMN [ACQ_FL_TEAM_PROFILE_TYPE_CODE] nvarchar(20) NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_MANAGEMENT_FILE_TEAM
PRINT N'Alter table dbo.PIMS_MANAGEMENT_FILE_TEAM'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_TEAM] ALTER COLUMN [MANAGEMENT_FILE_PROFILE_TYPE_CODE] nvarchar(20) NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_ACQUISITION_FILE_TEAM_HIST
PRINT N'Alter table dbo.PIMS_ACQUISITION_FILE_TEAM_HIST'
GO
ALTER TABLE [dbo].[PIMS_ACQUISITION_FILE_TEAM_HIST] ALTER COLUMN [ACQ_FL_TEAM_PROFILE_TYPE_CODE] nvarchar(20) NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_MANAGEMENT_FILE_TEAM_HIST
PRINT N'Alter table dbo.PIMS_MANAGEMENT_FILE_TEAM_HIST'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_TEAM_HIST] ALTER COLUMN [MANAGEMENT_FILE_PROFILE_TYPE_CODE] nvarchar(20) NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRPACT_PIM_PAINVP_FK
PRINT N'Create foreign key constraint dbo.PIM_PRPACT_PIM_PAINVP_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_ACT_INVOLVED_PARTY]
	ADD CONSTRAINT [PIM_PRPACT_PIM_PAINVP_FK]
	FOREIGN KEY([PIMS_PROPERTY_ACTIVITY_ID])
	REFERENCES [dbo].[PIMS_PROPERTY_ACTIVITY]([PIMS_PROPERTY_ACTIVITY_ID])
	ON DELETE CASCADE 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRTT_FK
PRINT N'Create foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRTT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_TENURE_TYP]
	ADD CONSTRAINT [PIM_PRPRTY_PIM_PRPRTT_FK]
	FOREIGN KEY([PROPERTY_ID])
	REFERENCES [dbo].[PIMS_PROPERTY]([PROPERTY_ID])
	ON DELETE CASCADE 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_ACQNFL_PIM_ACQPER_FK
PRINT N'Create foreign key constraint dbo.PIM_ACQNFL_PIM_ACQPER_FK'
GO
ALTER TABLE [dbo].[PIMS_ACQUISITION_FILE_TEAM]
	ADD CONSTRAINT [PIM_ACQNFL_PIM_ACQPER_FK]
	FOREIGN KEY([ACQUISITION_FILE_ID])
	REFERENCES [dbo].[PIMS_ACQUISITION_FILE]([ACQUISITION_FILE_ID])
	ON DELETE CASCADE 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRRT_FK
PRINT N'Create foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRRT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ROAD_TYP]
	ADD CONSTRAINT [PIM_PRPRTY_PIM_PRPRRT_FK]
	FOREIGN KEY([PROPERTY_ID])
	REFERENCES [dbo].[PIMS_PROPERTY]([PROPERTY_ID])
	ON DELETE CASCADE 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRPRTY_PIM_PRPCNT_FK
PRINT N'Create foreign key constraint dbo.PIM_PRPRTY_PIM_PRPCNT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_CONTACT]
	ADD CONSTRAINT [PIM_PRPRTY_PIM_PRPCNT_FK]
	FOREIGN KEY([PROPERTY_ID])
	REFERENCES [dbo].[PIMS_PROPERTY]([PROPERTY_ID])
	ON DELETE CASCADE 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_ACQNFL_PIM_ACQOWN_FK
PRINT N'Create foreign key constraint dbo.PIM_ACQNFL_PIM_ACQOWN_FK'
GO
ALTER TABLE [dbo].[PIMS_ACQUISITION_OWNER]
	ADD CONSTRAINT [PIM_ACQNFL_PIM_ACQOWN_FK]
	FOREIGN KEY([ACQUISITION_FILE_ID])
	REFERENCES [dbo].[PIMS_ACQUISITION_FILE]([ACQUISITION_FILE_ID])
	ON DELETE CASCADE 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRPACT_PIM_PRACDO_FK
PRINT N'Create foreign key constraint dbo.PIM_PRPACT_PIM_PRACDO_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_ACTIVITY_DOCUMENT]
	ADD CONSTRAINT [PIM_PRPACT_PIM_PRACDO_FK]
	FOREIGN KEY([PIMS_PROPERTY_ACTIVITY_ID])
	REFERENCES [dbo].[PIMS_PROPERTY_ACTIVITY]([PIMS_PROPERTY_ACTIVITY_ID])
	ON DELETE CASCADE 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRAT_FK
PRINT N'Create foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRAT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_ANOMALY_TYP]
	ADD CONSTRAINT [PIM_PRPRTY_PIM_PRPRAT_FK]
	FOREIGN KEY([PROPERTY_ID])
	REFERENCES [dbo].[PIMS_PROPERTY]([PROPERTY_ID])
	ON DELETE CASCADE 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRPRTY_PIM_PRPORG_FK
PRINT N'Create foreign key constraint dbo.PIM_PRPRTY_PIM_PRPORG_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_ORGANIZATION]
	ADD CONSTRAINT [PIM_PRPRTY_PIM_PRPORG_FK]
	FOREIGN KEY([PROPERTY_ID])
	REFERENCES [dbo].[PIMS_PROPERTY]([PROPERTY_ID])
	ON DELETE CASCADE 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRPACT_PIM_PRACMC_FK
PRINT N'Create foreign key constraint dbo.PIM_PRPACT_PIM_PRACMC_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_ACT_MIN_CONTACT]
	ADD CONSTRAINT [PIM_PRPACT_PIM_PRACMC_FK]
	FOREIGN KEY([PIMS_PROPERTY_ACTIVITY_ID])
	REFERENCES [dbo].[PIMS_PROPERTY_ACTIVITY]([PIMS_PROPERTY_ACTIVITY_ID])
	ON DELETE CASCADE 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_ACQNFL_PIM_PRACQF_FK
PRINT N'Create foreign key constraint dbo.PIM_ACQNFL_PIM_PRACQF_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_ACQUISITION_FILE]
	ADD CONSTRAINT [PIM_ACQNFL_PIM_PRACQF_FK]
	FOREIGN KEY([ACQUISITION_FILE_ID])
	REFERENCES [dbo].[PIMS_ACQUISITION_FILE]([ACQUISITION_FILE_ID])
	ON DELETE CASCADE 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRPU_FK
PRINT N'Create foreign key constraint dbo.PIM_PRPRTY_PIM_PRPRPU_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_PROP_PURPOSE]
	ADD CONSTRAINT [PIM_PRPRTY_PIM_PRPRPU_FK]
	FOREIGN KEY([PROPERTY_ID])
	REFERENCES [dbo].[PIMS_PROPERTY]([PROPERTY_ID])
	ON DELETE CASCADE 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRPACT_PIM_PRACIN_FK
PRINT N'Create foreign key constraint dbo.PIM_PRPACT_PIM_PRACIN_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_ACTIVITY_INVOICE]
	ADD CONSTRAINT [PIM_PRPACT_PIM_PRACIN_FK]
	FOREIGN KEY([PIMS_PROPERTY_ACTIVITY_ID])
	REFERENCES [dbo].[PIMS_PROPERTY_ACTIVITY]([PIMS_PROPERTY_ACTIVITY_ID])
	ON DELETE CASCADE 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_INTHLD_PIM_IHPRIN_FK
PRINT N'Create foreign key constraint dbo.PIM_INTHLD_PIM_IHPRIN_FK'
GO
ALTER TABLE [dbo].[PIMS_INTHLDR_PROP_INTEREST]
	ADD CONSTRAINT [PIM_INTHLD_PIM_IHPRIN_FK]
	FOREIGN KEY([INTEREST_HOLDER_ID])
	REFERENCES [dbo].[PIMS_INTEREST_HOLDER]([INTEREST_HOLDER_ID])
	ON DELETE CASCADE 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_IHPRIN_PIM_PIHITY_FK
PRINT N'Create foreign key constraint dbo.PIM_IHPRIN_PIM_PIHITY_FK'
GO
ALTER TABLE [dbo].[PIMS_PROP_INTHLDR_INTEREST_TYP]
	ADD CONSTRAINT [PIM_IHPRIN_PIM_PIHITY_FK]
	FOREIGN KEY([PIMS_INTHLDR_PROP_INTEREST_ID])
	REFERENCES [dbo].[PIMS_INTHLDR_PROP_INTEREST]([PIMS_INTHLDR_PROP_INTEREST_ID])
	ON DELETE CASCADE 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_MGTPRP_I_S_I_TR
PRINT N'Create trigger dbo.PIMS_MGTPRP_I_S_I_TR'
GO
CREATE TRIGGER [dbo].[PIMS_MGTPRP_I_S_I_TR] ON PIMS_MANAGEMENT_FILE_PROPERTY INSTEAD OF INSERT AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM inserted) 
    RETURN;

  
  insert into PIMS_MANAGEMENT_FILE_PROPERTY ("MANAGEMENT_FILE_PROPERTY_ID",
      "MANAGEMENT_FILE_ID",
      "PROPERTY_ID",
      "PROPERTY_NAME",
      "LOCATION",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY")
    select "MANAGEMENT_FILE_PROPERTY_ID",
      "MANAGEMENT_FILE_ID",
      "PROPERTY_ID",
      "PROPERTY_NAME",
      "LOCATION",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY"
    from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_MGTPRP_A_S_IUD_TR
PRINT N'Create trigger dbo.PIMS_MGTPRP_A_S_IUD_TR'
GO
CREATE TRIGGER [dbo].[PIMS_MGTPRP_A_S_IUD_TR] ON PIMS_MANAGEMENT_FILE_PROPERTY FOR INSERT, UPDATE, DELETE AS
SET NOCOUNT ON
BEGIN TRY
DECLARE @curr_date datetime;
SET @curr_date = getutcdate();
  IF NOT EXISTS(SELECT * FROM inserted) AND NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- historical
  IF EXISTS(SELECT * FROM deleted)
    update PIMS_MANAGEMENT_FILE_PROPERTY_HIST set END_DATE_HIST = @curr_date where MANAGEMENT_FILE_PROPERTY_ID in (select MANAGEMENT_FILE_PROPERTY_ID from deleted) and END_DATE_HIST is null;
  
  IF EXISTS(SELECT * FROM inserted)
    insert into PIMS_MANAGEMENT_FILE_PROPERTY_HIST ([MANAGEMENT_FILE_PROPERTY_ID], [MANAGEMENT_FILE_ID], [PROPERTY_ID], [PROPERTY_NAME], [CONCURRENCY_CONTROL_NUMBER], [APP_CREATE_TIMESTAMP], [APP_CREATE_USERID], [APP_CREATE_USER_GUID], [APP_CREATE_USER_DIRECTORY], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USERID], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USER_DIRECTORY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], _MANAGEMENT_FILE_PROPERTY_HIST_ID, END_DATE_HIST, EFFECTIVE_DATE_HIST)
      select [MANAGEMENT_FILE_PROPERTY_ID], [MANAGEMENT_FILE_ID], [PROPERTY_ID], [PROPERTY_NAME], [CONCURRENCY_CONTROL_NUMBER], [APP_CREATE_TIMESTAMP], [APP_CREATE_USERID], [APP_CREATE_USER_GUID], [APP_CREATE_USER_DIRECTORY], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USERID], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USER_DIRECTORY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], (next value for [dbo].[PIMS_MANAGEMENT_FILE_PROPERTY_H_ID_SEQ]) as [_MANAGEMENT_FILE_PROPERTY_HIST_ID], null as [END_DATE_HIST], @curr_date as [EFFECTIVE_DATE_HIST] from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_MGTPRP_I_S_U_TR
PRINT N'Create trigger dbo.PIMS_MGTPRP_I_S_U_TR'
GO
CREATE TRIGGER [dbo].[PIMS_MGTPRP_I_S_U_TR] ON PIMS_MANAGEMENT_FILE_PROPERTY INSTEAD OF UPDATE AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- validate concurrency control
  if exists (select 1 from inserted, deleted where inserted.CONCURRENCY_CONTROL_NUMBER != deleted.CONCURRENCY_CONTROL_NUMBER+1 AND inserted.MANAGEMENT_FILE_PROPERTY_ID = deleted.MANAGEMENT_FILE_PROPERTY_ID)
    raiserror('CONCURRENCY FAILURE.',16,1)


  -- update statement
  update PIMS_MANAGEMENT_FILE_PROPERTY
    set "MANAGEMENT_FILE_PROPERTY_ID" = inserted."MANAGEMENT_FILE_PROPERTY_ID",
      "MANAGEMENT_FILE_ID" = inserted."MANAGEMENT_FILE_ID",
      "PROPERTY_ID" = inserted."PROPERTY_ID",
      "PROPERTY_NAME" = inserted."PROPERTY_NAME",
      "LOCATION" = inserted."LOCATION",
      "CONCURRENCY_CONTROL_NUMBER" = inserted."CONCURRENCY_CONTROL_NUMBER",
      "APP_LAST_UPDATE_TIMESTAMP" = inserted."APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID" = inserted."APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID" = inserted."APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY" = inserted."APP_LAST_UPDATE_USER_DIRECTORY"
    , DB_LAST_UPDATE_TIMESTAMP = getutcdate()
    , DB_LAST_UPDATE_USERID = user_name()
    from PIMS_MANAGEMENT_FILE_PROPERTY
    inner join inserted
    on (PIMS_MANAGEMENT_FILE_PROPERTY.MANAGEMENT_FILE_PROPERTY_ID = inserted.MANAGEMENT_FILE_PROPERTY_ID);

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

COMMIT TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DECLARE @Success AS BIT
SET @Success = 1
SET NOEXEC OFF
IF (@Success = 1) PRINT 'The database update succeeded'
ELSE BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   PRINT 'The database update failed'
END
GO
