-- Script generated by Aqua Data Studio Schema Synchronization for MS SQL Server 2016 on Thu Apr 17 13:12:48 PDT 2025
-- Execute this script on:
-- 		PSP_PIMS_S103_00/dbo - This database/schema will be modified
-- to synchronize it with MS SQL Server 2016:
-- 		PSP_PIMS_S102_00/dbo

-- We recommend backing up the database prior to executing the script.

SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO
BEGIN TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRPACT_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_PRPACT_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_PRPACT_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_PRPACT_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_PRPACT_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_PRPACT_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGMFTM_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_MGMFTM_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGMFTM_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGMFTM_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_MGMFTM_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGMFTM_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGMFTM_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_MGMFTM_A_S_IUD_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGMFTM_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_MGMTFL_PIM_PRPACT_FK
PRINT N'Drop foreign key constraint dbo.PIM_MGMTFL_PIM_PRPACT_FK'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_ACTIVITY]
	DROP CONSTRAINT IF EXISTS [PIM_MGMTFL_PIM_PRPACT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PERSON_PIM_MGMFTM_PC_FK
PRINT N'Drop foreign key constraint dbo.PIM_PERSON_PIM_MGMFTM_PC_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_TEAM]
	DROP CONSTRAINT IF EXISTS [PIM_PERSON_PIM_MGMFTM_PC_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PERSON_PIM_MGMFTM_FK
PRINT N'Drop foreign key constraint dbo.PIM_PERSON_PIM_MGMFTM_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_TEAM]
	DROP CONSTRAINT IF EXISTS [PIM_PERSON_PIM_MGMFTM_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_MGTPRF_PIM_MGMFTM_FK
PRINT N'Drop foreign key constraint dbo.PIM_MGTPRF_PIM_MGMFTM_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_TEAM]
	DROP CONSTRAINT IF EXISTS [PIM_MGTPRF_PIM_MGMFTM_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_ORG_PIM_MGMFTM_FK
PRINT N'Drop foreign key constraint dbo.PIM_ORG_PIM_MGMFTM_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_TEAM]
	DROP CONSTRAINT IF EXISTS [PIM_ORG_PIM_MGMFTM_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_MGMTFL_PIM_MGMFTM_FK
PRINT N'Drop foreign key constraint dbo.PIM_MGMTFL_PIM_MGMFTM_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_TEAM]
	DROP CONSTRAINT IF EXISTS [PIM_MGMTFL_PIM_MGMFTM_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRPRTY_PIM_MGTPRP_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRPRTY_PIM_MGTPRP_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_PROPERTY]
	DROP CONSTRAINT IF EXISTS [PIM_PRPRTY_PIM_MGTPRP_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_MGMTFL_PIM_MGTPRP_FK
PRINT N'Drop foreign key constraint dbo.PIM_MGMTFL_PIM_MGTPRP_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_PROPERTY]
	DROP CONSTRAINT IF EXISTS [PIM_MGMTFL_PIM_MGTPRP_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_NOTE_PIM_MGMTNT_FK
PRINT N'Drop foreign key constraint dbo.PIM_NOTE_PIM_MGMTNT_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_NOTE]
	DROP CONSTRAINT IF EXISTS [PIM_NOTE_PIM_MGMTNT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_MGMTFL_PIM_MGMTNT_FK
PRINT N'Drop foreign key constraint dbo.PIM_MGMTFL_PIM_MGMTNT_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_NOTE]
	DROP CONSTRAINT IF EXISTS [PIM_MGMTFL_PIM_MGMTNT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_MGMTFL_PIM_MGTDOC_FK
PRINT N'Drop foreign key constraint dbo.PIM_MGMTFL_PIM_MGTDOC_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_DOCUMENT]
	DROP CONSTRAINT IF EXISTS [PIM_MGMTFL_PIM_MGTDOC_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_DOCMNT_PIM_MGTDOC_FK
PRINT N'Drop foreign key constraint dbo.PIM_DOCMNT_PIM_MGTDOC_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_DOCUMENT]
	DROP CONSTRAINT IF EXISTS [PIM_DOCMNT_PIM_MGTDOC_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_MGTPGM_PIM_MGMTFL_FK
PRINT N'Drop foreign key constraint dbo.PIM_MGTPGM_PIM_MGMTFL_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE]
	DROP CONSTRAINT IF EXISTS [PIM_MGTPGM_PIM_MGMTFL_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PROJCT_PIM_MGMTFL_FK
PRINT N'Drop foreign key constraint dbo.PIM_PROJCT_PIM_MGMTFL_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE]
	DROP CONSTRAINT IF EXISTS [PIM_PROJCT_PIM_MGMTFL_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_ACQFTY_PIM_MGMTFL_FK
PRINT N'Drop foreign key constraint dbo.PIM_ACQFTY_PIM_MGMTFL_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE]
	DROP CONSTRAINT IF EXISTS [PIM_ACQFTY_PIM_MGMTFL_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_MGTFTY_PIM_MGMTFL_FK
PRINT N'Drop foreign key constraint dbo.PIM_MGTFTY_PIM_MGMTFL_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE]
	DROP CONSTRAINT IF EXISTS [PIM_MGTFTY_PIM_MGMTFL_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PRODCT_PIM_MGMTFL_FK
PRINT N'Drop foreign key constraint dbo.PIM_PRODCT_PIM_MGMTFL_FK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE]
	DROP CONSTRAINT IF EXISTS [PIM_PRODCT_PIM_MGMTFL_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGMFTM_PRIMARY_CONTACT_ID_IDX
PRINT N'Drop index dbo.MGMFTM_PRIMARY_CONTACT_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_TEAM].[MGMFTM_PRIMARY_CONTACT_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGMFTM_PERSON_ID_IDX
PRINT N'Drop index dbo.MGMFTM_PERSON_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_TEAM].[MGMFTM_PERSON_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGMFTM_ORGANIZATION_ID_IDX
PRINT N'Drop index dbo.MGMFTM_ORGANIZATION_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_TEAM].[MGMFTM_ORGANIZATION_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGMFTM_MANAGEMENT_FILE_PROFILE_TYPE_CODE_IDX
PRINT N'Drop index dbo.MGMFTM_MANAGEMENT_FILE_PROFILE_TYPE_CODE_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_TEAM].[MGMFTM_MANAGEMENT_FILE_PROFILE_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGMFTM_MANAGEMENT_FILE_ID_IDX
PRINT N'Drop index dbo.MGMFTM_MANAGEMENT_FILE_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_TEAM].[MGMFTM_MANAGEMENT_FILE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGTPRF_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_MGTPRF_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGTPRF_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGTPRF_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_MGTPRF_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGTPRF_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGTPRP_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_MGTPRP_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGTPRP_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGTPRP_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_MGTPRP_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGTPRP_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGTPRP_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_MGTPRP_A_S_IUD_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGTPRP_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGTPRP_PROPERTY_ID_IDX
PRINT N'Drop index dbo.MGTPRP_PROPERTY_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_PROPERTY].[MGTPRP_PROPERTY_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGTPRP_MANAGEMENT_FILE_ID_IDX
PRINT N'Drop index dbo.MGTPRP_MANAGEMENT_FILE_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_PROPERTY].[MGTPRP_MANAGEMENT_FILE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGMTNT_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_MGMTNT_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGMTNT_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGMTNT_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_MGMTNT_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGMTNT_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGMTNT_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_MGMTNT_A_S_IUD_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGMTNT_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGMTNT_NOTE_ID_IDX
PRINT N'Drop index dbo.MGMTNT_NOTE_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_NOTE].[MGMTNT_NOTE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGMTNT_MANAGEMENT_FILE_ID_IDX
PRINT N'Drop index dbo.MGMTNT_MANAGEMENT_FILE_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_NOTE].[MGMTNT_MANAGEMENT_FILE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGTDOC_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_MGTDOC_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGTDOC_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGTDOC_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_MGTDOC_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGTDOC_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGTDOC_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_MGTDOC_A_S_IUD_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGTDOC_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGTDOC_MANAGEMENT_FILE_ID_IDX
PRINT N'Drop index dbo.MGTDOC_MANAGEMENT_FILE_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_DOCUMENT].[MGTDOC_MANAGEMENT_FILE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGTDOC_DOCUMENT_ID_IDX
PRINT N'Drop index dbo.MGTDOC_DOCUMENT_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_DOCUMENT].[MGTDOC_DOCUMENT_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGMTFL_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_MGMTFL_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGMTFL_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGMTFL_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_MGMTFL_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGMTFL_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGMTFL_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_MGMTFL_A_S_IUD_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGMTFL_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGMTFL_PROJECT_ID_IDX
PRINT N'Drop index dbo.MGMTFL_PROJECT_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE].[MGMTFL_PROJECT_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGMTFL_PRODUCT_ID_IDX
PRINT N'Drop index dbo.MGMTFL_PRODUCT_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE].[MGMTFL_PRODUCT_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGMTFL_MANAGEMENT_FILE_STATUS_TYPE_CODE_IDX
PRINT N'Drop index dbo.MGMTFL_MANAGEMENT_FILE_STATUS_TYPE_CODE_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE].[MGMTFL_MANAGEMENT_FILE_STATUS_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGMTFL_MANAGEMENT_FILE_PROGRAM_TYPE_CODE_IDX
PRINT N'Drop index dbo.MGMTFL_MANAGEMENT_FILE_PROGRAM_TYPE_CODE_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE].[MGMTFL_MANAGEMENT_FILE_PROGRAM_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.MGMTFL_ACQUISITION_FUNDING_TYPE_CODE_IDX
PRINT N'Drop index dbo.MGMTFL_ACQUISITION_FUNDING_TYPE_CODE_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE].[MGMTFL_ACQUISITION_FUNDING_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGTPGM_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_MGTPGM_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGTPGM_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGTPGM_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_MGTPGM_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGTPGM_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGTFTY_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_MGTFTY_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGTFTY_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_MGTFTY_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_MGTFTY_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_MGTFTY_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PIMS_MGMFTM_H_UK
PRINT N'Drop unique constraint dbo.PIMS_MGMFTM_H_UK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_TEAM_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_MGMFTM_H_UK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PIMS_MGMFTM_H_PK
PRINT N'Drop primary key constraint dbo.PIMS_MGMFTM_H_PK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_TEAM_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_MGMFTM_H_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.MGMFTM_PK
PRINT N'Drop primary key constraint dbo.MGMFTM_PK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_TEAM]
	DROP CONSTRAINT IF EXISTS [MGMFTM_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_MANAGEMENT_FILE_TEAM
PRINT N'Drop table dbo.PIMS_MANAGEMENT_FILE_TEAM'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_TEAM]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.MGTPRF_PK
PRINT N'Drop primary key constraint dbo.MGTPRF_PK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_PROFILE_TYPE]
	DROP CONSTRAINT IF EXISTS [MGTPRF_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PIMS_MGTPRP_H_UK
PRINT N'Drop unique constraint dbo.PIMS_MGTPRP_H_UK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_PROPERTY_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_MGTPRP_H_UK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PIMS_MGTPRP_H_PK
PRINT N'Drop primary key constraint dbo.PIMS_MGTPRP_H_PK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_PROPERTY_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_MGTPRP_H_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.MGTPRP_PK
PRINT N'Drop primary key constraint dbo.MGTPRP_PK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_PROPERTY]
	DROP CONSTRAINT IF EXISTS [MGTPRP_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_MANAGEMENT_FILE_PROPERTY
PRINT N'Drop table dbo.PIMS_MANAGEMENT_FILE_PROPERTY'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_PROPERTY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PIMS_MGMTNT_H_UK
PRINT N'Drop unique constraint dbo.PIMS_MGMTNT_H_UK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_NOTE_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_MGMTNT_H_UK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PIMS_MGMTNT_H_PK
PRINT N'Drop primary key constraint dbo.PIMS_MGMTNT_H_PK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_NOTE_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_MGMTNT_H_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.MGMTNT_PK
PRINT N'Drop primary key constraint dbo.MGMTNT_PK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_NOTE]
	DROP CONSTRAINT IF EXISTS [MGMTNT_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_MANAGEMENT_FILE_NOTE
PRINT N'Drop table dbo.PIMS_MANAGEMENT_FILE_NOTE'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_NOTE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PIMS_MGTDOC_H_UK
PRINT N'Drop unique constraint dbo.PIMS_MGTDOC_H_UK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_DOCUMENT_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_MGTDOC_H_UK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PIMS_MGTDOC_H_PK
PRINT N'Drop primary key constraint dbo.PIMS_MGTDOC_H_PK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_DOCUMENT_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_MGTDOC_H_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.MGTDOC_PK
PRINT N'Drop primary key constraint dbo.MGTDOC_PK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_DOCUMENT]
	DROP CONSTRAINT IF EXISTS [MGTDOC_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_MANAGEMENT_FILE_DOCUMENT
PRINT N'Drop table dbo.PIMS_MANAGEMENT_FILE_DOCUMENT'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_DOCUMENT]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PIMS_MGMTFL_H_UK
PRINT N'Drop unique constraint dbo.PIMS_MGMTFL_H_UK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_MGMTFL_H_UK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PIMS_MGMTFL_H_PK
PRINT N'Drop primary key constraint dbo.PIMS_MGMTFL_H_PK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_MGMTFL_H_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.MGMTFL_FILE_NAME_TUC
PRINT N'Drop unique constraint dbo.MGMTFL_FILE_NAME_TUC'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE]
	DROP CONSTRAINT IF EXISTS [MGMTFL_FILE_NAME_TUC]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.MGMTFL_PK
PRINT N'Drop primary key constraint dbo.MGMTFL_PK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE]
	DROP CONSTRAINT IF EXISTS [MGMTFL_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_MANAGEMENT_FILE
PRINT N'Drop table dbo.PIMS_MANAGEMENT_FILE'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.MGTPGM_PK
PRINT N'Drop primary key constraint dbo.MGTPGM_PK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_PROGRAM_TYPE]
	DROP CONSTRAINT IF EXISTS [MGTPGM_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.MGTFTY_PK
PRINT N'Drop primary key constraint dbo.MGTFTY_PK'
GO
ALTER TABLE [dbo].[PIMS_MANAGEMENT_FILE_STATUS_TYPE]
	DROP CONSTRAINT IF EXISTS [MGTFTY_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_MANAGEMENT_FILE_ACTIVITY_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_MANAGEMENT_FILE_ACTIVITY_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_ACTIVITY_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_PROPERTY_ACTIVITY
PRINT N'Alter table dbo.PIMS_PROPERTY_ACTIVITY'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_ACTIVITY]
	DROP COLUMN IF EXISTS [MANAGEMENT_FILE_ID]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_PROPERTY_ACTIVITY_HIST
PRINT N'Alter table dbo.PIMS_PROPERTY_ACTIVITY_HIST'
GO
ALTER TABLE [dbo].[PIMS_PROPERTY_ACTIVITY_HIST]
	DROP COLUMN IF EXISTS [MANAGEMENT_FILE_ID]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_PRPACT_I_S_U_TR
PRINT N'Create trigger dbo.PIMS_PRPACT_I_S_U_TR'
GO
CREATE TRIGGER [dbo].[PIMS_PRPACT_I_S_U_TR] ON PIMS_PROPERTY_ACTIVITY INSTEAD OF UPDATE AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- validate concurrency control
  if exists (select 1 from inserted, deleted where inserted.CONCURRENCY_CONTROL_NUMBER != deleted.CONCURRENCY_CONTROL_NUMBER+1 AND inserted.PIMS_PROPERTY_ACTIVITY_ID = deleted.PIMS_PROPERTY_ACTIVITY_ID)
    raiserror('CONCURRENCY FAILURE.',16,1)


  -- update statement
  update PIMS_PROPERTY_ACTIVITY
    set "PIMS_PROPERTY_ACTIVITY_ID" = inserted."PIMS_PROPERTY_ACTIVITY_ID",
      "PROP_MGMT_ACTIVITY_TYPE_CODE" = inserted."PROP_MGMT_ACTIVITY_TYPE_CODE",
      "PROP_MGMT_ACTIVITY_SUBTYPE_CODE" = inserted."PROP_MGMT_ACTIVITY_SUBTYPE_CODE",
      "PROP_MGMT_ACTIVITY_STATUS_TYPE_CODE" = inserted."PROP_MGMT_ACTIVITY_STATUS_TYPE_CODE",
      "SERVICE_PROVIDER_PERSON_ID" = inserted."SERVICE_PROVIDER_PERSON_ID",
      "SERVICE_PROVIDER_ORG_ID" = inserted."SERVICE_PROVIDER_ORG_ID",
      "REQUEST_ADDED_DT" = inserted."REQUEST_ADDED_DT",
      "COMPLETION_DT" = inserted."COMPLETION_DT",
      "DESCRIPTION" = inserted."DESCRIPTION",
      "REQUEST_SOURCE" = inserted."REQUEST_SOURCE",
      "IS_DISABLED" = inserted."IS_DISABLED",
      "CONCURRENCY_CONTROL_NUMBER" = inserted."CONCURRENCY_CONTROL_NUMBER",
      "APP_LAST_UPDATE_TIMESTAMP" = inserted."APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID" = inserted."APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID" = inserted."APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY" = inserted."APP_LAST_UPDATE_USER_DIRECTORY"
    , DB_LAST_UPDATE_TIMESTAMP = getutcdate()
    , DB_LAST_UPDATE_USERID = user_name()
    from PIMS_PROPERTY_ACTIVITY
    inner join inserted
    on (PIMS_PROPERTY_ACTIVITY.PIMS_PROPERTY_ACTIVITY_ID = inserted.PIMS_PROPERTY_ACTIVITY_ID);

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_PRPACT_I_S_I_TR
PRINT N'Create trigger dbo.PIMS_PRPACT_I_S_I_TR'
GO
CREATE TRIGGER [dbo].[PIMS_PRPACT_I_S_I_TR] ON PIMS_PROPERTY_ACTIVITY INSTEAD OF INSERT AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM inserted) 
    RETURN;

  
  insert into PIMS_PROPERTY_ACTIVITY ("PIMS_PROPERTY_ACTIVITY_ID",
      "PROP_MGMT_ACTIVITY_TYPE_CODE",
      "PROP_MGMT_ACTIVITY_SUBTYPE_CODE",
      "PROP_MGMT_ACTIVITY_STATUS_TYPE_CODE",
      "SERVICE_PROVIDER_PERSON_ID",
      "SERVICE_PROVIDER_ORG_ID",
      "REQUEST_ADDED_DT",
      "COMPLETION_DT",
      "DESCRIPTION",
      "REQUEST_SOURCE",
      "IS_DISABLED",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY")
    select "PIMS_PROPERTY_ACTIVITY_ID",
      "PROP_MGMT_ACTIVITY_TYPE_CODE",
      "PROP_MGMT_ACTIVITY_SUBTYPE_CODE",
      "PROP_MGMT_ACTIVITY_STATUS_TYPE_CODE",
      "SERVICE_PROVIDER_PERSON_ID",
      "SERVICE_PROVIDER_ORG_ID",
      "REQUEST_ADDED_DT",
      "COMPLETION_DT",
      "DESCRIPTION",
      "REQUEST_SOURCE",
      "IS_DISABLED",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY"
    from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_MANAGEMENT_FILE_TEAM_HIST
PRINT N'Drop table dbo.PIMS_MANAGEMENT_FILE_TEAM_HIST'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_TEAM_HIST]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_MANAGEMENT_FILE_TEAM_H_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_MANAGEMENT_FILE_TEAM_H_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_TEAM_H_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_MANAGEMENT_FILE_PROFILE_TYPE
PRINT N'Drop table dbo.PIMS_MANAGEMENT_FILE_PROFILE_TYPE'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_PROFILE_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_MANAGEMENT_FILE_TEAM_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_MANAGEMENT_FILE_TEAM_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_TEAM_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_MANAGEMENT_FILE_PROPERTY_HIST
PRINT N'Drop table dbo.PIMS_MANAGEMENT_FILE_PROPERTY_HIST'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_PROPERTY_HIST]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_MANAGEMENT_FILE_PROPERTY_H_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_MANAGEMENT_FILE_PROPERTY_H_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_PROPERTY_H_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_MANAGEMENT_FILE_PROPERTY_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_MANAGEMENT_FILE_PROPERTY_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_PROPERTY_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_MANAGEMENT_FILE_NOTE_HIST
PRINT N'Drop table dbo.PIMS_MANAGEMENT_FILE_NOTE_HIST'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_NOTE_HIST]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_MANAGEMENT_FILE_NOTE_H_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_MANAGEMENT_FILE_NOTE_H_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_NOTE_H_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_MANAGEMENT_FILE_NOTE_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_MANAGEMENT_FILE_NOTE_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_NOTE_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_MANAGEMENT_FILE_DOCUMENT_HIST
PRINT N'Drop table dbo.PIMS_MANAGEMENT_FILE_DOCUMENT_HIST'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_DOCUMENT_HIST]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_MANAGEMENT_FILE_DOCUMENT_H_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_MANAGEMENT_FILE_DOCUMENT_H_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_DOCUMENT_H_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_MANAGEMENT_FILE_DOCUMENT_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_MANAGEMENT_FILE_DOCUMENT_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_DOCUMENT_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_MANAGEMENT_FILE_HIST
PRINT N'Drop table dbo.PIMS_MANAGEMENT_FILE_HIST'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_HIST]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_MANAGEMENT_FILE_H_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_MANAGEMENT_FILE_H_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_H_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_MANAGEMENT_FILE_PROGRAM_TYPE
PRINT N'Drop table dbo.PIMS_MANAGEMENT_FILE_PROGRAM_TYPE'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_PROGRAM_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_MANAGEMENT_FILE_STATUS_TYPE
PRINT N'Drop table dbo.PIMS_MANAGEMENT_FILE_STATUS_TYPE'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_STATUS_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_MANAGEMENT_FILE_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_MANAGEMENT_FILE_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_MANAGEMENT_FILE_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

COMMIT TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DECLARE @Success AS BIT
SET @Success = 1
SET NOEXEC OFF
IF (@Success = 1) PRINT 'The database update succeeded'
ELSE BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   PRINT 'The database update failed'
END
GO
