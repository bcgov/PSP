/* -----------------------------------------------------------------------------
Migrate the data to PIMS_PROPERTY.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
Author        Date         Comment
------------  -----------  -----------------------------------------------------
Doug Filteau  2023-Aug-03  Initial version
----------------------------------------------------------------------------- */

SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO
BEGIN TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Disable the constraints on PIMS_PROP_PROP_TENURE_TYPE
ALTER TABLE PIMS_PROP_PROP_TENURE_TYPE NOCHECK CONSTRAINT ALL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop the unique constraint on PIMS_PROP_PROP_TENURE_TYPE
--ALTER INDEX PRPRTT_PROP_PROP_TENURE_TUC ON PIMS_PROP_PROP_TENURE_TYPE DISABLE
--GO
--IF @@ERROR <> 0 SET NOEXEC ON
--GO

-- First pass: Migrate the Adjacent Land data to PIMS_PROPERTY
INSERT INTO PIMS_PROP_PROP_TENURE_TYPE (PROPERTY_ID, PROPERTY_TENURE_TYPE_CODE)
SELECT DISTINCT PROPERTY_ID
     , CASE
         WHEN PROPERTY_ADJACENT_LAND_TYPE_CODE = N'CROWN'     THEN N'FSCROWN'
         WHEN PROPERTY_ADJACENT_LAND_TYPE_CODE = N'INDIANR'   THEN N'IRESERVE'
         WHEN PROPERTY_ADJACENT_LAND_TYPE_CODE = N'LANDACTR'  THEN N'LNDACTR'
         WHEN PROPERTY_ADJACENT_LAND_TYPE_CODE = N'MOLBCTFA'  THEN N'FSBCTFA'
         WHEN PROPERTY_ADJACENT_LAND_TYPE_CODE = N'MOLHMQ'    THEN N'FSCROWN'
         WHEN PROPERTY_ADJACENT_LAND_TYPE_CODE = N'MONLBCTFA' THEN N'FSBCTFA'
         WHEN PROPERTY_ADJACENT_LAND_TYPE_CODE = N'MONLHMQ'   THEN N'FSCROWN'
         WHEN PROPERTY_ADJACENT_LAND_TYPE_CODE = N'PRIVATE'   THEN N'FSPRIVAT'
         WHEN PROPERTY_ADJACENT_LAND_TYPE_CODE = N'SPECUSE'   THEN N'SPECUPMT'
         WHEN PROPERTY_ADJACENT_LAND_TYPE_CODE = N'STATROW'   THEN N'SRWOTHER'
         ELSE PROPERTY_ADJACENT_LAND_TYPE_CODE
       END
FROM   TMP_PIMS_PROP_PROP_ADJACENT_LAND_TYPE tmp
WHERE  NOT EXISTS (SELECT 1
                   FROM   PIMS_PROP_PROP_TENURE_TYPE ptt
                   WHERE  ptt.PROPERTY_ID               = tmp.PROPERTY_ID
                      AND ptt.PROPERTY_TENURE_TYPE_CODE = tmp.PROPERTY_ADJACENT_LAND_TYPE_CODE)
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Second pass: Migrate the Adjacent Land data to PIMS_PROPERTY
INSERT INTO PIMS_PROP_PROP_TENURE_TYPE (PROPERTY_ID, PROPERTY_TENURE_TYPE_CODE)
SELECT PROPERTY_ID
     , N'LEASELIC'
FROM   TMP_PIMS_PROP_PROP_ADJACENT_LAND_TYPE
WHERE  PROPERTY_ADJACENT_LAND_TYPE_CODE = 'MOLBCTFA'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Remove the duiplicate rows on PIMS_PROP_PROP_TENURE_TYPE
WITH CTE AS 
  (SELECT *
        , ROW_NUMBER() OVER (PARTITION BY PROPERTY_ID, PROPERTY_TENURE_TYPE_CODE ORDER BY PROPERTY_ID, PROPERTY_TENURE_TYPE_CODE) AS DupRow
   FROM   PIMS_PROP_PROP_TENURE_TYPE)
DELETE FROM CTE WHERE DupRow <> 1
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Re-enable the constraints on PIMS_PROP_PROP_TENURE_TYPE
ALTER TABLE PIMS_PROP_PROP_TENURE_TYPE WITH CHECK CHECK CONSTRAINT ALL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create the unique constraint on PIMS_PROP_PROP_TENURE_TYPE
--DBCC DBREINDEX (PIMS_PROP_PROP_TENURE_TYPE, PRPRTT_PROP_PROP_TENURE_TUC);  
--GO
--IF @@ERROR <> 0 SET NOEXEC ON
--GO

-- Drop the existing TMP_PIMS_PROP_PROP_ADJACENT_LAND_TYPE temporary table
--DROP TABLE IF EXISTS [dbo].[TMP_PIMS_PROP_PROP_ADJACENT_LAND_TYPE] 
--GO
--IF @@ERROR <> 0 SET NOEXEC ON
--GO

COMMIT TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DECLARE @Success AS BIT
SET @Success = 1
SET NOEXEC OFF
IF (@Success = 1) PRINT 'The database update succeeded'
ELSE BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   PRINT 'The database update failed'
END
GO
