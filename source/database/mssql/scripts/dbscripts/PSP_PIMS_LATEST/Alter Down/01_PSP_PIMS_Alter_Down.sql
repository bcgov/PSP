-- Script generated by Aqua Data Studio Schema Synchronization for MS SQL Server 2016 on Thu Nov 24 11:29:41 PST 2022
-- Execute this script on:
-- 		PSP_PIMS_S42_00/dbo - This database/schema will be modified
-- to synchronize it with MS SQL Server 2016:
-- 		PSP_PIMS_S41_00/dbo

-- We recommend backing up the database prior to executing the script.

SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO
BEGIN TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Dynamic drop of dynamicxally-named default constraints
PRINT N'Dynamic drop of dynamicxally-named default constraints'
GO
DECLARE @sqlQry  VARCHAR(1000)
DECLARE @defName VARCHAR(100)
SET @defName = (SELECT obj.NAME
                FROM   SYSOBJECTS obj                          INNER JOIN
                       SYSCOLUMNS col on obj.ID = col.CDEFAULT INNER JOIN
                       SYSOBJECTS tbl on col.ID = tbl.ID
                WHERE  obj.XTYPE = 'D'
                   AND tbl.NAME = 'PIMS_LEASE_TENANT' 
                   AND col.NAME = 'LESSOR_TYPE_CODE')
SET @sqlQry = 'ALTER TABLE [dbo].[PIMS_LEASE_TENANT] DROP CONSTRAINT IF EXISTS [' + @defName + ']'
EXEC (@sqlQry)
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PRPRTY_LOCATION_IDX
PRINT N'Drop index dbo.PRPRTY_LOCATION_IDX'
GO
DROP INDEX IF EXISTS [PRPRTY_LOCATION_IDX] ON [dbo].[PIMS_PROPERTY] 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PRPRTY_BOUNDARY_IDX
PRINT N'Drop index dbo.PRPRTY_BOUNDARY_IDX'
GO
DROP INDEX IF EXISTS [PRPRTY_BOUNDARY_IDX] ON [dbo].[PIMS_PROPERTY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_LESSOR_TYPE
PRINT N'Alter table dbo.PIMS_LESSOR_TYPE'
GO
EXEC sp_dropextendedproperty 
	@name = N'MS_Description' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_LESSOR_TYPE'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_LESSOR_TYPE] DROP CONSTRAINT IF EXISTS [LSSRTY_LESSOR_TYPE_CODE_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC sp_dropextendedproperty 
	@name = N'MS_Description' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_LESSOR_TYPE', 
	@level2type = N'Column', @level2name = N'LESSOR_TYPE_CODE'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_LESSOR_TYPE] DROP CONSTRAINT IF EXISTS [LSSRTY_DESCRIPTION_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC sp_dropextendedproperty 
	@name = N'MS_Description' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_LESSOR_TYPE', 
	@level2type = N'Column', @level2name = N'DESCRIPTION'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC sp_dropextendedproperty 
	@name = N'MS_Description' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_LESSOR_TYPE', 
	@level2type = N'Column', @level2name = N'IS_DISABLED'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC sp_dropextendedproperty 
	@name = N'MS_Description' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_LESSOR_TYPE', 
	@level2type = N'Column', @level2name = N'DISPLAY_ORDER'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_LEASE_TENANT
PRINT N'Alter table dbo.PIMS_LEASE_TENANT'
GO
ALTER TABLE [dbo].[PIMS_LEASE_TENANT] DROP CONSTRAINT IF EXISTS [TENANT_LESSOR_TYPE_CODE_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_LEASE_TENANT] ADD DEFAULT 'UNK' FOR [LESSOR_TYPE_CODE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_LEASE_TENANT] DROP CONSTRAINT IF EXISTS [TENANT_PRIMARY_CONTACT_ID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_DATA_SOURCE_TYPE
PRINT N'Alter table dbo.PIMS_DATA_SOURCE_TYPE'
GO
EXEC sp_updateextendedproperty 
	@name = N'MS_Description', @value = N'Code val;ue of the source system of the data (PAIMS, LIS, etc.)' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_DATA_SOURCE_TYPE', 
	@level2type = N'Column', @level2name = N'DATA_SOURCE_TYPE_CODE'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

COMMIT TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DECLARE @Success AS BIT
SET @Success = 1
SET NOEXEC OFF
IF (@Success = 1) PRINT 'The database update succeeded'
ELSE BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   PRINT 'The database update failed'
END
GO
