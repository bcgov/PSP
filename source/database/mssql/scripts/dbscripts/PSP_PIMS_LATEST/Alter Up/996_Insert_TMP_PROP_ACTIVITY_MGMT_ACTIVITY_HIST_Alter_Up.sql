/* -----------------------------------------------------------------------------
Populate PIMS_MGMT_ACTIVITY_ACTIVITY_SUBTYP_HIST from the 
TMP_PROP_ACTIVITY_MGMT_ACTIVITY_HIST table.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Author        Date         Comment
------------  -----------  -----------------------------------------------------
Doug Filteau  2025-Jul-24  Initial version
----------------------------------------------------------------------------- */

SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO
BEGIN TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Migrate the TMP_PROP_ACTIVITY_MGMT_ACTIVITY_HIST data to the PIMS_MGMT_ACTIVITY_ACTIVITY_SUBTYP_HIST table
PRINT N'Migrate the TMP_PROP_ACTIVITY_MGMT_ACTIVITY_HIST data to the PIMS_MGMT_ACTIVITY_ACTIVITY_SUBTYP_HIST table'
GO
INSERT INTO dbo.PIMS_MGMT_ACTIVITY_ACTIVITY_SUBTYP_HIST (_MGMT_ACTIVITY_ACTIVITY_SUBTYP_HIST_ID, EFFECTIVE_DATE_HIST, END_DATE_HIST, MGMT_ACTIVITY_ACTIVITY_SUBTYP_ID, MANAGEMENT_ACTIVITY_ID, MGMT_ACTIVITY_SUBTYPE_CODE, CONCURRENCY_CONTROL_NUMBER, APP_CREATE_TIMESTAMP, APP_CREATE_USERID, APP_CREATE_USER_GUID, APP_CREATE_USER_DIRECTORY, APP_LAST_UPDATE_TIMESTAMP, APP_LAST_UPDATE_USERID, APP_LAST_UPDATE_USER_GUID, APP_LAST_UPDATE_USER_DIRECTORY, DB_CREATE_TIMESTAMP, DB_CREATE_USERID, DB_LAST_UPDATE_TIMESTAMP, DB_LAST_UPDATE_USERID)
  SELECT _PROP_ACTIVITY_MGMT_ACTIVITY_HIST_ID
       , EFFECTIVE_DATE_HIST
       , END_DATE_HIST
       , PROP_ACTVTY_MGMT_ACTVTY_TYP_ID
       , PIMS_MANAGEMENT_ACTIVITY_ID
       , PROP_MGMT_ACTIVITY_SUBTYPE_CODE
       , CONCURRENCY_CONTROL_NUMBER
       , APP_CREATE_TIMESTAMP
       , APP_CREATE_USERID
       , APP_CREATE_USER_GUID
       , APP_CREATE_USER_DIRECTORY
       , APP_LAST_UPDATE_TIMESTAMP
       , APP_LAST_UPDATE_USERID
       , APP_LAST_UPDATE_USER_GUID
       , APP_LAST_UPDATE_USER_DIRECTORY
       , DB_CREATE_TIMESTAMP
       , DB_CREATE_USERID
       , DB_LAST_UPDATE_TIMESTAMP
       , DB_LAST_UPDATE_USERID
  FROM   dbo.TMP_PROP_ACTIVITY_MGMT_ACTIVITY_HIST
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

COMMIT TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DECLARE @Success AS BIT
SET @Success = 1
SET NOEXEC OFF
IF (@Success = 1) PRINT 'The database update succeeded'
ELSE BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   PRINT 'The database update failed'
END
GO
