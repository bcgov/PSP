-- Script generated by Aqua Data Studio Schema Synchronization for MS SQL Server 2016 on Mon Dec 16 12:01:40 PST 2024
-- Execute this script on:
-- 		PSP_PIMS_S96_00/dbo - This database/schema will be modified
-- to synchronize it with MS SQL Server 2016:
-- 		PSP_PIMS_S95_00/dbo

-- We recommend backing up the database prior to executing the script.

SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO
BEGIN TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_ACQNFL_PIM_AQFFLP_FK
PRINT N'Drop foreign key constraint dbo.PIM_ACQNFL_PIM_AQFFLP_FK'
GO
ALTER TABLE [dbo].[PIMS_ACQ_FILE_ACQ_PROGRESS]
	DROP CONSTRAINT [PIM_ACQNFL_PIM_AQFFLP_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_AFRPGT_PIM_AQFFLP_FK
PRINT N'Drop foreign key constraint dbo.PIM_AFRPGT_PIM_AQFFLP_FK'
GO
ALTER TABLE [dbo].[PIMS_ACQ_FILE_ACQ_PROGRESS]
	DROP CONSTRAINT [PIM_AFRPGT_PIM_AQFFLP_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_ACQNFL_PIM_AQFATT_FK
PRINT N'Drop foreign key constraint dbo.PIM_ACQNFL_PIM_AQFATT_FK'
GO
ALTER TABLE [dbo].[PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP]
	DROP CONSTRAINT [PIM_ACQNFL_PIM_AQFATT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_AFTKTY_PIM_AQFATT_FK
PRINT N'Drop foreign key constraint dbo.PIM_AFTKTY_PIM_AQFATT_FK'
GO
ALTER TABLE [dbo].[PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP]
	DROP CONSTRAINT [PIM_AFTKTY_PIM_AQFATT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_AFEXRT_PIM_ACQNFL_FK
PRINT N'Drop foreign key constraint dbo.PIM_AFEXRT_PIM_ACQNFL_FK'
GO
ALTER TABLE [dbo].[PIMS_ACQUISITION_FILE]
	DROP CONSTRAINT [PIM_AFEXRT_PIM_ACQNFL_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_AFLSVT_PIM_ACQNFL_FK
PRINT N'Drop foreign key constraint dbo.PIM_AFLSVT_PIM_ACQNFL_FK'
GO
ALTER TABLE [dbo].[PIMS_ACQUISITION_FILE]
	DROP CONSTRAINT [PIM_AFLSVT_PIM_ACQNFL_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_AFAPPRT_PIM_ACQNFL_FK
PRINT N'Drop foreign key constraint dbo.PIM_AFAPPRT_PIM_ACQNFL_FK'
GO
ALTER TABLE [dbo].[PIMS_ACQUISITION_FILE]
	DROP CONSTRAINT [PIM_AFAPPRT_PIM_ACQNFL_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.PRJPER_PROJECT_PERSON_ROLE_TYPE_CODE_IDX
PRINT N'Drop index dbo.PRJPER_PROJECT_PERSON_ROLE_TYPE_CODE_IDX'
GO
DROP INDEX [dbo].[PIMS_PROJECT_PERSON].[PRJPER_PROJECT_PERSON_ROLE_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AQFFLP_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_AQFFLP_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_AQFFLP_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AQFFLP_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_AQFFLP_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_AQFFLP_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AQFFLP_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_AQFFLP_A_S_IUD_TR'
GO
DROP TRIGGER [dbo].[PIMS_AQFFLP_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.AQFFLP_ACQUISITION_FILE_ID_IDX
PRINT N'Drop index dbo.AQFFLP_ACQUISITION_FILE_ID_IDX'
GO
DROP INDEX [dbo].[PIMS_ACQ_FILE_ACQ_PROGRESS].[AQFFLP_ACQUISITION_FILE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.AQFFLP_ACQ_FILE_PROGESS_TYPE_CODE_IDX
PRINT N'Drop index dbo.AQFFLP_ACQ_FILE_PROGESS_TYPE_CODE_IDX'
GO
DROP INDEX [dbo].[PIMS_ACQ_FILE_ACQ_PROGRESS].[AQFFLP_ACQ_FILE_PROGESS_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AFRPGT_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_AFRPGT_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_AFRPGT_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AFRPGT_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_AFRPGT_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_AFRPGT_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AQFATT_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_AQFATT_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_AQFATT_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AQFATT_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_AQFATT_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_AQFATT_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AQFATT_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_AQFATT_A_S_IUD_TR'
GO
DROP TRIGGER [dbo].[PIMS_AQFATT_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.AQFATT_ACQUISITION_FILE_ID_IDX
PRINT N'Drop index dbo.AQFATT_ACQUISITION_FILE_ID_IDX'
GO
DROP INDEX [dbo].[PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP].[AQFATT_ACQUISITION_FILE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.AQFATT_ACQ_FILE_TAKE_TYPE_CODE_IDX
PRINT N'Drop index dbo.AQFATT_ACQ_FILE_TAKE_TYPE_CODE_IDX'
GO
DROP INDEX [dbo].[PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP].[AQFATT_ACQ_FILE_TAKE_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AFTKTY_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_AFTKTY_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_AFTKTY_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AFTKTY_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_AFTKTY_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_AFTKTY_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_DOCQUE_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_DOCQUE_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_DOCQUE_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_ACQNFL_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_ACQNFL_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_ACQNFL_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_DOCQUE_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_DOCQUE_A_S_IUD_TR'
GO
DROP TRIGGER [dbo].[PIMS_DOCQUE_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_ACQNFL_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_ACQNFL_A_S_IUD_TR'
GO
DROP TRIGGER [dbo].[PIMS_ACQNFL_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.ACQNFL_ACQ_FILE_LGL_SRVY_TYPE_CODE_IDX
PRINT N'Drop index dbo.ACQNFL_ACQ_FILE_LGL_SRVY_TYPE_CODE_IDX'
GO
DROP INDEX [dbo].[PIMS_ACQUISITION_FILE].[ACQNFL_ACQ_FILE_LGL_SRVY_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.ACQNFL_ACQ_FILE_EXPROP_RISK_TYPE_CODE_IDX
PRINT N'Drop index dbo.ACQNFL_ACQ_FILE_EXPROP_RISK_TYPE_CODE_IDX'
GO
DROP INDEX [dbo].[PIMS_ACQUISITION_FILE].[ACQNFL_ACQ_FILE_EXPROP_RISK_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.ACQNFL_ACQ_FILE_APPRAISAL_TYPE_CODE_IDX
PRINT N'Drop index dbo.ACQNFL_ACQ_FILE_APPRAISAL_TYPE_CODE_IDX'
GO
DROP INDEX [dbo].[PIMS_ACQUISITION_FILE].[ACQNFL_ACQ_FILE_APPRAISAL_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_DOCQUE_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_DOCQUE_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_DOCQUE_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_ACQNFL_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_ACQNFL_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_ACQNFL_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AFEXRT_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_AFEXRT_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_AFEXRT_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AFEXRT_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_AFEXRT_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_AFEXRT_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AFLSVT_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_AFLSVT_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_AFLSVT_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AFLSVT_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_AFLSVT_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_AFLSVT_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AFAPPRT_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_AFAPPRT_I_S_U_TR'
GO
DROP TRIGGER [dbo].[PIMS_AFAPPRT_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_AFAPPRT_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_AFAPPRT_I_S_I_TR'
GO
DROP TRIGGER [dbo].[PIMS_AFAPPRT_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PIMS_AQFFLP_H_UK
PRINT N'Drop unique constraint dbo.PIMS_AQFFLP_H_UK'
GO
ALTER TABLE [dbo].[PIMS_ACQ_FILE_ACQ_PROGRESS_HIST]
	DROP CONSTRAINT [PIMS_AQFFLP_H_UK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PIMS_AQFFLP_H_PK
PRINT N'Drop primary key constraint dbo.PIMS_AQFFLP_H_PK'
GO
ALTER TABLE [dbo].[PIMS_ACQ_FILE_ACQ_PROGRESS_HIST]
	DROP CONSTRAINT [PIMS_AQFFLP_H_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.AQFFLP_PK
PRINT N'Drop primary key constraint dbo.AQFFLP_PK'
GO
ALTER TABLE [dbo].[PIMS_ACQ_FILE_ACQ_PROGRESS]
	DROP CONSTRAINT [AQFFLP_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_ACQ_FILE_ACQ_PROGRESS
PRINT N'Drop table dbo.PIMS_ACQ_FILE_ACQ_PROGRESS'
GO
DROP TABLE [dbo].[PIMS_ACQ_FILE_ACQ_PROGRESS]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.AFRPGT_PK
PRINT N'Drop primary key constraint dbo.AFRPGT_PK'
GO
ALTER TABLE [dbo].[PIMS_ACQ_FILE_PROGESS_TYPE]
	DROP CONSTRAINT [AFRPGT_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PIMS_AQFATT_H_UK
PRINT N'Drop unique constraint dbo.PIMS_AQFATT_H_UK'
GO
ALTER TABLE [dbo].[PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP_HIST]
	DROP CONSTRAINT [PIMS_AQFATT_H_UK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PIMS_AQFATT_H_PK
PRINT N'Drop primary key constraint dbo.PIMS_AQFATT_H_PK'
GO
ALTER TABLE [dbo].[PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP_HIST]
	DROP CONSTRAINT [PIMS_AQFATT_H_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.AQFATT_PK
PRINT N'Drop primary key constraint dbo.AQFATT_PK'
GO
ALTER TABLE [dbo].[PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP]
	DROP CONSTRAINT [AQFATT_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP
PRINT N'Drop table dbo.PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP'
GO
DROP TABLE [dbo].[PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.AFTKTY_PK
PRINT N'Drop primary key constraint dbo.AFTKTY_PK'
GO
ALTER TABLE [dbo].[PIMS_ACQ_FILE_TAKE_TYPE]
	DROP CONSTRAINT [AFTKTY_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PRJPER_PROJECT_PERSON_TUC
PRINT N'Drop unique constraint dbo.PRJPER_PROJECT_PERSON_TUC'
GO
ALTER TABLE [dbo].[PIMS_PROJECT_PERSON]
	DROP CONSTRAINT [PRJPER_PROJECT_PERSON_TUC]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.AFEXRT_PK
PRINT N'Drop primary key constraint dbo.AFEXRT_PK'
GO
ALTER TABLE [dbo].[PIMS_ACQ_FILE_EXPROP_RISK_TYPE]
	DROP CONSTRAINT [AFEXRT_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.AFLSVT_PK
PRINT N'Drop primary key constraint dbo.AFLSVT_PK'
GO
ALTER TABLE [dbo].[PIMS_ACQ_FILE_LGL_SRVY_TYPE]
	DROP CONSTRAINT [AFLSVT_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.AFAPPRT_PK
PRINT N'Drop primary key constraint dbo.AFAPPRT_PK'
GO
ALTER TABLE [dbo].[PIMS_ACQ_FILE_APPRAISAL_TYPE]
	DROP CONSTRAINT [AFAPPRT_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_ACQUISITION_FILE
PRINT N'Alter table dbo.PIMS_ACQUISITION_FILE'
GO
ALTER TABLE [dbo].[PIMS_ACQUISITION_FILE]
	DROP COLUMN [ACQ_FILE_APPRAISAL_TYPE_CODE], [ACQ_FILE_LGL_SRVY_TYPE_CODE], [ACQ_FILE_EXPROP_RISK_TYPE_CODE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_DOCUMENT
PRINT N'Alter table dbo.PIMS_DOCUMENT'
GO
ALTER TABLE [dbo].[PIMS_DOCUMENT] ADD CONSTRAINT [DOCMNT_MAYAN_ID_DEF] DEFAULT ((-1)) FOR [MAYAN_ID]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_DOCUMENT_QUEUE
PRINT N'Alter table dbo.PIMS_DOCUMENT_QUEUE'
GO
ALTER TABLE [dbo].[PIMS_DOCUMENT_QUEUE]
	ADD [PROPERTY_ACTIVITY_DOCUMENT_ID] bigint NULL, 
	[ACQUISITION_FILE_DOCUMENT_ID] bigint NULL, 
	[RESEARCH_FILE_DOCUMENT_ID] bigint NULL, 
	[LEASE_DOCUMENT_ID] bigint NULL, 
	[DISPOSITION_FILE_DOCUMENT_ID] bigint NULL, 
	[FILE_NAME] nvarchar(500) NOT NULL
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Foreign key to the PIMS_PROPERTY_ACTIVITY_DOCUMENT table.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_DOCUMENT_QUEUE', 
	@level2type = N'Column', @level2name = N'PROPERTY_ACTIVITY_DOCUMENT_ID'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Foreign key to the PIMS_ACQUISITION_FILE_DOCUMENT table.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_DOCUMENT_QUEUE', 
	@level2type = N'Column', @level2name = N'ACQUISITION_FILE_DOCUMENT_ID'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Foreign key to the PIMS_RESEARCH_FILE_DOCUMENT table.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_DOCUMENT_QUEUE', 
	@level2type = N'Column', @level2name = N'RESEARCH_FILE_DOCUMENT_ID'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Foreign key to the PIMS_LEASE_DOCUMENT table.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_DOCUMENT_QUEUE', 
	@level2type = N'Column', @level2name = N'LEASE_DOCUMENT_ID'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Foreign key to the PIMS_DISPOSITION_FILE_DOCUMENT table.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_DOCUMENT_QUEUE', 
	@level2type = N'Column', @level2name = N'DISPOSITION_FILE_DOCUMENT_ID'
GO
EXEC sp_addextendedproperty 
	@name = N'MS_Description', @value = N'Name of the file to be stored on Mayan EDMS.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_DOCUMENT_QUEUE', 
	@level2type = N'Column', @level2name = N'FILE_NAME'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_ACQUISITION_FILE_HIST
PRINT N'Alter table dbo.PIMS_ACQUISITION_FILE_HIST'
GO
ALTER TABLE [dbo].[PIMS_ACQUISITION_FILE_HIST]
	DROP COLUMN [ACQ_FILE_APPRAISAL_TYPE_CODE], [ACQ_FILE_LGL_SRVY_TYPE_CODE], [ACQ_FILE_EXPROP_RISK_TYPE_CODE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_DOCUMENT_QUEUE_HIST
PRINT N'Alter table dbo.PIMS_DOCUMENT_QUEUE_HIST'
GO
ALTER TABLE [dbo].[PIMS_DOCUMENT_QUEUE_HIST]
	ADD [PROPERTY_ACTIVITY_DOCUMENT_ID] bigint NULL, 
	[ACQUISITION_FILE_DOCUMENT_ID] bigint NULL, 
	[RESEARCH_FILE_DOCUMENT_ID] bigint NULL, 
	[LEASE_DOCUMENT_ID] bigint NULL, 
	[DISPOSITION_FILE_DOCUMENT_ID] bigint NULL, 
	[FILE_NAME] nvarchar(500) NOT NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_PROPERTY
PRINT N'Alter table dbo.PIMS_PROPERTY'
GO
EXEC sp_updateextendedproperty 
	@name = N'MS_Description', @value = N'Foreign key to the proprty type table.' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_PROPERTY', 
	@level2type = N'Column', @level2name = N'PROPERTY_TYPE_CODE'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_PROJECT_PERSON
PRINT N'Alter table dbo.PIMS_PROJECT_PERSON'
GO
ALTER TABLE [dbo].[PIMS_PROJECT_PERSON] ALTER COLUMN [PROJECT_PERSON_ROLE_TYPE_CODE] nvarchar(20) NOT NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create unique constraint dbo.PRJPER_PROJECT_PERSON_TUC
PRINT N'Create unique constraint dbo.PRJPER_PROJECT_PERSON_TUC'
GO
ALTER TABLE [dbo].[PIMS_PROJECT_PERSON]
	ADD CONSTRAINT [PRJPER_PROJECT_PERSON_TUC]
	UNIQUE ([PERSON_ID], [PROJECT_ID], [PROJECT_PERSON_ROLE_TYPE_CODE]) 
	WITH (
		DATA_COMPRESSION = NONE
	) ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_PROJECT_PERSON_HIST
PRINT N'Alter table dbo.PIMS_PROJECT_PERSON_HIST'
GO
ALTER TABLE [dbo].[PIMS_PROJECT_PERSON_HIST] ALTER COLUMN [PROJECT_PERSON_ROLE_TYPE_CODE] nvarchar(20) NOT NULL
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_ACQ_CHKLST_SECTION_TYPE
PRINT N'Alter table dbo.PIMS_ACQ_CHKLST_SECTION_TYPE'
GO
EXEC sp_dropextendedproperty 
	@name = N'MS_Description' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_ACQ_CHKLST_SECTION_TYPE', 
	@level2type = N'Column', @level2name = N'CONCURRENCY_CONTROL_NUMBER'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC sp_dropextendedproperty 
	@name = N'MS_Description' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_ACQ_CHKLST_SECTION_TYPE', 
	@level2type = N'Column', @level2name = N'DB_CREATE_TIMESTAMP'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC sp_dropextendedproperty 
	@name = N'MS_Description' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_ACQ_CHKLST_SECTION_TYPE', 
	@level2type = N'Column', @level2name = N'DB_CREATE_USERID'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC sp_dropextendedproperty 
	@name = N'MS_Description' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_ACQ_CHKLST_SECTION_TYPE', 
	@level2type = N'Column', @level2name = N'DB_LAST_UPDATE_TIMESTAMP'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
EXEC sp_dropextendedproperty 
	@name = N'MS_Description' , 
	@level0type = N'Schema', @level0name = N'dbo', 
	@level1type = N'Table', @level1name = N'PIMS_ACQ_CHKLST_SECTION_TYPE', 
	@level2type = N'Column', @level2name = N'DB_LAST_UPDATE_USERID'
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.DOCQUE_ACQUISITION_FILE_DOCUMENT_ID_IDX
PRINT N'Create index dbo.DOCQUE_ACQUISITION_FILE_DOCUMENT_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [DOCQUE_ACQUISITION_FILE_DOCUMENT_ID_IDX]
	ON [dbo].[PIMS_DOCUMENT_QUEUE]([ACQUISITION_FILE_DOCUMENT_ID])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.DOCQUE_DISPOSITION_FILE_DOCUMENT_ID_IDX
PRINT N'Create index dbo.DOCQUE_DISPOSITION_FILE_DOCUMENT_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [DOCQUE_DISPOSITION_FILE_DOCUMENT_ID_IDX]
	ON [dbo].[PIMS_DOCUMENT_QUEUE]([DISPOSITION_FILE_DOCUMENT_ID])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.DOCQUE_RESEARCH_FILE_DOCUMENT_ID_IDX
PRINT N'Create index dbo.DOCQUE_RESEARCH_FILE_DOCUMENT_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [DOCQUE_RESEARCH_FILE_DOCUMENT_ID_IDX]
	ON [dbo].[PIMS_DOCUMENT_QUEUE]([RESEARCH_FILE_DOCUMENT_ID])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.DOCQUE_PROPERTY_ACTIVITY_DOCUMENT_ID_IDX
PRINT N'Create index dbo.DOCQUE_PROPERTY_ACTIVITY_DOCUMENT_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [DOCQUE_PROPERTY_ACTIVITY_DOCUMENT_ID_IDX]
	ON [dbo].[PIMS_DOCUMENT_QUEUE]([PROPERTY_ACTIVITY_DOCUMENT_ID])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.DOCQUE_LEASE_DOCUMENT_ID_IDX
PRINT N'Create index dbo.DOCQUE_LEASE_DOCUMENT_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [DOCQUE_LEASE_DOCUMENT_ID_IDX]
	ON [dbo].[PIMS_DOCUMENT_QUEUE]([LEASE_DOCUMENT_ID])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_ACQNFL_I_S_I_TR
PRINT N'Create trigger dbo.PIMS_ACQNFL_I_S_I_TR'
GO
CREATE TRIGGER [dbo].[PIMS_ACQNFL_I_S_I_TR] ON PIMS_ACQUISITION_FILE INSTEAD OF INSERT AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM inserted) 
    RETURN;

  
  insert into PIMS_ACQUISITION_FILE ("ACQUISITION_FILE_ID",
      "PRNT_ACQUISITION_FILE_ID",
      "PROJECT_ID",
      "PRODUCT_ID",
      "ACQUISITION_FILE_STATUS_TYPE_CODE",
      "ACQUISITION_TYPE_CODE",
      "ACQUISITION_FUNDING_TYPE_CODE",
      "ACQ_PHYS_FILE_STATUS_TYPE_CODE",
      "REGION_CODE",
      "SUBFILE_INTEREST_TYPE_CODE",
      "FILE_NAME",
      "FILE_NO",
      "FILE_NO_SUFFIX",
      "LEGACY_FILE_NUMBER",
      "LEGACY_STAKEHOLDER",
      "FUNDING_OTHER",
      "ASSIGNED_DATE",
      "DELIVERY_DATE",
      "PAIMS_ACQUISITION_FILE_ID",
      "TOTAL_ALLOWABLE_COMPENSATION",
      "OTHER_SUBFILE_INTEREST_TYPE",
      "EST_COMPLETION_DT",
      "POSSESSION_DT",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY")
    select "ACQUISITION_FILE_ID",
      "PRNT_ACQUISITION_FILE_ID",
      "PROJECT_ID",
      "PRODUCT_ID",
      "ACQUISITION_FILE_STATUS_TYPE_CODE",
      "ACQUISITION_TYPE_CODE",
      "ACQUISITION_FUNDING_TYPE_CODE",
      "ACQ_PHYS_FILE_STATUS_TYPE_CODE",
      "REGION_CODE",
      "SUBFILE_INTEREST_TYPE_CODE",
      "FILE_NAME",
      "FILE_NO",
      "FILE_NO_SUFFIX",
      "LEGACY_FILE_NUMBER",
      "LEGACY_STAKEHOLDER",
      "FUNDING_OTHER",
      "ASSIGNED_DATE",
      "DELIVERY_DATE",
      "PAIMS_ACQUISITION_FILE_ID",
      "TOTAL_ALLOWABLE_COMPENSATION",
      "OTHER_SUBFILE_INTEREST_TYPE",
      "EST_COMPLETION_DT",
      "POSSESSION_DT",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY"
    from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_DOCQUE_I_S_I_TR
PRINT N'Create trigger dbo.PIMS_DOCQUE_I_S_I_TR'
GO
CREATE TRIGGER [dbo].[PIMS_DOCQUE_I_S_I_TR] ON PIMS_DOCUMENT_QUEUE INSTEAD OF INSERT AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM inserted) 
    RETURN;

  
  insert into PIMS_DOCUMENT_QUEUE ("DOCUMENT_QUEUE_ID",
      "DOCUMENT_ID",
      "DOCUMENT_QUEUE_STATUS_TYPE_CODE",
      "DATA_SOURCE_TYPE_CODE",
      "PROPERTY_ACTIVITY_DOCUMENT_ID",
      "ACQUISITION_FILE_DOCUMENT_ID",
      "RESEARCH_FILE_DOCUMENT_ID",
      "LEASE_DOCUMENT_ID",
      "DISPOSITION_FILE_DOCUMENT_ID",
      "FILE_NAME",
      "DOCUMENT_EXTERNAL_ID",
      "DOCUMENT_METADATA",
      "DOC_PROCESS_START_DT",
      "DOC_PROCESS_END_DT",
      "DOC_PROCESS_RETRIES",
      "MAYAN_ERROR",
      "DOCUMENT",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY")
    select "DOCUMENT_QUEUE_ID",
      "DOCUMENT_ID",
      "DOCUMENT_QUEUE_STATUS_TYPE_CODE",
      "DATA_SOURCE_TYPE_CODE",
      "PROPERTY_ACTIVITY_DOCUMENT_ID",
      "ACQUISITION_FILE_DOCUMENT_ID",
      "RESEARCH_FILE_DOCUMENT_ID",
      "LEASE_DOCUMENT_ID",
      "DISPOSITION_FILE_DOCUMENT_ID",
      "FILE_NAME",
      "DOCUMENT_EXTERNAL_ID",
      "DOCUMENT_METADATA",
      "DOC_PROCESS_START_DT",
      "DOC_PROCESS_END_DT",
      "DOC_PROCESS_RETRIES",
      "MAYAN_ERROR",
      "DOCUMENT",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY"
    from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_ACQNFL_A_S_IUD_TR
PRINT N'Create trigger dbo.PIMS_ACQNFL_A_S_IUD_TR'
GO
CREATE TRIGGER [dbo].[PIMS_ACQNFL_A_S_IUD_TR] ON PIMS_ACQUISITION_FILE FOR INSERT, UPDATE, DELETE AS
SET NOCOUNT ON
BEGIN TRY
DECLARE @curr_date datetime;
SET @curr_date = getutcdate();
  IF NOT EXISTS(SELECT * FROM inserted) AND NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- historical
  IF EXISTS(SELECT * FROM deleted)
    update PIMS_ACQUISITION_FILE_HIST set END_DATE_HIST = @curr_date where ACQUISITION_FILE_ID in (select ACQUISITION_FILE_ID from deleted) and END_DATE_HIST is null;
  
  IF EXISTS(SELECT * FROM inserted)
    insert into PIMS_ACQUISITION_FILE_HIST ([ACQUISITION_FILE_ID], [PRNT_ACQUISITION_FILE_ID], [PROJECT_ID], [PRODUCT_ID], [ACQUISITION_FILE_STATUS_TYPE_CODE], [ACQUISITION_TYPE_CODE], [ACQUISITION_FUNDING_TYPE_CODE], [ACQ_PHYS_FILE_STATUS_TYPE_CODE], [REGION_CODE], [SUBFILE_INTEREST_TYPE_CODE], [FILE_NAME], [FILE_NO], [FILE_NO_SUFFIX], [LEGACY_FILE_NUMBER], [LEGACY_STAKEHOLDER], [FUNDING_OTHER], [ASSIGNED_DATE], [DELIVERY_DATE], [PAIMS_ACQUISITION_FILE_ID], [TOTAL_ALLOWABLE_COMPENSATION], [OTHER_SUBFILE_INTEREST_TYPE], [EST_COMPLETION_DT], [POSSESSION_DT], [CONCURRENCY_CONTROL_NUMBER], [APP_CREATE_TIMESTAMP], [APP_CREATE_USERID], [APP_CREATE_USER_GUID], [APP_CREATE_USER_DIRECTORY], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USERID], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USER_DIRECTORY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], _ACQUISITION_FILE_HIST_ID, END_DATE_HIST, EFFECTIVE_DATE_HIST)
      select [ACQUISITION_FILE_ID], [PRNT_ACQUISITION_FILE_ID], [PROJECT_ID], [PRODUCT_ID], [ACQUISITION_FILE_STATUS_TYPE_CODE], [ACQUISITION_TYPE_CODE], [ACQUISITION_FUNDING_TYPE_CODE], [ACQ_PHYS_FILE_STATUS_TYPE_CODE], [REGION_CODE], [SUBFILE_INTEREST_TYPE_CODE], [FILE_NAME], [FILE_NO], [FILE_NO_SUFFIX], [LEGACY_FILE_NUMBER], [LEGACY_STAKEHOLDER], [FUNDING_OTHER], [ASSIGNED_DATE], [DELIVERY_DATE], [PAIMS_ACQUISITION_FILE_ID], [TOTAL_ALLOWABLE_COMPENSATION], [OTHER_SUBFILE_INTEREST_TYPE], [EST_COMPLETION_DT], [POSSESSION_DT], [CONCURRENCY_CONTROL_NUMBER], [APP_CREATE_TIMESTAMP], [APP_CREATE_USERID], [APP_CREATE_USER_GUID], [APP_CREATE_USER_DIRECTORY], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USERID], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USER_DIRECTORY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], (next value for [dbo].[PIMS_ACQUISITION_FILE_H_ID_SEQ]) as [_ACQUISITION_FILE_HIST_ID], null as [END_DATE_HIST], @curr_date as [EFFECTIVE_DATE_HIST] from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_DOCQUE_A_S_IUD_TR
PRINT N'Create trigger dbo.PIMS_DOCQUE_A_S_IUD_TR'
GO
CREATE TRIGGER [dbo].[PIMS_DOCQUE_A_S_IUD_TR] ON PIMS_DOCUMENT_QUEUE FOR INSERT, UPDATE, DELETE AS
SET NOCOUNT ON
BEGIN TRY
DECLARE @curr_date datetime;
SET @curr_date = getutcdate();
  IF NOT EXISTS(SELECT * FROM inserted) AND NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- historical
  IF EXISTS(SELECT * FROM deleted)
    update PIMS_DOCUMENT_QUEUE_HIST set END_DATE_HIST = @curr_date where DOCUMENT_QUEUE_ID in (select DOCUMENT_QUEUE_ID from deleted) and END_DATE_HIST is null;
  
  IF EXISTS(SELECT * FROM inserted)
    insert into PIMS_DOCUMENT_QUEUE_HIST ([DOCUMENT_QUEUE_ID], [DOCUMENT_ID], [DOCUMENT_QUEUE_STATUS_TYPE_CODE], [DATA_SOURCE_TYPE_CODE], [PROPERTY_ACTIVITY_DOCUMENT_ID], [ACQUISITION_FILE_DOCUMENT_ID], [RESEARCH_FILE_DOCUMENT_ID], [LEASE_DOCUMENT_ID], [DISPOSITION_FILE_DOCUMENT_ID], [FILE_NAME], [DOCUMENT_EXTERNAL_ID], [DOCUMENT_METADATA], [DOC_PROCESS_START_DT], [DOC_PROCESS_END_DT], [DOC_PROCESS_RETRIES], [MAYAN_ERROR], [CONCURRENCY_CONTROL_NUMBER], [APP_CREATE_TIMESTAMP], [APP_CREATE_USERID], [APP_CREATE_USER_GUID], [APP_CREATE_USER_DIRECTORY], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USERID], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USER_DIRECTORY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], _DOCUMENT_QUEUE_HIST_ID, END_DATE_HIST, EFFECTIVE_DATE_HIST)
      select [DOCUMENT_QUEUE_ID], [DOCUMENT_ID], [DOCUMENT_QUEUE_STATUS_TYPE_CODE], [DATA_SOURCE_TYPE_CODE], [PROPERTY_ACTIVITY_DOCUMENT_ID], [ACQUISITION_FILE_DOCUMENT_ID], [RESEARCH_FILE_DOCUMENT_ID], [LEASE_DOCUMENT_ID], [DISPOSITION_FILE_DOCUMENT_ID], [FILE_NAME], [DOCUMENT_EXTERNAL_ID], [DOCUMENT_METADATA], [DOC_PROCESS_START_DT], [DOC_PROCESS_END_DT], [DOC_PROCESS_RETRIES], [MAYAN_ERROR], [CONCURRENCY_CONTROL_NUMBER], [APP_CREATE_TIMESTAMP], [APP_CREATE_USERID], [APP_CREATE_USER_GUID], [APP_CREATE_USER_DIRECTORY], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USERID], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USER_DIRECTORY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], (next value for [dbo].[PIMS_DOCUMENT_QUEUE_H_ID_SEQ]) as [_DOCUMENT_QUEUE_HIST_ID], null as [END_DATE_HIST], @curr_date as [EFFECTIVE_DATE_HIST] from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_ACQNFL_I_S_U_TR
PRINT N'Create trigger dbo.PIMS_ACQNFL_I_S_U_TR'
GO
CREATE TRIGGER [dbo].[PIMS_ACQNFL_I_S_U_TR] ON PIMS_ACQUISITION_FILE INSTEAD OF UPDATE AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- validate concurrency control
  if exists (select 1 from inserted, deleted where inserted.CONCURRENCY_CONTROL_NUMBER != deleted.CONCURRENCY_CONTROL_NUMBER+1 AND inserted.ACQUISITION_FILE_ID = deleted.ACQUISITION_FILE_ID)
    raiserror('CONCURRENCY FAILURE.',16,1)


  -- update statement
  update PIMS_ACQUISITION_FILE
    set "ACQUISITION_FILE_ID" = inserted."ACQUISITION_FILE_ID",
      "PRNT_ACQUISITION_FILE_ID" = inserted."PRNT_ACQUISITION_FILE_ID",
      "PROJECT_ID" = inserted."PROJECT_ID",
      "PRODUCT_ID" = inserted."PRODUCT_ID",
      "ACQUISITION_FILE_STATUS_TYPE_CODE" = inserted."ACQUISITION_FILE_STATUS_TYPE_CODE",
      "ACQUISITION_TYPE_CODE" = inserted."ACQUISITION_TYPE_CODE",
      "ACQUISITION_FUNDING_TYPE_CODE" = inserted."ACQUISITION_FUNDING_TYPE_CODE",
      "ACQ_PHYS_FILE_STATUS_TYPE_CODE" = inserted."ACQ_PHYS_FILE_STATUS_TYPE_CODE",
      "REGION_CODE" = inserted."REGION_CODE",
      "SUBFILE_INTEREST_TYPE_CODE" = inserted."SUBFILE_INTEREST_TYPE_CODE",
      "FILE_NAME" = inserted."FILE_NAME",
      "FILE_NO" = inserted."FILE_NO",
      "FILE_NO_SUFFIX" = inserted."FILE_NO_SUFFIX",
      "LEGACY_FILE_NUMBER" = inserted."LEGACY_FILE_NUMBER",
      "LEGACY_STAKEHOLDER" = inserted."LEGACY_STAKEHOLDER",
      "FUNDING_OTHER" = inserted."FUNDING_OTHER",
      "ASSIGNED_DATE" = inserted."ASSIGNED_DATE",
      "DELIVERY_DATE" = inserted."DELIVERY_DATE",
      "PAIMS_ACQUISITION_FILE_ID" = inserted."PAIMS_ACQUISITION_FILE_ID",
      "TOTAL_ALLOWABLE_COMPENSATION" = inserted."TOTAL_ALLOWABLE_COMPENSATION",
      "OTHER_SUBFILE_INTEREST_TYPE" = inserted."OTHER_SUBFILE_INTEREST_TYPE",
      "EST_COMPLETION_DT" = inserted."EST_COMPLETION_DT",
      "POSSESSION_DT" = inserted."POSSESSION_DT",
      "CONCURRENCY_CONTROL_NUMBER" = inserted."CONCURRENCY_CONTROL_NUMBER",
      "APP_LAST_UPDATE_TIMESTAMP" = inserted."APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID" = inserted."APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID" = inserted."APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY" = inserted."APP_LAST_UPDATE_USER_DIRECTORY"
    , DB_LAST_UPDATE_TIMESTAMP = getutcdate()
    , DB_LAST_UPDATE_USERID = user_name()
    from PIMS_ACQUISITION_FILE
    inner join inserted
    on (PIMS_ACQUISITION_FILE.ACQUISITION_FILE_ID = inserted.ACQUISITION_FILE_ID);

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_DOCQUE_I_S_U_TR
PRINT N'Create trigger dbo.PIMS_DOCQUE_I_S_U_TR'
GO
CREATE TRIGGER [dbo].[PIMS_DOCQUE_I_S_U_TR] ON PIMS_DOCUMENT_QUEUE INSTEAD OF UPDATE AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- validate concurrency control
  if exists (select 1 from inserted, deleted where inserted.CONCURRENCY_CONTROL_NUMBER != deleted.CONCURRENCY_CONTROL_NUMBER+1 AND inserted.DOCUMENT_QUEUE_ID = deleted.DOCUMENT_QUEUE_ID)
    raiserror('CONCURRENCY FAILURE.',16,1)


  -- update statement
  update PIMS_DOCUMENT_QUEUE
    set "DOCUMENT_QUEUE_ID" = inserted."DOCUMENT_QUEUE_ID",
      "DOCUMENT_ID" = inserted."DOCUMENT_ID",
      "DOCUMENT_QUEUE_STATUS_TYPE_CODE" = inserted."DOCUMENT_QUEUE_STATUS_TYPE_CODE",
      "DATA_SOURCE_TYPE_CODE" = inserted."DATA_SOURCE_TYPE_CODE",
      "PROPERTY_ACTIVITY_DOCUMENT_ID" = inserted."PROPERTY_ACTIVITY_DOCUMENT_ID",
      "ACQUISITION_FILE_DOCUMENT_ID" = inserted."ACQUISITION_FILE_DOCUMENT_ID",
      "RESEARCH_FILE_DOCUMENT_ID" = inserted."RESEARCH_FILE_DOCUMENT_ID",
      "LEASE_DOCUMENT_ID" = inserted."LEASE_DOCUMENT_ID",
      "DISPOSITION_FILE_DOCUMENT_ID" = inserted."DISPOSITION_FILE_DOCUMENT_ID",
      "FILE_NAME" = inserted."FILE_NAME",
      "DOCUMENT_EXTERNAL_ID" = inserted."DOCUMENT_EXTERNAL_ID",
      "DOCUMENT_METADATA" = inserted."DOCUMENT_METADATA",
      "DOC_PROCESS_START_DT" = inserted."DOC_PROCESS_START_DT",
      "DOC_PROCESS_END_DT" = inserted."DOC_PROCESS_END_DT",
      "DOC_PROCESS_RETRIES" = inserted."DOC_PROCESS_RETRIES",
      "MAYAN_ERROR" = inserted."MAYAN_ERROR",
      "DOCUMENT" = inserted."DOCUMENT",
      "CONCURRENCY_CONTROL_NUMBER" = inserted."CONCURRENCY_CONTROL_NUMBER",
      "APP_LAST_UPDATE_TIMESTAMP" = inserted."APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID" = inserted."APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID" = inserted."APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY" = inserted."APP_LAST_UPDATE_USER_DIRECTORY"
    , DB_LAST_UPDATE_TIMESTAMP = getutcdate()
    , DB_LAST_UPDATE_USERID = user_name()
    from PIMS_DOCUMENT_QUEUE
    inner join inserted
    on (PIMS_DOCUMENT_QUEUE.DOCUMENT_QUEUE_ID = inserted.DOCUMENT_QUEUE_ID);

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;

GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.PRJPER_PROJECT_PERSON_ROLE_TYPE_CODE_IDX
PRINT N'Create index dbo.PRJPER_PROJECT_PERSON_ROLE_TYPE_CODE_IDX'
GO
CREATE NONCLUSTERED INDEX [PRJPER_PROJECT_PERSON_ROLE_TYPE_CODE_IDX]
	ON [dbo].[PIMS_PROJECT_PERSON]([PROJECT_PERSON_ROLE_TYPE_CODE])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_LESDOC_PIM_DOCQUE_FK
PRINT N'Create foreign key constraint dbo.PIM_LESDOC_PIM_DOCQUE_FK'
GO
ALTER TABLE [dbo].[PIMS_DOCUMENT_QUEUE]
	ADD CONSTRAINT [PIM_LESDOC_PIM_DOCQUE_FK]
	FOREIGN KEY([LEASE_DOCUMENT_ID])
	REFERENCES [dbo].[PIMS_LEASE_DOCUMENT]([LEASE_DOCUMENT_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_DSPDOC_PIM_DOCQUE_FK
PRINT N'Create foreign key constraint dbo.PIM_DSPDOC_PIM_DOCQUE_FK'
GO
ALTER TABLE [dbo].[PIMS_DOCUMENT_QUEUE]
	ADD CONSTRAINT [PIM_DSPDOC_PIM_DOCQUE_FK]
	FOREIGN KEY([DISPOSITION_FILE_DOCUMENT_ID])
	REFERENCES [dbo].[PIMS_DISPOSITION_FILE_DOCUMENT]([DISPOSITION_FILE_DOCUMENT_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_PRACDO_PIM_DOCQUE_FK
PRINT N'Create foreign key constraint dbo.PIM_PRACDO_PIM_DOCQUE_FK'
GO
ALTER TABLE [dbo].[PIMS_DOCUMENT_QUEUE]
	ADD CONSTRAINT [PIM_PRACDO_PIM_DOCQUE_FK]
	FOREIGN KEY([PROPERTY_ACTIVITY_DOCUMENT_ID])
	REFERENCES [dbo].[PIMS_PROPERTY_ACTIVITY_DOCUMENT]([PROPERTY_ACTIVITY_DOCUMENT_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_RFLDOC_PIM_DOCQUE_FK
PRINT N'Create foreign key constraint dbo.PIM_RFLDOC_PIM_DOCQUE_FK'
GO
ALTER TABLE [dbo].[PIMS_DOCUMENT_QUEUE]
	ADD CONSTRAINT [PIM_RFLDOC_PIM_DOCQUE_FK]
	FOREIGN KEY([RESEARCH_FILE_DOCUMENT_ID])
	REFERENCES [dbo].[PIMS_RESEARCH_FILE_DOCUMENT]([RESEARCH_FILE_DOCUMENT_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_ACQDOC_PIM_DOCQUE_FK
PRINT N'Create foreign key constraint dbo.PIM_ACQDOC_PIM_DOCQUE_FK'
GO
ALTER TABLE [dbo].[PIMS_DOCUMENT_QUEUE]
	ADD CONSTRAINT [PIM_ACQDOC_PIM_DOCQUE_FK]
	FOREIGN KEY([ACQUISITION_FILE_DOCUMENT_ID])
	REFERENCES [dbo].[PIMS_ACQUISITION_FILE_DOCUMENT]([ACQUISITION_FILE_DOCUMENT_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_ACQ_FILE_ACQ_PROGRESS_HIST
PRINT N'Drop table dbo.PIMS_ACQ_FILE_ACQ_PROGRESS_HIST'
GO
DROP TABLE [dbo].[PIMS_ACQ_FILE_ACQ_PROGRESS_HIST]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_ACQ_FILE_ACQ_PROGRESS_H_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_ACQ_FILE_ACQ_PROGRESS_H_ID_SEQ'
GO
DROP SEQUENCE [dbo].[PIMS_ACQ_FILE_ACQ_PROGRESS_H_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_ACQ_FILE_PROGESS_TYPE
PRINT N'Drop table dbo.PIMS_ACQ_FILE_PROGESS_TYPE'
GO
DROP TABLE [dbo].[PIMS_ACQ_FILE_PROGESS_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_ACQ_FILE_ACQ_PROGRESS_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_ACQ_FILE_ACQ_PROGRESS_ID_SEQ'
GO
DROP SEQUENCE [dbo].[PIMS_ACQ_FILE_ACQ_PROGRESS_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP_HIST
PRINT N'Drop table dbo.PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP_HIST'
GO
DROP TABLE [dbo].[PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP_HIST]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP_H_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP_H_ID_SEQ'
GO
DROP SEQUENCE [dbo].[PIMS_ACQ_FILE_ACQ_FL_TAKE_TYP_H_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_ACQ_FILE_ACQ_FL_TAKE_TYPE_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_ACQ_FILE_ACQ_FL_TAKE_TYPE_ID_SEQ'
GO
DROP SEQUENCE [dbo].[PIMS_ACQ_FILE_ACQ_FL_TAKE_TYPE_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_ACQ_FILE_TAKE_TYPE
PRINT N'Drop table dbo.PIMS_ACQ_FILE_TAKE_TYPE'
GO
DROP TABLE [dbo].[PIMS_ACQ_FILE_TAKE_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_ACQ_FILE_EXPROP_RISK_TYPE
PRINT N'Drop table dbo.PIMS_ACQ_FILE_EXPROP_RISK_TYPE'
GO
DROP TABLE [dbo].[PIMS_ACQ_FILE_EXPROP_RISK_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_ACQ_FILE_LGL_SRVY_TYPE
PRINT N'Drop table dbo.PIMS_ACQ_FILE_LGL_SRVY_TYPE'
GO
DROP TABLE [dbo].[PIMS_ACQ_FILE_LGL_SRVY_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_ACQ_FILE_APPRAISAL_TYPE
PRINT N'Drop table dbo.PIMS_ACQ_FILE_APPRAISAL_TYPE'
GO
DROP TABLE [dbo].[PIMS_ACQ_FILE_APPRAISAL_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

COMMIT TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DECLARE @Success AS BIT
SET @Success = 1
SET NOEXEC OFF
IF (@Success = 1) PRINT 'The database update succeeded'
ELSE BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   PRINT 'The database update failed'
END
GO
