-- Script generated by Aqua Data Studio Schema Synchronization for MS SQL Server 2016 on Fri Feb 03 10:41:45 PST 2023
-- Execute this script on:
-- 		PSP_PIMS_S47_00/dbo - This database/schema will be modified
-- to synchronize it with MS SQL Server 2016:
-- 		PSP_PIMS_S46_00/dbo

-- We recommend backing up the database prior to executing the script.

SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
GO
BEGIN TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_LESCON_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_LESCON_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_LESCON_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_LESCON_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_LESCON_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_LESCON_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_LESCON_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_LESCON_A_S_IUD_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_LESCON_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_CONTYP_PIM_LESCON_FK
PRINT N'Drop foreign key constraint dbo.PIM_CONTYP_PIM_LESCON_FK'
GO
ALTER TABLE [dbo].[PIMS_LEASE_CONSULTATION]
	DROP CONSTRAINT IF EXISTS [PIM_CONTYP_PIM_LESCON_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_LEASE_PIM_LESCON_FK
PRINT N'Drop foreign key constraint dbo.PIM_LEASE_PIM_LESCON_FK'
GO
ALTER TABLE [dbo].[PIMS_LEASE_CONSULTATION]
	DROP CONSTRAINT IF EXISTS [PIM_LEASE_PIM_LESCON_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_CONSTY_PIM_CONTYP_FK
PRINT N'Drop foreign key constraint dbo.PIM_CONSTY_PIM_CONTYP_FK'
GO
ALTER TABLE [dbo].[PIMS_CONSULTATION_TYPE]
	DROP CONSTRAINT IF EXISTS [PIM_CONSTY_PIM_CONTYP_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_DOCMNT_PIM_LESDOC_FK
PRINT N'Drop foreign key constraint dbo.PIM_DOCMNT_PIM_LESDOC_FK'
GO
ALTER TABLE [dbo].[PIMS_LEASE_DOCUMENT]
	DROP CONSTRAINT IF EXISTS [PIM_DOCMNT_PIM_LESDOC_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_LEASE_PIM_LESDOC_FK
PRINT N'Drop foreign key constraint dbo.PIM_LEASE_PIM_LESDOC_FK'
GO
ALTER TABLE [dbo].[PIMS_LEASE_DOCUMENT]
	DROP CONSTRAINT IF EXISTS [PIM_LEASE_PIM_LESDOC_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_LEASE_PIM_LESNOT_FK
PRINT N'Drop foreign key constraint dbo.PIM_LEASE_PIM_LESNOT_FK'
GO
ALTER TABLE [dbo].[PIMS_LEASE_NOTE]
	DROP CONSTRAINT IF EXISTS [PIM_LEASE_PIM_LESNOT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_NOTE_PIM_LESNOT_FK
PRINT N'Drop foreign key constraint dbo.PIM_NOTE_PIM_LESNOT_FK'
GO
ALTER TABLE [dbo].[PIMS_LEASE_NOTE]
	DROP CONSTRAINT IF EXISTS [PIM_NOTE_PIM_LESNOT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_PROJCT_PIM_RFLPRJ_FK
PRINT N'Drop foreign key constraint dbo.PIM_PROJCT_PIM_RFLPRJ_FK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_PROJECT]
	DROP CONSTRAINT IF EXISTS [PIM_PROJCT_PIM_RFLPRJ_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_RESRCH_PIM_RFLPRJ_FK
PRINT N'Drop foreign key constraint dbo.PIM_RESRCH_PIM_RFLPRJ_FK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_PROJECT]
	DROP CONSTRAINT IF EXISTS [PIM_RESRCH_PIM_RFLPRJ_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_RESRCH_PIM_RFLDOC_FK
PRINT N'Drop foreign key constraint dbo.PIM_RESRCH_PIM_RFLDOC_FK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT]
	DROP CONSTRAINT IF EXISTS [PIM_RESRCH_PIM_RFLDOC_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_DOCMNT_PIM_RFLDOC_FK
PRINT N'Drop foreign key constraint dbo.PIM_DOCMNT_PIM_RFLDOC_FK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT]
	DROP CONSTRAINT IF EXISTS [PIM_DOCMNT_PIM_RFLDOC_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_RESRCH_PIM_RFLNOT_FK
PRINT N'Drop foreign key constraint dbo.PIM_RESRCH_PIM_RFLNOT_FK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE]
	DROP CONSTRAINT IF EXISTS [PIM_RESRCH_PIM_RFLNOT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop foreign key constraint dbo.PIM_NOTE_PIM_RFLNOT_FK
PRINT N'Drop foreign key constraint dbo.PIM_NOTE_PIM_RFLNOT_FK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE]
	DROP CONSTRAINT IF EXISTS [PIM_NOTE_PIM_RFLNOT_FK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.LESCON_LEASE_ID_IDX
PRINT N'Drop index dbo.LESCON_LEASE_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_LEASE_CONSULTATION].[LESCON_LEASE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.LESCON_CONSULTATION_TYPE_CODE_IDX
PRINT N'Drop index dbo.LESCON_CONSULTATION_TYPE_CODE_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_LEASE_CONSULTATION].[LESCON_CONSULTATION_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_CONTYP_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_CONTYP_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_CONTYP_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_CONTYP_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_CONTYP_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_CONTYP_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.CONTYP_CONSULTATION_STATUS_TYPE_CODE_IDX
PRINT N'Drop index dbo.CONTYP_CONSULTATION_STATUS_TYPE_CODE_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_CONSULTATION_TYPE].[CONTYP_CONSULTATION_STATUS_TYPE_CODE_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_CONSTY_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_CONSTY_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_CONSTY_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_CONSTY_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_CONSTY_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_CONSTY_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_LESNOT_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_LESNOT_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_LESNOT_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_LESNOT_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_LESNOT_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_LESNOT_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_LESDOC_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_LESDOC_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_LESDOC_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_LESDOC_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_LESDOC_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_LESDOC_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_LESDOC_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_LESDOC_A_S_IUD_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_LESDOC_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.LESDOC_LEASE_ID_IDX
PRINT N'Drop index dbo.LESDOC_LEASE_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_LEASE_DOCUMENT].[LESDOC_LEASE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.LESDOC_DOCUMENT_ID_IDX
PRINT N'Drop index dbo.LESDOC_DOCUMENT_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_LEASE_DOCUMENT].[LESDOC_DOCUMENT_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_LESNOT_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_LESNOT_A_S_IUD_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_LESNOT_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.LESNOT_NOTE_ID_IDX
PRINT N'Drop index dbo.LESNOT_NOTE_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_LEASE_NOTE].[LESNOT_NOTE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.LESNOT_LEASE_ID_IDX
PRINT N'Drop index dbo.LESNOT_LEASE_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_LEASE_NOTE].[LESNOT_LEASE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_RFLDOC_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_RFLDOC_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_RFLDOC_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_RFLDOC_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_RFLDOC_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_RFLDOC_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_RFLDOC_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_RFLDOC_A_S_IUD_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_RFLDOC_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.RFLDOC_RESEARCH_FILE_ID_IDX
PRINT N'Drop index dbo.RFLDOC_RESEARCH_FILE_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_RESEARCH_FILE_DOCUMENT].[RFLDOC_RESEARCH_FILE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.RFLDOC_DOCUMENT_ID_IDX
PRINT N'Drop index dbo.RFLDOC_DOCUMENT_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_RESEARCH_FILE_DOCUMENT].[RFLDOC_DOCUMENT_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_RFLNOT_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_RFLNOT_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_RFLNOT_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_RFLNOT_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_RFLNOT_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_RFLNOT_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_RFLNOT_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_RFLNOT_A_S_IUD_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_RFLNOT_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.RFLNOT_RESEARCH_FILE_ID_IDX
PRINT N'Drop index dbo.RFLNOT_RESEARCH_FILE_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_RESEARCH_FILE_NOTE].[RFLNOT_RESEARCH_FILE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.RFLNOT_NOTE_ID_IDX
PRINT N'Drop index dbo.RFLNOT_NOTE_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_RESEARCH_FILE_NOTE].[RFLNOT_NOTE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_RFLPRJ_I_S_U_TR
PRINT N'Drop trigger dbo.PIMS_RFLPRJ_I_S_U_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_RFLPRJ_I_S_U_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_RFLPRJ_I_S_I_TR
PRINT N'Drop trigger dbo.PIMS_RFLPRJ_I_S_I_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_RFLPRJ_I_S_I_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop trigger dbo.PIMS_RFLPRJ_A_S_IUD_TR
PRINT N'Drop trigger dbo.PIMS_RFLPRJ_A_S_IUD_TR'
GO
DROP TRIGGER IF EXISTS [dbo].[PIMS_RFLPRJ_A_S_IUD_TR]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.RFLPRJ_RESEARCH_FILE_ID_IDX
PRINT N'Drop index dbo.RFLPRJ_RESEARCH_FILE_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_RESEARCH_FILE_PROJECT].[RFLPRJ_RESEARCH_FILE_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop index dbo.RFLPRJ_PROJECT_ID_IDX
PRINT N'Drop index dbo.RFLPRJ_PROJECT_ID_IDX'
GO
DROP INDEX IF EXISTS [dbo].[PIMS_RESEARCH_FILE_PROJECT].[RFLPRJ_PROJECT_ID_IDX]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.LESCON_LEASE_CONSULTATION_TUC
PRINT N'Drop unique constraint dbo.LESCON_LEASE_CONSULTATION_TUC'
GO
ALTER TABLE [dbo].[PIMS_LEASE_CONSULTATION]
	DROP CONSTRAINT IF EXISTS [LESCON_LEASE_CONSULTATION_TUC]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.LESCON_PK
PRINT N'Drop primary key constraint dbo.LESCON_PK'
GO
ALTER TABLE [dbo].[PIMS_LEASE_CONSULTATION]
	DROP CONSTRAINT IF EXISTS [LESCON_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_LEASE_CONSULTATION
PRINT N'Drop table dbo.PIMS_LEASE_CONSULTATION'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_LEASE_CONSULTATION]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.CONTYP_PK
PRINT N'Drop primary key constraint dbo.CONTYP_PK'
GO
ALTER TABLE [dbo].[PIMS_CONSULTATION_TYPE]
	DROP CONSTRAINT IF EXISTS [CONTYP_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.CONSTY_PK
PRINT N'Drop primary key constraint dbo.CONSTY_PK'
GO
ALTER TABLE [dbo].[PIMS_CONSULTATION_STATUS_TYPE]
	DROP CONSTRAINT IF EXISTS [CONSTY_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PIMS_LESCON_H_UK
PRINT N'Drop unique constraint dbo.PIMS_LESCON_H_UK'
GO
ALTER TABLE [dbo].[PIMS_LEASE_CONSULTATION_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_LESCON_H_UK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PIMS_LESCON_H_PK
PRINT N'Drop primary key constraint dbo.PIMS_LESCON_H_PK'
GO
ALTER TABLE [dbo].[PIMS_LEASE_CONSULTATION_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_LESCON_H_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PIMS_LESDOC_H_UK
PRINT N'Drop unique constraint dbo.PIMS_LESDOC_H_UK'
GO
ALTER TABLE [dbo].[PIMS_LEASE_DOCUMENT_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_LESDOC_H_UK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PIMS_LESDOC_H_PK
PRINT N'Drop primary key constraint dbo.PIMS_LESDOC_H_PK'
GO
ALTER TABLE [dbo].[PIMS_LEASE_DOCUMENT_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_LESDOC_H_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.LESDOC_LEASE_DOCUMENT_TUC
PRINT N'Drop unique constraint dbo.LESDOC_LEASE_DOCUMENT_TUC'
GO
ALTER TABLE [dbo].[PIMS_LEASE_DOCUMENT]
	DROP CONSTRAINT IF EXISTS [LESDOC_LEASE_DOCUMENT_TUC]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.LESDOC_PK
PRINT N'Drop primary key constraint dbo.LESDOC_PK'
GO
ALTER TABLE [dbo].[PIMS_LEASE_DOCUMENT]
	DROP CONSTRAINT IF EXISTS [LESDOC_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_LEASE_DOCUMENT
PRINT N'Drop table dbo.PIMS_LEASE_DOCUMENT'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_LEASE_DOCUMENT]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.LESNOT_LEASE_NOTE_TUC
PRINT N'Drop unique constraint dbo.LESNOT_LEASE_NOTE_TUC'
GO
ALTER TABLE [dbo].[PIMS_LEASE_NOTE]
	DROP CONSTRAINT IF EXISTS [LESNOT_LEASE_NOTE_TUC]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.LESNOT_PK
PRINT N'Drop primary key constraint dbo.LESNOT_PK'
GO
ALTER TABLE [dbo].[PIMS_LEASE_NOTE]
	DROP CONSTRAINT IF EXISTS [LESNOT_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_LEASE_NOTE
PRINT N'Drop table dbo.PIMS_LEASE_NOTE'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_LEASE_NOTE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PIMS_LESNOT_H_UK
PRINT N'Drop unique constraint dbo.PIMS_LESNOT_H_UK'
GO
ALTER TABLE [dbo].[PIMS_LEASE_NOTE_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_LESNOT_H_UK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PIMS_LESNOT_H_PK
PRINT N'Drop primary key constraint dbo.PIMS_LESNOT_H_PK'
GO
ALTER TABLE [dbo].[PIMS_LEASE_NOTE_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_LESNOT_H_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PIMS_RFLPRJ_H_UK
PRINT N'Drop unique constraint dbo.PIMS_RFLPRJ_H_UK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_PROJECT_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_RFLPRJ_H_UK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PIMS_RFLPRJ_H_PK
PRINT N'Drop primary key constraint dbo.PIMS_RFLPRJ_H_PK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_PROJECT_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_RFLPRJ_H_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.RFLPRJ_RESEARCH_FILE_PROJECT_TUC
PRINT N'Drop unique constraint dbo.RFLPRJ_RESEARCH_FILE_PROJECT_TUC'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_PROJECT]
	DROP CONSTRAINT IF EXISTS [RFLPRJ_RESEARCH_FILE_PROJECT_TUC]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.RFLPRJ_PK
PRINT N'Drop primary key constraint dbo.RFLPRJ_PK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_PROJECT]
	DROP CONSTRAINT IF EXISTS [RFLPRJ_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_RESEARCH_FILE_PROJECT
PRINT N'Drop table dbo.PIMS_RESEARCH_FILE_PROJECT'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_RESEARCH_FILE_PROJECT]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PROJCT_DESCRIPTION_CODE_TUC
PRINT N'Drop unique constraint dbo.PROJCT_DESCRIPTION_CODE_TUC'
GO
ALTER TABLE [dbo].[PIMS_PROJECT]
	DROP CONSTRAINT IF EXISTS [PROJCT_DESCRIPTION_CODE_TUC]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PIMS_RFLNOT_H_UK
PRINT N'Drop unique constraint dbo.PIMS_RFLNOT_H_UK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_RFLNOT_H_UK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PIMS_RFLNOT_H_PK
PRINT N'Drop primary key constraint dbo.PIMS_RFLNOT_H_PK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_RFLNOT_H_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.PIMS_RFLDOC_H_UK
PRINT N'Drop unique constraint dbo.PIMS_RFLDOC_H_UK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_RFLDOC_H_UK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.PIMS_RFLDOC_H_PK
PRINT N'Drop primary key constraint dbo.PIMS_RFLDOC_H_PK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT_HIST]
	DROP CONSTRAINT IF EXISTS [PIMS_RFLDOC_H_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.RFLDOC_RESEARCH_FILE_DOCUMENT_TUC
PRINT N'Drop unique constraint dbo.RFLDOC_RESEARCH_FILE_DOCUMENT_TUC'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT]
	DROP CONSTRAINT IF EXISTS [RFLDOC_RESEARCH_FILE_DOCUMENT_TUC]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.RFLDOC_PK
PRINT N'Drop primary key constraint dbo.RFLDOC_PK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT]
	DROP CONSTRAINT IF EXISTS [RFLDOC_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop unique constraint dbo.RFLNOT_RSRCH_FILE_NOTE_TUC
PRINT N'Drop unique constraint dbo.RFLNOT_RSRCH_FILE_NOTE_TUC'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE]
	DROP CONSTRAINT IF EXISTS [RFLNOT_RSRCH_FILE_NOTE_TUC]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop primary key constraint dbo.RFLNOT_PK
PRINT N'Drop primary key constraint dbo.RFLNOT_PK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE]
	DROP CONSTRAINT IF EXISTS [RFLNOT_PK]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_RESEARCH_FILE_NOTE
PRINT N'Alter table dbo.PIMS_RESEARCH_FILE_NOTE'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] DROP CONSTRAINT IF EXISTS [RFLNOT_RESEARCH_FILE_NOTE_ID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] ADD CONSTRAINT [RSCNOT_RESEARCH_FILE_NOTE_ID_DEF] DEFAULT (NEXT VALUE FOR [PIMS_RESEARCH_FILE_NOTE_ID_SEQ]) FOR [RESEARCH_FILE_NOTE_ID]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] DROP CONSTRAINT IF EXISTS [RFLNOT_IS_DISABLED_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] ADD CONSTRAINT [RSCNOT_IS_DISABLED_DEF] DEFAULT (CONVERT([bit],(0))) FOR [IS_DISABLED]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] DROP CONSTRAINT IF EXISTS [RFLNOT_CONCURRENCY_CONTROL_NUMBER_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] ADD CONSTRAINT [RSCNOT_CONCURRENCY_CONTROL_NUMBER_DEF] DEFAULT ((1)) FOR [CONCURRENCY_CONTROL_NUMBER]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] DROP CONSTRAINT IF EXISTS [RFLNOT_APP_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] ADD CONSTRAINT [RSCNOT_APP_CREATE_TIMESTAMP_DEF] DEFAULT (getutcdate()) FOR [APP_CREATE_TIMESTAMP]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] DROP CONSTRAINT IF EXISTS [RFLNOT_APP_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] ADD CONSTRAINT [RSCNOT_APP_CREATE_USERID_DEF] DEFAULT (user_name()) FOR [APP_CREATE_USERID]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] DROP CONSTRAINT IF EXISTS [RFLNOT_APP_CREATE_USER_DIRECTORY_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] ADD CONSTRAINT [RSCNOT_APP_CREATE_USER_DIRECTORY_DEF] DEFAULT (user_name()) FOR [APP_CREATE_USER_DIRECTORY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] DROP CONSTRAINT IF EXISTS [RFLNOT_APP_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] ADD CONSTRAINT [RSCNOT_APP_LAST_UPDATE_TIMESTAMP_DEF] DEFAULT (getutcdate()) FOR [APP_LAST_UPDATE_TIMESTAMP]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] DROP CONSTRAINT IF EXISTS [RFLNOT_APP_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] ADD CONSTRAINT [RSCNOT_APP_LAST_UPDATE_USERID_DEF] DEFAULT (user_name()) FOR [APP_LAST_UPDATE_USERID]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] DROP CONSTRAINT IF EXISTS [RFLNOT_APP_LAST_UPDATE_USER_DIRECTORY_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] ADD CONSTRAINT [RSCNOT_APP_LAST_UPDATE_USER_DIRECTORY_DEF] DEFAULT (user_name()) FOR [APP_LAST_UPDATE_USER_DIRECTORY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] DROP CONSTRAINT IF EXISTS [RFLNOT_DB_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] ADD CONSTRAINT [RSCNOT_DB_CREATE_TIMESTAMP_DEF] DEFAULT (getutcdate()) FOR [DB_CREATE_TIMESTAMP]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] DROP CONSTRAINT IF EXISTS [RFLNOT_DB_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] ADD CONSTRAINT [RSCNOT_DB_CREATE_USERID_DEF] DEFAULT (user_name()) FOR [DB_CREATE_USERID]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] DROP CONSTRAINT IF EXISTS [RFLNOT_DB_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] ADD CONSTRAINT [RSCNOT_DB_LAST_UPDATE_TIMESTAMP_DEF] DEFAULT (getutcdate()) FOR [DB_LAST_UPDATE_TIMESTAMP]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] DROP CONSTRAINT IF EXISTS [RFLNOT_DB_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE] ADD CONSTRAINT [RSCNOT_DB_LAST_UPDATE_USERID_DEF] DEFAULT (user_name()) FOR [DB_LAST_UPDATE_USERID]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE]
	ADD CONSTRAINT [RSCNOT_PK]
	PRIMARY KEY CLUSTERED ([RESEARCH_FILE_NOTE_ID], [RESEARCH_FILE_ID])-- 
	WITH (
		DATA_COMPRESSION = NONE
	) ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create unique constraint dbo.RSCNOT_RSRCH_FILE_NOTE_TUC
PRINT N'Create unique constraint dbo.RSCNOT_RSRCH_FILE_NOTE_TUC'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE]
	ADD CONSTRAINT [RSCNOT_RSRCH_FILE_NOTE_TUC]
	UNIQUE ([NOTE_ID], [RESEARCH_FILE_ID])-- 
	WITH (
		DATA_COMPRESSION = NONE
	) ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_RESEARCH_FILE_DOCUMENT
PRINT N'Alter table dbo.PIMS_RESEARCH_FILE_DOCUMENT'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] DROP CONSTRAINT IF EXISTS [RFLDOC_RESEARCH_FILE_DOCUMENT_ID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] ADD CONSTRAINT [RSCDOC_RESEARCH_FILE_DOCUMENT_ID_DEF] DEFAULT (NEXT VALUE FOR [PIMS_RESEARCH_FILE_DOCUMENT_ID_SEQ]) FOR [RESEARCH_FILE_DOCUMENT_ID]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] DROP CONSTRAINT IF EXISTS [RFLDOC_IS_DISABLED_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] ADD CONSTRAINT [RSCDOC_IS_DISABLED_DEF] DEFAULT (CONVERT([bit],(0))) FOR [IS_DISABLED]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] DROP CONSTRAINT IF EXISTS [RFLDOC_CONCURRENCY_CONTROL_NUMBER_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] ADD CONSTRAINT [RSCDOC_CONCURRENCY_CONTROL_NUMBER_DEF] DEFAULT ((1)) FOR [CONCURRENCY_CONTROL_NUMBER]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] DROP CONSTRAINT IF EXISTS [RFLDOC_APP_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] ADD CONSTRAINT [RSCDOC_APP_CREATE_TIMESTAMP_DEF] DEFAULT (getutcdate()) FOR [APP_CREATE_TIMESTAMP]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] DROP CONSTRAINT IF EXISTS [RFLDOC_APP_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] ADD CONSTRAINT [RSCDOC_APP_CREATE_USERID_DEF] DEFAULT (user_name()) FOR [APP_CREATE_USERID]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] DROP CONSTRAINT IF EXISTS [RFLDOC_APP_CREATE_USER_DIRECTORY_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] ADD CONSTRAINT [RSCDOC_APP_CREATE_USER_DIRECTORY_DEF] DEFAULT (user_name()) FOR [APP_CREATE_USER_DIRECTORY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] DROP CONSTRAINT IF EXISTS [RFLDOC_APP_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] ADD CONSTRAINT [RSCDOC_APP_LAST_UPDATE_TIMESTAMP_DEF] DEFAULT (getutcdate()) FOR [APP_LAST_UPDATE_TIMESTAMP]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] DROP CONSTRAINT IF EXISTS [RFLDOC_APP_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] ADD CONSTRAINT [RSCDOC_APP_LAST_UPDATE_USERID_DEF] DEFAULT (user_name()) FOR [APP_LAST_UPDATE_USERID]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] DROP CONSTRAINT IF EXISTS [RFLDOC_APP_LAST_UPDATE_USER_DIRECTORY_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] ADD CONSTRAINT [RSCDOC_APP_LAST_UPDATE_USER_DIRECTORY_DEF] DEFAULT (user_name()) FOR [APP_LAST_UPDATE_USER_DIRECTORY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] DROP CONSTRAINT IF EXISTS [RFLDOC_DB_CREATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] ADD CONSTRAINT [RSCDOC_DB_CREATE_TIMESTAMP_DEF] DEFAULT (getutcdate()) FOR [DB_CREATE_TIMESTAMP]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] DROP CONSTRAINT IF EXISTS [RFLDOC_DB_CREATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] ADD CONSTRAINT [RSCDOC_DB_CREATE_USERID_DEF] DEFAULT (user_name()) FOR [DB_CREATE_USERID]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] DROP CONSTRAINT IF EXISTS [RFLDOC_DB_LAST_UPDATE_TIMESTAMP_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] ADD CONSTRAINT [RSCDOC_DB_LAST_UPDATE_TIMESTAMP_DEF] DEFAULT (getutcdate()) FOR [DB_LAST_UPDATE_TIMESTAMP]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] DROP CONSTRAINT IF EXISTS [RFLDOC_DB_LAST_UPDATE_USERID_DEF]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT] ADD CONSTRAINT [RSCDOC_DB_LAST_UPDATE_USERID_DEF] DEFAULT (user_name()) FOR [DB_LAST_UPDATE_USERID]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT]
	ADD CONSTRAINT [RSCDOC_PK]
	PRIMARY KEY CLUSTERED ([RESEARCH_FILE_DOCUMENT_ID])-- 
	WITH (
		DATA_COMPRESSION = NONE
	) ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create unique constraint dbo.RSCDOC_RESEARCH_FILE_DOCUMENT_TUC
PRINT N'Create unique constraint dbo.RSCDOC_RESEARCH_FILE_DOCUMENT_TUC'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT]
	ADD CONSTRAINT [RSCDOC_RESEARCH_FILE_DOCUMENT_TUC]
	UNIQUE ([DOCUMENT_ID], [RESEARCH_FILE_ID])-- 
	WITH (
		DATA_COMPRESSION = NONE
	) ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_RESEARCH_FILE_DOCUMENT_HIST
PRINT N'Alter table dbo.PIMS_RESEARCH_FILE_DOCUMENT_HIST'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT_HIST]
	ADD CONSTRAINT [PIMS_RSCDOC_H_PK]
	PRIMARY KEY CLUSTERED ([_RESEARCH_FILE_DOCUMENT_HIST_ID])-- 
	WITH (
		DATA_COMPRESSION = NONE
	) ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create unique constraint dbo.PIMS_RSCDOC_H_UK
PRINT N'Create unique constraint dbo.PIMS_RSCDOC_H_UK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT_HIST]
	ADD CONSTRAINT [PIMS_RSCDOC_H_UK]
	UNIQUE ([_RESEARCH_FILE_DOCUMENT_HIST_ID], [END_DATE_HIST])-- 
	WITH (
		DATA_COMPRESSION = NONE
	) ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Alter table dbo.PIMS_RESEARCH_FILE_NOTE_HIST
PRINT N'Alter table dbo.PIMS_RESEARCH_FILE_NOTE_HIST'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE_HIST]
	ADD CONSTRAINT [PIMS_RSCNOT_H_PK]
	PRIMARY KEY CLUSTERED ([_RESEARCH_FILE_NOTE_HIST_ID])-- 
	WITH (
		DATA_COMPRESSION = NONE
	) ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create unique constraint dbo.PIMS_RSCNOT_H_UK
PRINT N'Create unique constraint dbo.PIMS_RSCNOT_H_UK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE_HIST]
	ADD CONSTRAINT [PIMS_RSCNOT_H_UK]
	UNIQUE ([_RESEARCH_FILE_NOTE_HIST_ID], [END_DATE_HIST])-- 
	WITH (
		DATA_COMPRESSION = NONE
	) ON [PRIMARY]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.RSCNOT_NOTE_ID_IDX
PRINT N'Create index dbo.RSCNOT_NOTE_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [RSCNOT_NOTE_ID_IDX]
	ON [dbo].[PIMS_RESEARCH_FILE_NOTE]([NOTE_ID])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.RSCNOT_RESEARCH_FILE_ID_IDX
PRINT N'Create index dbo.RSCNOT_RESEARCH_FILE_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [RSCNOT_RESEARCH_FILE_ID_IDX]
	ON [dbo].[PIMS_RESEARCH_FILE_NOTE]([RESEARCH_FILE_ID])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.RSCDOC_RESEARCH_FILE_ID_IDX
PRINT N'Create index dbo.RSCDOC_RESEARCH_FILE_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [RSCDOC_RESEARCH_FILE_ID_IDX]
	ON [dbo].[PIMS_RESEARCH_FILE_DOCUMENT]([RESEARCH_FILE_ID])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create index dbo.RSCDOC_DOCUMENT_ID_IDX
PRINT N'Create index dbo.RSCDOC_DOCUMENT_ID_IDX'
GO
CREATE NONCLUSTERED INDEX [RSCDOC_DOCUMENT_ID_IDX]
	ON [dbo].[PIMS_RESEARCH_FILE_DOCUMENT]([DOCUMENT_ID])
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_RSCDOC_A_S_IUD_TR
PRINT N'Create trigger dbo.PIMS_RSCDOC_A_S_IUD_TR'
GO
CREATE TRIGGER [dbo].[PIMS_RSCDOC_A_S_IUD_TR] ON PIMS_RESEARCH_FILE_DOCUMENT FOR INSERT, UPDATE, DELETE AS
SET NOCOUNT ON
BEGIN TRY
DECLARE @curr_date datetime;
SET @curr_date = getutcdate();
  IF NOT EXISTS(SELECT * FROM inserted) AND NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- historical
  IF EXISTS(SELECT * FROM deleted)
    update PIMS_RESEARCH_FILE_DOCUMENT_HIST set END_DATE_HIST = @curr_date where RESEARCH_FILE_DOCUMENT_ID in (select RESEARCH_FILE_DOCUMENT_ID from deleted) and END_DATE_HIST is null;
  
  IF EXISTS(SELECT * FROM inserted)
    insert into PIMS_RESEARCH_FILE_DOCUMENT_HIST ([RESEARCH_FILE_DOCUMENT_ID], [RESEARCH_FILE_ID], [DOCUMENT_ID], [APP_CREATE_TIMESTAMP], [APP_CREATE_USER_DIRECTORY], [APP_CREATE_USER_GUID], [APP_CREATE_USERID], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USER_DIRECTORY], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USERID], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [IS_DISABLED], _RESEARCH_FILE_DOCUMENT_HIST_ID, END_DATE_HIST, EFFECTIVE_DATE_HIST)
      select [RESEARCH_FILE_DOCUMENT_ID], [RESEARCH_FILE_ID], [DOCUMENT_ID], [APP_CREATE_TIMESTAMP], [APP_CREATE_USER_DIRECTORY], [APP_CREATE_USER_GUID], [APP_CREATE_USERID], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USER_DIRECTORY], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USERID], [CONCURRENCY_CONTROL_NUMBER], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [IS_DISABLED], (next value for [dbo].[PIMS_RESEARCH_FILE_DOCUMENT_H_ID_SEQ]) as [_RESEARCH_FILE_DOCUMENT_HIST_ID], null as [END_DATE_HIST], @curr_date as [EFFECTIVE_DATE_HIST] from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;


GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_RSCDOC_I_S_U_TR
PRINT N'Create trigger dbo.PIMS_RSCDOC_I_S_U_TR'
GO
CREATE TRIGGER [dbo].[PIMS_RSCDOC_I_S_U_TR] ON PIMS_RESEARCH_FILE_DOCUMENT INSTEAD OF UPDATE AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- validate concurrency control
  if exists (select 1 from inserted, deleted where inserted.CONCURRENCY_CONTROL_NUMBER != deleted.CONCURRENCY_CONTROL_NUMBER+1 AND inserted.RESEARCH_FILE_DOCUMENT_ID = deleted.RESEARCH_FILE_DOCUMENT_ID)
    raiserror('CONCURRENCY FAILURE.',16,1)


  -- update statement
  update PIMS_RESEARCH_FILE_DOCUMENT
    set "RESEARCH_FILE_DOCUMENT_ID" = inserted."RESEARCH_FILE_DOCUMENT_ID",
      "RESEARCH_FILE_ID" = inserted."RESEARCH_FILE_ID",
      "DOCUMENT_ID" = inserted."DOCUMENT_ID",
      "APP_LAST_UPDATE_TIMESTAMP" = inserted."APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USER_DIRECTORY" = inserted."APP_LAST_UPDATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_USER_GUID" = inserted."APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USERID" = inserted."APP_LAST_UPDATE_USERID",
      "CONCURRENCY_CONTROL_NUMBER" = inserted."CONCURRENCY_CONTROL_NUMBER",
      "IS_DISABLED" = inserted."IS_DISABLED"
    , DB_LAST_UPDATE_TIMESTAMP = getutcdate()
    , DB_LAST_UPDATE_USERID = user_name()
    from PIMS_RESEARCH_FILE_DOCUMENT
    inner join inserted
    on (PIMS_RESEARCH_FILE_DOCUMENT.RESEARCH_FILE_DOCUMENT_ID = inserted.RESEARCH_FILE_DOCUMENT_ID);

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;


GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_RSCNOT_I_S_U_TR
PRINT N'Create trigger dbo.PIMS_RSCNOT_I_S_U_TR'
GO
CREATE TRIGGER [dbo].[PIMS_RSCNOT_I_S_U_TR] ON PIMS_RESEARCH_FILE_NOTE INSTEAD OF UPDATE AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- validate concurrency control
  if exists (select 1 from inserted, deleted where inserted.CONCURRENCY_CONTROL_NUMBER != deleted.CONCURRENCY_CONTROL_NUMBER+1 AND inserted.RESEARCH_FILE_ID = deleted.RESEARCH_FILE_ID and inserted.RESEARCH_FILE_NOTE_ID = deleted.RESEARCH_FILE_NOTE_ID)
    raiserror('CONCURRENCY FAILURE.',16,1)


  -- update statement
  update PIMS_RESEARCH_FILE_NOTE
    set "RESEARCH_FILE_NOTE_ID" = inserted."RESEARCH_FILE_NOTE_ID",
      "RESEARCH_FILE_ID" = inserted."RESEARCH_FILE_ID",
      "NOTE_ID" = inserted."NOTE_ID",
      "IS_DISABLED" = inserted."IS_DISABLED",
      "CONCURRENCY_CONTROL_NUMBER" = inserted."CONCURRENCY_CONTROL_NUMBER",
      "APP_LAST_UPDATE_TIMESTAMP" = inserted."APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID" = inserted."APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID" = inserted."APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY" = inserted."APP_LAST_UPDATE_USER_DIRECTORY"
    , DB_LAST_UPDATE_TIMESTAMP = getutcdate()
    , DB_LAST_UPDATE_USERID = user_name()
    from PIMS_RESEARCH_FILE_NOTE
    inner join inserted
    on (PIMS_RESEARCH_FILE_NOTE.RESEARCH_FILE_ID = inserted.RESEARCH_FILE_ID and PIMS_RESEARCH_FILE_NOTE.RESEARCH_FILE_NOTE_ID = inserted.RESEARCH_FILE_NOTE_ID);

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;


GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_RSCDOC_I_S_I_TR
PRINT N'Create trigger dbo.PIMS_RSCDOC_I_S_I_TR'
GO
CREATE TRIGGER [dbo].[PIMS_RSCDOC_I_S_I_TR] ON PIMS_RESEARCH_FILE_DOCUMENT INSTEAD OF INSERT AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM inserted) 
    RETURN;

  
  insert into PIMS_RESEARCH_FILE_DOCUMENT ("RESEARCH_FILE_DOCUMENT_ID",
      "RESEARCH_FILE_ID",
      "DOCUMENT_ID",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USER_DIRECTORY",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USERID",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USERID",
      "CONCURRENCY_CONTROL_NUMBER",
      "IS_DISABLED")
    select "RESEARCH_FILE_DOCUMENT_ID",
      "RESEARCH_FILE_ID",
      "DOCUMENT_ID",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USER_DIRECTORY",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USERID",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USERID",
      "CONCURRENCY_CONTROL_NUMBER",
      "IS_DISABLED"
    from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;


GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_RSCNOT_A_S_IUD_TR
PRINT N'Create trigger dbo.PIMS_RSCNOT_A_S_IUD_TR'
GO
CREATE TRIGGER [dbo].[PIMS_RSCNOT_A_S_IUD_TR] ON PIMS_RESEARCH_FILE_NOTE FOR INSERT, UPDATE, DELETE AS
SET NOCOUNT ON
BEGIN TRY
DECLARE @curr_date datetime;
SET @curr_date = getutcdate();
  IF NOT EXISTS(SELECT * FROM inserted) AND NOT EXISTS(SELECT * FROM deleted) 
    RETURN;

  -- historical
  IF EXISTS(SELECT * FROM deleted)
    update PIMS_RESEARCH_FILE_NOTE_HIST set END_DATE_HIST = @curr_date where RESEARCH_FILE_NOTE_ID in (select RESEARCH_FILE_NOTE_ID from deleted) and END_DATE_HIST is null;
  
  IF EXISTS(SELECT * FROM inserted)
    insert into PIMS_RESEARCH_FILE_NOTE_HIST ([RESEARCH_FILE_NOTE_ID], [RESEARCH_FILE_ID], [NOTE_ID], [IS_DISABLED], [CONCURRENCY_CONTROL_NUMBER], [APP_CREATE_TIMESTAMP], [APP_CREATE_USERID], [APP_CREATE_USER_GUID], [APP_CREATE_USER_DIRECTORY], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USERID], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USER_DIRECTORY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], _RESEARCH_FILE_NOTE_HIST_ID, END_DATE_HIST, EFFECTIVE_DATE_HIST)
      select [RESEARCH_FILE_NOTE_ID], [RESEARCH_FILE_ID], [NOTE_ID], [IS_DISABLED], [CONCURRENCY_CONTROL_NUMBER], [APP_CREATE_TIMESTAMP], [APP_CREATE_USERID], [APP_CREATE_USER_GUID], [APP_CREATE_USER_DIRECTORY], [APP_LAST_UPDATE_TIMESTAMP], [APP_LAST_UPDATE_USERID], [APP_LAST_UPDATE_USER_GUID], [APP_LAST_UPDATE_USER_DIRECTORY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], (next value for [dbo].[PIMS_RESEARCH_FILE_NOTE_H_ID_SEQ]) as [_RESEARCH_FILE_NOTE_HIST_ID], null as [END_DATE_HIST], @curr_date as [EFFECTIVE_DATE_HIST] from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;


GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create trigger dbo.PIMS_RSCNOT_I_S_I_TR
PRINT N'Create trigger dbo.PIMS_RSCNOT_I_S_I_TR'
GO
CREATE TRIGGER [dbo].[PIMS_RSCNOT_I_S_I_TR] ON PIMS_RESEARCH_FILE_NOTE INSTEAD OF INSERT AS
SET NOCOUNT ON
BEGIN TRY
  IF NOT EXISTS(SELECT * FROM inserted) 
    RETURN;

  
  insert into PIMS_RESEARCH_FILE_NOTE ("RESEARCH_FILE_NOTE_ID",
      "RESEARCH_FILE_ID",
      "NOTE_ID",
      "IS_DISABLED",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY")
    select "RESEARCH_FILE_NOTE_ID",
      "RESEARCH_FILE_ID",
      "NOTE_ID",
      "IS_DISABLED",
      "CONCURRENCY_CONTROL_NUMBER",
      "APP_CREATE_TIMESTAMP",
      "APP_CREATE_USERID",
      "APP_CREATE_USER_GUID",
      "APP_CREATE_USER_DIRECTORY",
      "APP_LAST_UPDATE_TIMESTAMP",
      "APP_LAST_UPDATE_USERID",
      "APP_LAST_UPDATE_USER_GUID",
      "APP_LAST_UPDATE_USER_DIRECTORY"
    from inserted;

END TRY
BEGIN CATCH
   IF @@trancount > 0 ROLLBACK TRANSACTION
   EXEC pims_error_handling
END CATCH;


GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_RESRCH_PIM_RSCNOT_FK
PRINT N'Create foreign key constraint dbo.PIM_RESRCH_PIM_RSCNOT_FK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE]
	ADD CONSTRAINT [PIM_RESRCH_PIM_RSCNOT_FK]
	FOREIGN KEY([RESEARCH_FILE_ID])
	REFERENCES [dbo].[PIMS_RESEARCH_FILE]([RESEARCH_FILE_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_NOTE_PIM_RSCNOT_FK
PRINT N'Create foreign key constraint dbo.PIM_NOTE_PIM_RSCNOT_FK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_NOTE]
	ADD CONSTRAINT [PIM_NOTE_PIM_RSCNOT_FK]
	FOREIGN KEY([NOTE_ID])
	REFERENCES [dbo].[PIMS_NOTE]([NOTE_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_DOCMNT_PIM_RSCDOC_FK
PRINT N'Create foreign key constraint dbo.PIM_DOCMNT_PIM_RSCDOC_FK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT]
	ADD CONSTRAINT [PIM_DOCMNT_PIM_RSCDOC_FK]
	FOREIGN KEY([DOCUMENT_ID])
	REFERENCES [dbo].[PIMS_DOCUMENT]([DOCUMENT_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Create foreign key constraint dbo.PIM_RESRCH_PIM_RSCDOC_FK
PRINT N'Create foreign key constraint dbo.PIM_RESRCH_PIM_RSCDOC_FK'
GO
ALTER TABLE [dbo].[PIMS_RESEARCH_FILE_DOCUMENT]
	ADD CONSTRAINT [PIM_RESRCH_PIM_RSCDOC_FK]
	FOREIGN KEY([RESEARCH_FILE_ID])
	REFERENCES [dbo].[PIMS_RESEARCH_FILE]([RESEARCH_FILE_ID])
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION 
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_LEASE_CONSULTATION_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_LEASE_CONSULTATION_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_LEASE_CONSULTATION_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_CONSULTATION_TYPE
PRINT N'Drop table dbo.PIMS_CONSULTATION_TYPE'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_CONSULTATION_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_CONSULTATION_STATUS_TYPE
PRINT N'Drop table dbo.PIMS_CONSULTATION_STATUS_TYPE'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_CONSULTATION_STATUS_TYPE]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_LEASE_CONSULTATION_HIST
PRINT N'Drop table dbo.PIMS_LEASE_CONSULTATION_HIST'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_LEASE_CONSULTATION_HIST]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_LEASE_CONSULTATION_H_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_LEASE_CONSULTATION_H_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_LEASE_CONSULTATION_H_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_LEASE_DOCUMENT_HIST
PRINT N'Drop table dbo.PIMS_LEASE_DOCUMENT_HIST'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_LEASE_DOCUMENT_HIST]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_LEASE_DOCUMENT_H_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_LEASE_DOCUMENT_H_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_LEASE_DOCUMENT_H_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_LEASE_DOCUMENT_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_LEASE_DOCUMENT_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_LEASE_DOCUMENT_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_LEASE_NOTE_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_LEASE_NOTE_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_LEASE_NOTE_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_LEASE_NOTE_HIST
PRINT N'Drop table dbo.PIMS_LEASE_NOTE_HIST'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_LEASE_NOTE_HIST]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_LEASE_NOTE_H_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_LEASE_NOTE_H_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_LEASE_NOTE_H_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop table dbo.PIMS_RESEARCH_FILE_PROJECT_HIST
PRINT N'Drop table dbo.PIMS_RESEARCH_FILE_PROJECT_HIST'
GO
DROP TABLE IF EXISTS [dbo].[PIMS_RESEARCH_FILE_PROJECT_HIST]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_RESEARCH_FILE_PROJECT_H_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_RESEARCH_FILE_PROJECT_H_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_RESEARCH_FILE_PROJECT_H_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

-- Drop sequence dbo.PIMS_RESEARCH_FILE_PROJECT_ID_SEQ
PRINT N'Drop sequence dbo.PIMS_RESEARCH_FILE_PROJECT_ID_SEQ'
GO
DROP SEQUENCE IF EXISTS [dbo].[PIMS_RESEARCH_FILE_PROJECT_ID_SEQ]
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO

COMMIT TRANSACTION
GO
IF @@ERROR <> 0 SET NOEXEC ON
GO
DECLARE @Success AS BIT
SET @Success = 1
SET NOEXEC OFF
IF (@Success = 1) PRINT 'The database update succeeded'
ELSE BEGIN
   IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION
   PRINT 'The database update failed'
END
GO
