using System.Collections.Immutable;
using Mapster;
using Pims.Api.Helpers.Extensions;
using Pims.Core.Extensions;
using Pims.Dal.Entities;
using Pims.Dal.Helpers.Extensions;

namespace Pims.Api.Models.Concepts.Lease
{
    public class LeaseMap : IRegister
    {
        public void Register(TypeAdapterConfig config)
        {
            config.NewConfig<PimsLease, LeaseModel>()
                .PreserveReference(true)
                .Map(dest => dest.Id, src => src.LeaseId)
                .Map(dest => dest.RowVersion, src => src.ConcurrencyControlNumber)
                .Map(dest => dest.Amount, src => src.LeaseAmount)
                .Map(dest => dest.RenewalCount, src => src.PimsLeasePeriods.Count)
                .Map(dest => dest.FileProperties, src => src.PimsPropertyLeases)
                .Map(dest => dest.LFileNo, src => src.LFileNo)
                .Map(dest => dest.TfaFileNumber, src => src.TfaFileNumber)
                .Map(dest => dest.PsFileNo, src => src.PsFileNo)
                .Map(dest => dest.MotiName, src => src.MotiContact)
                .Map(dest => dest.ExpiryDate, src => src.OrigExpiryDate.ToNullableDateOnly())
                .Map(dest => dest.StartDate, src => src.OrigStartDate.ToNullableDateOnly())
                .Map(dest => dest.TerminationDate, src => src.TerminationDate.ToNullableDateOnly())
                .Map(dest => dest.ProgramName, src => src.GetProgramName())
                .Map(dest => dest.OtherProgramType, src => src.OtherLeaseProgramType)
                .Map(dest => dest.OtherType, src => src.OtherLeaseLicenseType)
                .Map(dest => dest.Region, src => src.RegionCodeNavigation)
                .Map(dest => dest.ProgramType, src => src.LeaseProgramTypeCodeNavigation)
                .Map(dest => dest.PaymentReceivableType, src => src.LeasePayRvblTypeCodeNavigation)
                .Map(dest => dest.Type, src => src.LeaseLicenseTypeCodeNavigation)
                .Map(dest => dest.LeasePurposes, src => src.PimsLeaseLeasePurposes)
                .Map(dest => dest.InitiatorType, src => src.LeaseInitiatorTypeCodeNavigation)
                .Map(dest => dest.FileStatusTypeCode, src => src.LeaseStatusTypeCodeNavigation)
                .Map(dest => dest.ResponsibilityType, src => src.LeaseResponsibilityTypeCodeNavigation)
                .Map(dest => dest.ResponsibilityEffectiveDate, src => src.ResponsibilityEffectiveDate.ToNullableDateOnly())
                .Map(dest => dest.DocumentationReference, src => src.DocumentationReference)
                .Map(dest => dest.Note, src => src.LeaseNotes)
                .Map(dest => dest.Description, src => src.LeaseDescription)
                .Map(dest => dest.Consultations, src => src.PimsLeaseConsultations)
                .Map(dest => dest.IsResidential, src => src.IsSubjectToRta)
                .Map(dest => dest.IsCommercialBuilding, src => src.IsCommBldg)
                .Map(dest => dest.IsOtherImprovement, src => src.IsOtherImprovement)
                .Map(dest => dest.ReturnNotes, src => src.ReturnNotes)
                .Map(dest => dest.IsExpired, src => src.IsExpired)
                .Map(dest => dest.HasPhysicalFile, src => src.HasPhysicalFile)
                .Map(dest => dest.HasDigitalLicense, src => src.HasDigitalLicense)
                .Map(dest => dest.HasDigitalFile, src => src.HasDigitalFile)
                .Map(dest => dest.HasPhysicalLicense, src => src.HasPhysicialLicense)
                .Map(dest => dest.CancellationReason, src => src.CancellationReason)
                .Map(dest => dest.TerminationReason, src => src.TerminationReason)
                .Map(dest => dest.Project, src => src.Project)
                .Map(dest => dest.ProductId, src => src.ProductId)
                .Map(dest => dest.Product, src => src.Product)
                .Map(dest => dest.TotalAllowableCompensation, src => src.TotalAllowableCompensation)
                .Map(dest => dest.Stakeholders, src => src.PimsLeaseStakeholders)
                .Map(dest => dest.FileChecklistItems, src => src.PimsLeaseChecklistItems)
                .Map(dest => dest.PrimaryArbitrationCity, src => src.PrimaryArbitrationCity)
                .Map(dest => dest.Periods, src => src.PimsLeasePeriods)
                .Map(dest => dest.IsPublicBenefit, src => src.IsPublicBenefit)
                .Map(dest => dest.IsFinancialGain, src => src.IsFinancialGain)
                .Map(dest => dest.FeeDeterminationNote, src => src.FeeDeterminationNote)
                .Map(dest => dest.Renewals, src => src.PimsLeaseRenewals)
                .Map(dest => dest.LeaseTeam, src => src.PimsLeaseLicenseTeams);

            config.NewConfig<LeaseModel, PimsLease>()
                .PreserveReference(true)
                .Map(dest => dest.LeaseId, src => src.Id)
                .Map(dest => dest.ConcurrencyControlNumber, src => src.RowVersion)
                .Map(dest => dest.LeaseAmount, src => src.Amount)
                .Map(dest => dest.PimsPropertyLeases, src => src.FileProperties.ToImmutableList())
                .Map(dest => dest.LFileNo, src => src.LFileNo)
                .Map(dest => dest.PsFileNo, src => src.PsFileNo)
                .Map(dest => dest.TfaFileNumber, src => src.TfaFileNumber)
                .Map(dest => dest.MotiContact, src => src.MotiName)
                .Map(dest => dest.OtherLeaseProgramType, src => src.OtherProgramType)
                .Map(dest => dest.OtherLeaseLicenseType, src => src.OtherType)
                .Map(dest => dest.OrigExpiryDate, src => src.ExpiryDate.ToNullableDateTime())
                .Map(dest => dest.OrigStartDate, src => src.StartDate.ToNullableDateTime())
                .Map(dest => dest.TerminationDate, src => src.TerminationDate.ToNullableDateTime())
                .Map(dest => dest.RegionCode, src => src.Region.Id)
                .Map(dest => dest.LeaseProgramTypeCode, src => src.ProgramType.GetTypeId())
                .Map(dest => dest.LeasePayRvblTypeCode, src => src.PaymentReceivableType.GetTypeId())
                .Map(dest => dest.LeaseLicenseTypeCode, src => src.Type.GetTypeId())
                .Map(dest => dest.PimsLeaseLeasePurposes, src => src.LeasePurposes)
                .Map(dest => dest.LeaseInitiatorTypeCode, src => src.InitiatorType.GetTypeId())
                .Map(dest => dest.LeaseResponsibilityTypeCode, src => src.ResponsibilityType.GetTypeId())
                .Map(dest => dest.LeaseStatusTypeCode, src => src.FileStatusTypeCode.GetTypeId())
                .Map(dest => dest.ResponsibilityEffectiveDate, src => src.ResponsibilityEffectiveDate.ToNullableDateTime())
                .Map(dest => dest.DocumentationReference, src => src.DocumentationReference)
                .Map(dest => dest.LeaseNotes, src => src.Note)
                .Map(dest => dest.LeaseDescription, src => src.Description)
                .Map(dest => dest.PimsLeaseConsultations, src => src.Consultations)
                .Map(dest => dest.IsExpired, src => src.IsExpired)
                .Map(dest => dest.HasPhysicalFile, src => src.HasPhysicalFile)
                .Map(dest => dest.HasPhysicialLicense, src => src.HasPhysicalLicense)
                .Map(dest => dest.HasDigitalFile, src => src.HasDigitalFile)
                .Map(dest => dest.HasDigitalLicense, src => src.HasDigitalLicense)
                .Map(dest => dest.CancellationReason, src => src.CancellationReason)
                .Map(dest => dest.TerminationReason, src => src.TerminationReason)
                .Map(dest => dest.PimsLeaseChecklistItems, src => src.FileChecklistItems)
                .Map(dest => dest.PrimaryArbitrationCity, src => src.PrimaryArbitrationCity)
                .Map(dest => dest.ProjectId, src => src.Project != null ? src.Project.Id : (long?)null)
                .Map(dest => dest.ProductId, src => src.ProductId)
                .Map(dest => dest.TotalAllowableCompensation, src => src.TotalAllowableCompensation)
                .Map(dest => dest.IsPublicBenefit, src => src.IsPublicBenefit)
                .Map(dest => dest.IsFinancialGain, src => src.IsFinancialGain)
                .Map(dest => dest.FeeDeterminationNote, src => src.FeeDeterminationNote)
                .Map(dest => dest.PimsLeaseRenewals, src => src.Renewals)
                .Map(dest => dest.PimsLeaseLicenseTeams, src => src.LeaseTeam)
                .IgnoreNullValues(true);
        }
    }
}
